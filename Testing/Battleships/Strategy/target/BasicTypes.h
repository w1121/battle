
/* Program generated by Cadvanced 6.2.0 9879 */
#define XSCT_CADVANCED

#ifndef XX_BasicTypes_H
#define XX_BasicTypes_H

/*************************************************************************
**                SECTION Types and Forward references                  **
*************************************************************************/

/*****
* PACKAGE BasicTypes
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun,4,1,9)
******/
extern XCONST struct xPackageIdStruct yPacR_z_BasicTypes__BasicTypes;

extern void yInit_BasicTypes (void);

/*****
* SYNONYM MaxXCoordinate
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,1,9)
******/
#define z_BasicTypes_1L_MaxXCoordinate 200
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1L_MaxXCoordinate;
#endif

/*****
* SYNONYM MaxYCoordinate
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,2,9)
******/
#define z_BasicTypes_1M_MaxYCoordinate 100
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1M_MaxYCoordinate;
#endif

/*****
* SYNONYM MaxWCPower
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,4,9)
******/
#define z_BasicTypes_1N_MaxWCPower 30
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1N_MaxWCPower;
#endif

/*****
* SYNONYM MaxWCRange
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,5,9)
******/
#define z_BasicTypes_1O_MaxWCRange 50
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1O_MaxWCRange;
#endif

/*****
* SYNONYM MaxWCSpeed
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,6,9)
******/
#define z_BasicTypes_1P_MaxWCSpeed 30
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1P_MaxWCSpeed;
#endif

/*****
* SYNONYM MaxSCRange
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,8,9)
******/
#define z_BasicTypes_1Q_MaxSCRange 100
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1Q_MaxSCRange;
#endif

/*****
* SYNONYM MaxSCMaxSpeed
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,9,9)
******/
#define z_BasicTypes_1R_MaxSCMaxSpeed 10
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1R_MaxSCMaxSpeed;
#endif

/*****
* SYNONYM MaxSCMaxAcceleration
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,10,9)
******/
#define z_BasicTypes_1S_MaxSCMaxAcceleration 5
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1S_MaxSCMaxAcceleration;
#endif

/*****
* SYNONYM MaxSCMaxResource
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,11,9)
******/
#define z_BasicTypes_1T_MaxSCMaxResource 100
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1T_MaxSCMaxResource;
#endif

/*****
* SYNONYM MaxAAWeaponry
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,13,9)
******/
#define z_BasicTypes_1U_MaxAAWeaponry 30
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1U_MaxAAWeaponry;
#endif

/*****
* SYNONYM MaxLUWeaponry
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,14,9)
******/
#define z_BasicTypes_1V_MaxLUWeaponry 5
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1V_MaxLUWeaponry;
#endif

/*****
* SYNONYM MaxTypeBattleship
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,16,9)
******/
#define z_BasicTypes_1W_MaxTypeBattleship 2
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1W_MaxTypeBattleship;
#endif

/*****
* SYNONYM MaxTypeCruiser
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,17,9)
******/
#define z_BasicTypes_1X_MaxTypeCruiser 2
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1X_MaxTypeCruiser;
#endif

/*****
* SYNONYM MaxTypeDestroyer
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,18,9)
******/
#define z_BasicTypes_1Y_MaxTypeDestroyer 2
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1Y_MaxTypeDestroyer;
#endif

/*****
* SYNONYM MaxTypeMissileCutter
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,19,9)
******/
#define z_BasicTypes_1Z_MaxTypeMissileCutter 2
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1Z_MaxTypeMissileCutter;
#endif

/*****
* SYNONYM MaxTypeRepairBoat
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,20,9)
******/
#define z_BasicTypes_20_MaxTypeRepairBoat 1
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_20_MaxTypeRepairBoat;
#endif

/*****
* SYNONYM AmountStrategy
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Work\Testing\Battleships\Config\ConfigFile.pr,22,9)
******/
#define z_BasicTypes_21_AmountStrategy 2
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_21_AmountStrategy;
#endif

/*****
* SYNONYM sqrt2
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),455(80,130),1,9)
******/
#define z_BasicTypes_22_sqrt2 SDL_REAL_LIT(1.41421356, 1, 414213560)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_22_sqrt2;
#endif

/*****
* SYNTYPE tSCRange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),1,9)
******/
#ifndef XTNOUSE_tSCRange
extern tSDLGenInfo ySDL_z_BasicTypes_17_tSCRange;
#endif
typedef SDL_Integer  z_BasicTypes_17_tSCRange;

/*****
* SYNTYPE tSCMaxSpeed  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),4,9)
******/
#ifndef XTNOUSE_tSCMaxSpeed
extern tSDLGenInfo ySDL_z_BasicTypes_18_tSCMaxSpeed;
#endif
typedef SDL_Integer  z_BasicTypes_18_tSCMaxSpeed;

/*****
* SYNTYPE tSCMaxAcceleration  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),7,9)
******/
#ifndef XTNOUSE_tSCMaxAcceleration
extern tSDLGenInfo ySDL_z_BasicTypes_19_tSCMaxAcceleration;
#endif
typedef SDL_Integer  z_BasicTypes_19_tSCMaxAcceleration;

/*****
* SYNTYPE tSCMaxResource  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),10,9)
******/
#ifndef XTNOUSE_tSCMaxResource
extern tSDLGenInfo ySDL_z_BasicTypes_1A_tSCMaxResource;
#endif
typedef SDL_Integer  z_BasicTypes_1A_tSCMaxResource;

/*****
* SYNTYPE tWCPower  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),1,9)
******/
#ifndef XTNOUSE_tWCPower
extern tSDLGenInfo ySDL_z_BasicTypes_1B_tWCPower;
#endif
typedef SDL_Integer  z_BasicTypes_1B_tWCPower;

/*****
* SYNTYPE tWCRange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),4,9)
******/
#ifndef XTNOUSE_tWCRange
extern tSDLGenInfo ySDL_z_BasicTypes_1C_tWCRange;
#endif
typedef SDL_Integer  z_BasicTypes_1C_tWCRange;

/*****
* SYNTYPE tWCSpeed  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),7,9)
******/
#ifndef XTNOUSE_tWCSpeed
extern tSDLGenInfo ySDL_z_BasicTypes_1D_tWCSpeed;
#endif
typedef SDL_Integer  z_BasicTypes_1D_tWCSpeed;

/*****
* SYNTYPE tAAWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),281(80,75),1,9)
******/
#ifndef XTNOUSE_tAAWeaponry
extern tSDLGenInfo ySDL_z_BasicTypes_1E_tAAWeaponry;
#endif
typedef SDL_Integer  z_BasicTypes_1E_tAAWeaponry;

/*****
* SYNTYPE tLUWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),281(80,75),4,9)
******/
#ifndef XTNOUSE_tLUWeaponry
extern tSDLGenInfo ySDL_z_BasicTypes_1F_tLUWeaponry;
#endif
typedef SDL_Integer  z_BasicTypes_1F_tLUWeaponry;

/*****
* SYNTYPE tXCoordinate  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),290(20,85),1,9)
******/
#ifndef XTNOUSE_tXCoordinate
extern tSDLGenInfo ySDL_z_BasicTypes_1G_tXCoordinate;
#endif
typedef SDL_Integer  z_BasicTypes_1G_tXCoordinate;

/*****
* SYNTYPE tYCoordinate  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),290(20,85),4,9)
******/
#ifndef XTNOUSE_tYCoordinate
extern tSDLGenInfo ySDL_z_BasicTypes_1H_tYCoordinate;
#endif
typedef SDL_Integer  z_BasicTypes_1H_tYCoordinate;

/*****
* SYNTYPE tFactorAcceleration  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),374(80,100),1,9)
******/
#ifndef XTNOUSE_tFactorAcceleration
extern tSDLGenInfo ySDL_z_BasicTypes_1I_tFactorAcceleration;
#endif
typedef SDL_Real  z_BasicTypes_1I_tFactorAcceleration;

/*****
* SYNTYPE tShipId  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),407(20,110),1,9)
******/
#ifndef XTNOUSE_tShipId
extern tSDLGenInfo ySDL_z_BasicTypes_1J_tShipId;
#endif
typedef SDL_Integer  z_BasicTypes_1J_tShipId;

/*****
* SYNTYPE tStrategyId  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),413(80,115),1,9)
******/
#ifndef XTNOUSE_tStrategyId
extern tSDLGenInfo ySDL_z_BasicTypes_1K_tStrategyId;
#endif
typedef SDL_Integer  z_BasicTypes_1K_tStrategyId;

/*****
* NEWTYPE tHeading  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(2),254(20,40),1,9)
******/
#ifndef XTNOUSE_tHeading
extern tSDLEnumInfo ySDL_z_BasicTypes_0Q_tHeading;
#endif
typedef XENUM_TYPE z_BasicTypes_0Q_tHeading;
#define z_BasicTypes_0Q0_NORTH 0
#define z_BasicTypes_0Q1_NORTH_EAST 1
#define z_BasicTypes_0Q2_EAST 2
#define z_BasicTypes_0Q3_SOUTH_EAST 3
#define z_BasicTypes_0Q4_SOUTH 4
#define z_BasicTypes_0Q5_SOUTH_WEST 5
#define z_BasicTypes_0Q6_WEST 6
#define z_BasicTypes_0Q7_NORTH_WEST 7

/*****
* NEWTYPE tDeep  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(2),182(70,40),1,9)
******/
#ifndef XTNOUSE_tDeep
extern tSDLEnumInfo ySDL_z_BasicTypes_0R_tDeep;
#endif
typedef XENUM_TYPE z_BasicTypes_0R_tDeep;
#define z_BasicTypes_0R0_LAND 0
#define z_BasicTypes_0R1_FLEET 1
#define z_BasicTypes_0R2_NORMAL 2
#define z_BasicTypes_0R3_DEEPLY 3
#define z_BasicTypes_0R4_VERY_DEEPLY 4

/*****
* NEWTYPE tNameWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(2),179(20,115),1,9)
******/
#ifndef XTNOUSE_tNameWeaponry
extern tSDLEnumInfo ySDL_z_BasicTypes_0S_tNameWeaponry;
#endif
typedef XENUM_TYPE z_BasicTypes_0S_tNameWeaponry;
#define z_BasicTypes_0S0_MISSILE 0
#define z_BasicTypes_0S1_TORPEDO 1
#define z_BasicTypes_0S2_SHELL 2
#define z_BasicTypes_0S3_REPAIR 3

/*****
* NEWTYPE tNameShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(2),248(80,115),1,9)
******/
#ifndef XTNOUSE_tNameShip
extern tSDLEnumInfo ySDL_z_BasicTypes_0T_tNameShip;
#endif
typedef XENUM_TYPE z_BasicTypes_0T_tNameShip;
#define z_BasicTypes_0T0_BATTLESHIP 0
#define z_BasicTypes_0T1_CRUISER 1
#define z_BasicTypes_0T2_DESTROYER 2
#define z_BasicTypes_0T3_MISSILE_CUTTER 3
#define z_BasicTypes_0T4_REPAIR_BOAT 4

/*****
* NEWTYPE tHeadingChange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(2),359(20,175),1,9)
******/
#ifndef XTNOUSE_tHeadingChange
extern tSDLEnumInfo ySDL_z_BasicTypes_0U_tHeadingChange;
#endif
typedef XENUM_TYPE z_BasicTypes_0U_tHeadingChange;
#define z_BasicTypes_0U0_LEFT 0
#define z_BasicTypes_0U1_RIGHT 1

/*****
* NEWTYPE tCoordinates  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(3),287(20,40),1,9)
******/
#ifndef XTNOUSE_tCoordinates
extern tSDLStructInfo ySDL_z_BasicTypes_0V_tCoordinates;
#endif
typedef struct z_BasicTypes_0V_tCoordinates_s {
    z_BasicTypes_1G_tXCoordinate  x;
    z_BasicTypes_1H_tYCoordinate  y;
} z_BasicTypes_0V_tCoordinates;

/*****
* NEWTYPE tWeaponryCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(3),146(20,60),1,9)
******/
#ifndef XTNOUSE_tWeaponryCharacter
extern tSDLStructInfo ySDL_z_BasicTypes_0W_tWeaponryCharacter;
#endif
typedef struct z_BasicTypes_0W_tWeaponryCharacter_s {
    z_BasicTypes_1B_tWCPower  Power;
    z_BasicTypes_1C_tWCRange  Range;
    z_BasicTypes_1D_tWCSpeed  Speed;
} z_BasicTypes_0W_tWeaponryCharacter;

/*****
* NEWTYPE tEnemyShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(3),446(20,165),1,9)
******/
#ifndef XTNOUSE_tEnemyShip
extern tSDLStructInfo ySDL_z_BasicTypes_0Z_tEnemyShip;
#endif
typedef struct z_BasicTypes_0Z_tEnemyShip_s {
    z_BasicTypes_1J_tShipId  ShipId;
    z_BasicTypes_1K_tStrategyId  StrategyId;
    z_BasicTypes_0T_tNameShip  TypeShip;
    z_BasicTypes_18_tSCMaxSpeed  Speed;
    z_BasicTypes_0Q_tHeading  Heading;
    z_BasicTypes_0V_tCoordinates  Coordinates;
} z_BasicTypes_0Z_tEnemyShip;

/*****
* NEWTYPE tArrayWeaponryCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),215(20,40),1,9)
******/
#ifndef XTNOUSE_tArrayWeaponryCharacter
extern tSDLArrayInfo ySDL_z_BasicTypes_10_tArrayWeaponryCharacter;
#endif
typedef struct {
    z_BasicTypes_0W_tWeaponryCharacter  A[4];
}  z_BasicTypes_10_tArrayWeaponryCharacter;

/*****
* NEWTYPE tArrayAmountAmmunition  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),344(20,70),1,9)
******/
#ifndef XTNOUSE_tArrayAmountAmmunition
extern tSDLArrayInfo ySDL_z_BasicTypes_12_tArrayAmountAmmunition;
#endif
typedef struct {
    z_BasicTypes_1E_tAAWeaponry  A[4];
}  z_BasicTypes_12_tArrayAmountAmmunition;

/*****
* NEWTYPE tArrayAmountLaunchUnit  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),341(20,85),1,9)
******/
#ifndef XTNOUSE_tArrayAmountLaunchUnit
extern tSDLArrayInfo ySDL_z_BasicTypes_13_tArrayAmountLaunchUnit;
#endif
typedef struct {
    z_BasicTypes_1F_tLUWeaponry  A[4];
}  z_BasicTypes_13_tArrayAmountLaunchUnit;

/*****
* NEWTYPE tStringEnemyShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),449(20,115),1,9)
******/
#ifndef XTNOUSE_tStringEnemyShip
extern tSDLGenListInfo ySDL_z_BasicTypes_15_tStringEnemyShip;
#endif

typedef struct z_BasicTypes_15_tStringEnemyShip_ystruct *z_BasicTypes_15_tStringEnemyShip_yptr;
typedef struct z_BasicTypes_15_tStringEnemyShip_ystruct {
  z_BasicTypes_15_tStringEnemyShip_yptr Suc;
  z_BasicTypes_0Z_tEnemyShip Data;
} z_BasicTypes_15_tStringEnemyShip_yrec;
typedef struct {
  z_BasicTypes_15_tStringEnemyShip_yptr First;
  z_BasicTypes_15_tStringEnemyShip_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_15_tStringEnemyShip;

/*****
* NEWTYPE tStringShotsList  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),362(20,130),1,9)
******/
#ifndef XTNOUSE_tStringShotsList
extern tSDLGenListInfo ySDL_z_BasicTypes_16_tStringShotsList;
#endif

typedef struct z_BasicTypes_16_tStringShotsList_ystruct *z_BasicTypes_16_tStringShotsList_yptr;
typedef struct z_BasicTypes_16_tStringShotsList_ystruct {
  z_BasicTypes_16_tStringShotsList_yptr Suc;
  z_BasicTypes_0V_tCoordinates Data;
} z_BasicTypes_16_tStringShotsList_yrec;
typedef struct {
  z_BasicTypes_16_tStringShotsList_yptr First;
  z_BasicTypes_16_tStringShotsList_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_16_tStringShotsList;

/*****
* NEWTYPE tShipCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(3),251(20,85),1,9)
******/
#ifndef XTNOUSE_tShipCharacter
extern tSDLStructInfo ySDL_z_BasicTypes_0X_tShipCharacter;
#endif
typedef struct z_BasicTypes_0X_tShipCharacter_s {
    z_BasicTypes_17_tSCRange  Range;
    z_BasicTypes_18_tSCMaxSpeed  MaxSpeed;
    z_BasicTypes_19_tSCMaxAcceleration  MaxAcceleration;
    z_BasicTypes_1A_tSCMaxResource  MaxResource;
    z_BasicTypes_12_tArrayAmountAmmunition  MaxAmmunition;
    z_BasicTypes_13_tArrayAmountLaunchUnit  MaxLaunchUnit;
    z_BasicTypes_0R_tDeep  MaxDeep;
} z_BasicTypes_0X_tShipCharacter;

/*****
* NEWTYPE tShipCurrentState  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(3),401(20,125),1,9)
******/
#ifndef XTNOUSE_tShipCurrentState
extern tSDLStructInfo ySDL_z_BasicTypes_0Y_tShipCurrentState;
#endif
typedef struct z_BasicTypes_0Y_tShipCurrentState_s {
    z_BasicTypes_1J_tShipId  ShipId;
    z_BasicTypes_1K_tStrategyId  StrategyId;
    z_BasicTypes_0T_tNameShip  TypeShip;
    z_BasicTypes_18_tSCMaxSpeed  Speed;
    z_BasicTypes_0Q_tHeading  Heading;
    z_BasicTypes_1A_tSCMaxResource  Resource;
    z_BasicTypes_0V_tCoordinates  Coordinates;
    z_BasicTypes_12_tArrayAmountAmmunition  Ammunition;
} z_BasicTypes_0Y_tShipCurrentState;

/*****
* NEWTYPE tArrayShipsCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),284(20,55),1,9)
******/
#ifndef XTNOUSE_tArrayShipsCharacter
extern tSDLArrayInfo ySDL_z_BasicTypes_11_tArrayShipsCharacter;
#endif
typedef struct {
    z_BasicTypes_0X_tShipCharacter  A[5];
}  z_BasicTypes_11_tArrayShipsCharacter;

/*****
* NEWTYPE tStringShipCurrentState  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),404(20,100),1,9)
******/
#ifndef XTNOUSE_tStringShipCurrentState
extern tSDLGenListInfo ySDL_z_BasicTypes_14_tStringShipCurrentState;
#endif

typedef struct z_BasicTypes_14_tStringShipCurrentState_ystruct *z_BasicTypes_14_tStringShipCurrentState_yptr;
typedef struct z_BasicTypes_14_tStringShipCurrentState_ystruct {
  z_BasicTypes_14_tStringShipCurrentState_yptr Suc;
  z_BasicTypes_0Y_tShipCurrentState Data;
} z_BasicTypes_14_tStringShipCurrentState_yrec;
typedef struct {
  z_BasicTypes_14_tStringShipCurrentState_yptr First;
  z_BasicTypes_14_tStringShipCurrentState_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_14_tStringShipCurrentState;

/*****
* SYNTYPE tSCRange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_17_tSCRange;
#define ySrtN_z_BasicTypes_17_tSCRange  (&ySrtR_z_BasicTypes_17_tSCRange)
#endif

#define yAssF_z_BasicTypes_17_tSCRange(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_17_tSCRange(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_17_tSCRange(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_17_tSCRange(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_17_tSCRange(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_17_tSCRange (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_17_tSCRange yTstA_z_BasicTypes_17_tSCRange
  (z_BasicTypes_17_tSCRange yExpr);
#else
#define yTstA_z_BasicTypes_17_tSCRange(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_17_tSCRange
#define ANY_z_BasicTypes_17_tSCRange (z_BasicTypes_17_tSCRange)(0 + \
  GETINTRAND%(100+1))
#endif

/*****
* SYNTYPE tSCMaxSpeed  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_18_tSCMaxSpeed;
#define ySrtN_z_BasicTypes_18_tSCMaxSpeed  (&ySrtR_z_BasicTypes_18_tSCMaxSpeed)
#endif

#define yAssF_z_BasicTypes_18_tSCMaxSpeed(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_18_tSCMaxSpeed(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_18_tSCMaxSpeed(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_18_tSCMaxSpeed(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_18_tSCMaxSpeed(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_18_tSCMaxSpeed (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_18_tSCMaxSpeed yTstA_z_BasicTypes_18_tSCMaxSpeed
  (z_BasicTypes_18_tSCMaxSpeed yExpr);
#else
#define yTstA_z_BasicTypes_18_tSCMaxSpeed(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_18_tSCMaxSpeed
#define ANY_z_BasicTypes_18_tSCMaxSpeed (z_BasicTypes_18_tSCMaxSpeed)(0 + \
  GETINTRAND%(10+1))
#endif

/*****
* SYNTYPE tSCMaxAcceleration  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),7,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_19_tSCMaxAcceleration;
#define ySrtN_z_BasicTypes_19_tSCMaxAcceleration  (&ySrtR_z_BasicTypes_19_tSCMaxAcceleration)
#endif

#define yAssF_z_BasicTypes_19_tSCMaxAcceleration(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_19_tSCMaxAcceleration(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_19_tSCMaxAcceleration(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_19_tSCMaxAcceleration(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_19_tSCMaxAcceleration(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_19_tSCMaxAcceleration (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_19_tSCMaxAcceleration
  yTstA_z_BasicTypes_19_tSCMaxAcceleration
  (z_BasicTypes_19_tSCMaxAcceleration yExpr);
#else
#define yTstA_z_BasicTypes_19_tSCMaxAcceleration(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_19_tSCMaxAcceleration
#define ANY_z_BasicTypes_19_tSCMaxAcceleration (z_BasicTypes_19_tSCMaxAcceleration)(0 + \
  GETINTRAND%(5+1))
#endif

/*****
* SYNTYPE tSCMaxResource  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),10,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1A_tSCMaxResource;
#define ySrtN_z_BasicTypes_1A_tSCMaxResource  (&ySrtR_z_BasicTypes_1A_tSCMaxResource)
#endif

#define yAssF_z_BasicTypes_1A_tSCMaxResource(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1A_tSCMaxResource(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1A_tSCMaxResource(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1A_tSCMaxResource(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_1A_tSCMaxResource(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1A_tSCMaxResource (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1A_tSCMaxResource yTstA_z_BasicTypes_1A_tSCMaxResource
  (z_BasicTypes_1A_tSCMaxResource yExpr);
#else
#define yTstA_z_BasicTypes_1A_tSCMaxResource(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1A_tSCMaxResource
#define ANY_z_BasicTypes_1A_tSCMaxResource (z_BasicTypes_1A_tSCMaxResource)(0 + \
  GETINTRAND%(100+1))
#endif

/*****
* SYNTYPE tWCPower  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1B_tWCPower;
#define ySrtN_z_BasicTypes_1B_tWCPower  (&ySrtR_z_BasicTypes_1B_tWCPower)
#endif

#define yAssF_z_BasicTypes_1B_tWCPower(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1B_tWCPower(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1B_tWCPower(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1B_tWCPower(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_1B_tWCPower(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1B_tWCPower (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1B_tWCPower yTstA_z_BasicTypes_1B_tWCPower
  (z_BasicTypes_1B_tWCPower yExpr);
#else
#define yTstA_z_BasicTypes_1B_tWCPower(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1B_tWCPower
#define ANY_z_BasicTypes_1B_tWCPower (z_BasicTypes_1B_tWCPower)(0 + \
  GETINTRAND%(30+1))
#endif

/*****
* SYNTYPE tWCRange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1C_tWCRange;
#define ySrtN_z_BasicTypes_1C_tWCRange  (&ySrtR_z_BasicTypes_1C_tWCRange)
#endif

#define yAssF_z_BasicTypes_1C_tWCRange(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1C_tWCRange(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1C_tWCRange(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1C_tWCRange(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_1C_tWCRange(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1C_tWCRange (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1C_tWCRange yTstA_z_BasicTypes_1C_tWCRange
  (z_BasicTypes_1C_tWCRange yExpr);
#else
#define yTstA_z_BasicTypes_1C_tWCRange(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1C_tWCRange
#define ANY_z_BasicTypes_1C_tWCRange (z_BasicTypes_1C_tWCRange)(0 + \
  GETINTRAND%(50+1))
#endif

/*****
* SYNTYPE tWCSpeed  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),7,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1D_tWCSpeed;
#define ySrtN_z_BasicTypes_1D_tWCSpeed  (&ySrtR_z_BasicTypes_1D_tWCSpeed)
#endif

#define yAssF_z_BasicTypes_1D_tWCSpeed(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1D_tWCSpeed(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1D_tWCSpeed(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1D_tWCSpeed(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_1D_tWCSpeed(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1D_tWCSpeed (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1D_tWCSpeed yTstA_z_BasicTypes_1D_tWCSpeed
  (z_BasicTypes_1D_tWCSpeed yExpr);
#else
#define yTstA_z_BasicTypes_1D_tWCSpeed(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1D_tWCSpeed
#define ANY_z_BasicTypes_1D_tWCSpeed (z_BasicTypes_1D_tWCSpeed)(0 + \
  GETINTRAND%(30+1))
#endif

/*****
* SYNTYPE tAAWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),281(80,75),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1E_tAAWeaponry;
#define ySrtN_z_BasicTypes_1E_tAAWeaponry  (&ySrtR_z_BasicTypes_1E_tAAWeaponry)
#endif

#define yAssF_z_BasicTypes_1E_tAAWeaponry(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1E_tAAWeaponry(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1E_tAAWeaponry(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1E_tAAWeaponry(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_1E_tAAWeaponry(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1E_tAAWeaponry (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1E_tAAWeaponry yTstA_z_BasicTypes_1E_tAAWeaponry
  (z_BasicTypes_1E_tAAWeaponry yExpr);
#else
#define yTstA_z_BasicTypes_1E_tAAWeaponry(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1E_tAAWeaponry
#define ANY_z_BasicTypes_1E_tAAWeaponry (z_BasicTypes_1E_tAAWeaponry)(0 + \
  GETINTRAND%(30+1))
#endif

/*****
* SYNTYPE tLUWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),281(80,75),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1F_tLUWeaponry;
#define ySrtN_z_BasicTypes_1F_tLUWeaponry  (&ySrtR_z_BasicTypes_1F_tLUWeaponry)
#endif

#define yAssF_z_BasicTypes_1F_tLUWeaponry(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1F_tLUWeaponry(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1F_tLUWeaponry(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1F_tLUWeaponry(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_1F_tLUWeaponry(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1F_tLUWeaponry (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1F_tLUWeaponry yTstA_z_BasicTypes_1F_tLUWeaponry
  (z_BasicTypes_1F_tLUWeaponry yExpr);
#else
#define yTstA_z_BasicTypes_1F_tLUWeaponry(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1F_tLUWeaponry
#define ANY_z_BasicTypes_1F_tLUWeaponry (z_BasicTypes_1F_tLUWeaponry)(0 + \
  GETINTRAND%(5+1))
#endif

/*****
* SYNTYPE tXCoordinate  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),290(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1G_tXCoordinate;
#define ySrtN_z_BasicTypes_1G_tXCoordinate  (&ySrtR_z_BasicTypes_1G_tXCoordinate)
#endif

#define yAssF_z_BasicTypes_1G_tXCoordinate(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1G_tXCoordinate(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1G_tXCoordinate(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1G_tXCoordinate(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_1G_tXCoordinate(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1G_tXCoordinate (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1G_tXCoordinate yTstA_z_BasicTypes_1G_tXCoordinate
  (z_BasicTypes_1G_tXCoordinate yExpr);
#else
#define yTstA_z_BasicTypes_1G_tXCoordinate(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1G_tXCoordinate
#define ANY_z_BasicTypes_1G_tXCoordinate (z_BasicTypes_1G_tXCoordinate)(0 + \
  GETINTRAND%(200+1))
#endif

/*****
* SYNTYPE tYCoordinate  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),290(20,85),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1H_tYCoordinate;
#define ySrtN_z_BasicTypes_1H_tYCoordinate  (&ySrtR_z_BasicTypes_1H_tYCoordinate)
#endif

#define yAssF_z_BasicTypes_1H_tYCoordinate(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1H_tYCoordinate(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1H_tYCoordinate(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1H_tYCoordinate(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_1H_tYCoordinate(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1H_tYCoordinate (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1H_tYCoordinate yTstA_z_BasicTypes_1H_tYCoordinate
  (z_BasicTypes_1H_tYCoordinate yExpr);
#else
#define yTstA_z_BasicTypes_1H_tYCoordinate(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1H_tYCoordinate
#define ANY_z_BasicTypes_1H_tYCoordinate (z_BasicTypes_1H_tYCoordinate)(0 + \
  GETINTRAND%(100+1))
#endif

/*****
* SYNTYPE tFactorAcceleration  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),374(80,100),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1I_tFactorAcceleration;
#define ySrtN_z_BasicTypes_1I_tFactorAcceleration  (&ySrtR_z_BasicTypes_1I_tFactorAcceleration)
#endif

#define yAssF_z_BasicTypes_1I_tFactorAcceleration(V,E,A)  yAssF_SDL_Real(V,E,A)
#define yEqF_z_BasicTypes_1I_tFactorAcceleration(Expr1,Expr2)  yEqF_SDL_Real(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1I_tFactorAcceleration(Expr1,Expr2)  yNEqF_SDL_Real(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1I_tFactorAcceleration(Expr1,Expr2) yMkAddr_SDL_Real(yTstA_z_BasicTypes_1I_tFactorAcceleration(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1I_tFactorAcceleration (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1I_tFactorAcceleration
  yTstA_z_BasicTypes_1I_tFactorAcceleration
  (z_BasicTypes_1I_tFactorAcceleration yExpr);
#else
#define yTstA_z_BasicTypes_1I_tFactorAcceleration(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1I_tFactorAcceleration
#define ANY_z_BasicTypes_1I_tFactorAcceleration ANY_for_syntype_tFactorAcceleration_not_implemented
#endif

/*****
* SYNTYPE tShipId  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),407(20,110),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1J_tShipId;
#define ySrtN_z_BasicTypes_1J_tShipId  (&ySrtR_z_BasicTypes_1J_tShipId)
#endif

#define yAssF_z_BasicTypes_1J_tShipId(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1J_tShipId(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1J_tShipId(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1J_tShipId(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_1J_tShipId(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1J_tShipId (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1J_tShipId yTstA_z_BasicTypes_1J_tShipId
  (z_BasicTypes_1J_tShipId yExpr);
#else
#define yTstA_z_BasicTypes_1J_tShipId(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1J_tShipId
#define ANY_z_BasicTypes_1J_tShipId (z_BasicTypes_1J_tShipId)(1 + GETINTRAND%(18 \
   - 1+1))
#endif

/*****
* SYNTYPE tStrategyId  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(1),413(80,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1K_tStrategyId;
#define ySrtN_z_BasicTypes_1K_tStrategyId  (&ySrtR_z_BasicTypes_1K_tStrategyId)
#endif

#define yAssF_z_BasicTypes_1K_tStrategyId(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1K_tStrategyId(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1K_tStrategyId(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1K_tStrategyId(Expr1,Expr2) yMkAddr_SDL_Integer(yTstA_z_BasicTypes_1K_tStrategyId(Expr1),Expr2)
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1K_tStrategyId (void *yExpr);
#endif
#ifdef XERANGE
extern z_BasicTypes_1K_tStrategyId yTstA_z_BasicTypes_1K_tStrategyId
  (z_BasicTypes_1K_tStrategyId yExpr);
#else
#define yTstA_z_BasicTypes_1K_tStrategyId(yExpr)  (yExpr)
#endif
#ifndef ANY_z_BasicTypes_1K_tStrategyId
#define ANY_z_BasicTypes_1K_tStrategyId (z_BasicTypes_1K_tStrategyId)(1 + \
  GETINTRAND%(2 - 1+1))
#endif

/*****
* NEWTYPE tHeading  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(2),254(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Q_tHeading;
#define ySrtN_z_BasicTypes_0Q_tHeading  (&ySrtR_z_BasicTypes_0Q_tHeading)
#endif

#define yAssF_z_BasicTypes_0Q_tHeading(V,E,A)  V = E
#define yEqF_z_BasicTypes_0Q_tHeading(Expr1,Expr2)  ((Expr1) == (Expr2))
#define yNEqF_z_BasicTypes_0Q_tHeading(Expr1,Expr2)  ((Expr1) != (Expr2))
#define yMkAddr_z_BasicTypes_0Q_tHeading yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0Q_tHeading
#define ANY_z_BasicTypes_0Q_tHeading (z_BasicTypes_0Q_tHeading)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0Q7_NORTH_WEST)+1))
#endif
#define z_BasicTypes_0QD_copy(P)  (P)

/*****
* OPERATOR h2i
* <<PACKAGE BasicTypes/TYPE tHeading>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\h2i.sop,4,1,10)
******/
YPRD_PROTOTYPE(z_BasicTypes_0QE_h2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0QE_h2i;
#define yPrdN_z_BasicTypes_0QE_h2i  (&yPrdR_z_BasicTypes_0QE_h2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0QE_h2i  9
extern char * yRef_z_BasicTypes_0QE_h2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\h2i.sop,1,2,3) */
    z_BasicTypes_0Q_tHeading z_BasicTypes_0QE0_lit;
    SDL_Integer *z_BasicTypes_0QE_ProcedureResult;
    z_BasicTypes_0Q_tHeading  yDcn_z_BasicTypes_0Q_tHeading;
} yVDef_z_BasicTypes_0QE_h2i;
typedef yVDef_z_BasicTypes_0QE_h2i  *yVDP_z_BasicTypes_0QE_h2i;
extern void yFree_z_BasicTypes_0QE_h2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR h2i>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\h2i.sop,1,2,3)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QE0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR h2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QE_ProcedureResult;
#endif

/*****
* OPERATOR i2h
* <<PACKAGE BasicTypes/TYPE tHeading>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2h.sop,4,1,10)
******/
YPRD_PROTOTYPE(z_BasicTypes_0QF_i2h)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0QF_i2h;
#define yPrdN_z_BasicTypes_0QF_i2h  (&yPrdR_z_BasicTypes_0QF_i2h)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0QF_i2h  9
extern char * yRef_z_BasicTypes_0QF_i2h (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2h.sop,1,2,3) */
    SDL_Integer z_BasicTypes_0QF0_int;
    z_BasicTypes_0Q_tHeading *z_BasicTypes_0QF_ProcedureResult;
} yVDef_z_BasicTypes_0QF_i2h;
typedef yVDef_z_BasicTypes_0QF_i2h  *yVDP_z_BasicTypes_0QF_i2h;
extern void yFree_z_BasicTypes_0QF_i2h (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR i2h>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2h.sop,1,2,3)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QF0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR i2h>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QF_ProcedureResult;
#endif

/*****
* NEWTYPE tDeep  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(2),182(70,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0R_tDeep;
#define ySrtN_z_BasicTypes_0R_tDeep  (&ySrtR_z_BasicTypes_0R_tDeep)
#endif

#define yAssF_z_BasicTypes_0R_tDeep(V,E,A)  V = E
#define yEqF_z_BasicTypes_0R_tDeep(Expr1,Expr2)  ((Expr1) == (Expr2))
#define yNEqF_z_BasicTypes_0R_tDeep(Expr1,Expr2)  ((Expr1) != (Expr2))
#define yMkAddr_z_BasicTypes_0R_tDeep yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0R_tDeep
#define ANY_z_BasicTypes_0R_tDeep (z_BasicTypes_0R_tDeep)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0R4_VERY_DEEPLY)+1))
#endif
#define z_BasicTypes_0RA_copy(P)  (P)

/*****
* OPERATOR d2i
* <<PACKAGE BasicTypes/TYPE tDeep>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\d2i.sop,4,1,10)
******/
YPRD_PROTOTYPE(z_BasicTypes_0RB_d2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0RB_d2i;
#define yPrdN_z_BasicTypes_0RB_d2i  (&yPrdR_z_BasicTypes_0RB_d2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0RB_d2i  6
extern char * yRef_z_BasicTypes_0RB_d2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\d2i.sop,1,2,3) */
    z_BasicTypes_0R_tDeep z_BasicTypes_0RB0_lit;
    SDL_Integer *z_BasicTypes_0RB_ProcedureResult;
    z_BasicTypes_0R_tDeep  yDcn_z_BasicTypes_0R_tDeep;
} yVDef_z_BasicTypes_0RB_d2i;
typedef yVDef_z_BasicTypes_0RB_d2i  *yVDP_z_BasicTypes_0RB_d2i;
extern void yFree_z_BasicTypes_0RB_d2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR d2i>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\d2i.sop,1,2,3)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RB0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR d2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RB_ProcedureResult;
#endif

/*****
* OPERATOR i2d
* <<PACKAGE BasicTypes/TYPE tDeep>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2d.sop,4,1,10)
******/
YPRD_PROTOTYPE(z_BasicTypes_0RC_i2d)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0RC_i2d;
#define yPrdN_z_BasicTypes_0RC_i2d  (&yPrdR_z_BasicTypes_0RC_i2d)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0RC_i2d  6
extern char * yRef_z_BasicTypes_0RC_i2d (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2d.sop,1,2,3) */
    SDL_Integer z_BasicTypes_0RC0_int;
    z_BasicTypes_0R_tDeep *z_BasicTypes_0RC_ProcedureResult;
} yVDef_z_BasicTypes_0RC_i2d;
typedef yVDef_z_BasicTypes_0RC_i2d  *yVDP_z_BasicTypes_0RC_i2d;
extern void yFree_z_BasicTypes_0RC_i2d (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR i2d>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2d.sop,1,2,3)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RC0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR i2d>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RC_ProcedureResult;
#endif

/*****
* NEWTYPE tNameWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(2),179(20,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0S_tNameWeaponry;
#define ySrtN_z_BasicTypes_0S_tNameWeaponry  (&ySrtR_z_BasicTypes_0S_tNameWeaponry)
#endif

#define yAssF_z_BasicTypes_0S_tNameWeaponry(V,E,A)  V = E
#define yEqF_z_BasicTypes_0S_tNameWeaponry(Expr1,Expr2)  ((Expr1) == (Expr2))
#define yNEqF_z_BasicTypes_0S_tNameWeaponry(Expr1,Expr2)  ((Expr1) != (Expr2))
#define yMkAddr_z_BasicTypes_0S_tNameWeaponry yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0S_tNameWeaponry
#define ANY_z_BasicTypes_0S_tNameWeaponry (z_BasicTypes_0S_tNameWeaponry)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0S3_REPAIR)+1))
#endif
#define z_BasicTypes_0S9_copy(P)  (P)

/*****
* OPERATOR nw2i
* <<PACKAGE BasicTypes/TYPE tNameWeaponry>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\nw2i.sop,4,1,10)
******/
YPRD_PROTOTYPE(z_BasicTypes_0SA_nw2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0SA_nw2i;
#define yPrdN_z_BasicTypes_0SA_nw2i  (&yPrdR_z_BasicTypes_0SA_nw2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0SA_nw2i  5
extern char * yRef_z_BasicTypes_0SA_nw2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\nw2i.sop,1,2,3) */
    z_BasicTypes_0S_tNameWeaponry z_BasicTypes_0SA0_lit;
    SDL_Integer *z_BasicTypes_0SA_ProcedureResult;
    z_BasicTypes_0S_tNameWeaponry  yDcn_z_BasicTypes_0S_tNameWeaponry;
} yVDef_z_BasicTypes_0SA_nw2i;
typedef yVDef_z_BasicTypes_0SA_nw2i  *yVDP_z_BasicTypes_0SA_nw2i;
extern void yFree_z_BasicTypes_0SA_nw2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR nw2i>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\nw2i.sop,1,2,3)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SA0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR nw2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SA_ProcedureResult;
#endif

/*****
* OPERATOR i2nw
* <<PACKAGE BasicTypes/TYPE tNameWeaponry>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2nw.sop,4,1,10)
******/
YPRD_PROTOTYPE(z_BasicTypes_0SB_i2nw)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0SB_i2nw;
#define yPrdN_z_BasicTypes_0SB_i2nw  (&yPrdR_z_BasicTypes_0SB_i2nw)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0SB_i2nw  5
extern char * yRef_z_BasicTypes_0SB_i2nw (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2nw.sop,1,2,3) */
    SDL_Integer z_BasicTypes_0SB0_int;
    z_BasicTypes_0S_tNameWeaponry *z_BasicTypes_0SB_ProcedureResult;
} yVDef_z_BasicTypes_0SB_i2nw;
typedef yVDef_z_BasicTypes_0SB_i2nw  *yVDP_z_BasicTypes_0SB_i2nw;
extern void yFree_z_BasicTypes_0SB_i2nw (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR i2nw>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2nw.sop,1,2,3)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SB0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR i2nw>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SB_ProcedureResult;
#endif

/*****
* NEWTYPE tNameShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(2),248(80,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0T_tNameShip;
#define ySrtN_z_BasicTypes_0T_tNameShip  (&ySrtR_z_BasicTypes_0T_tNameShip)
#endif

#define yAssF_z_BasicTypes_0T_tNameShip(V,E,A)  V = E
#define yEqF_z_BasicTypes_0T_tNameShip(Expr1,Expr2)  ((Expr1) == (Expr2))
#define yNEqF_z_BasicTypes_0T_tNameShip(Expr1,Expr2)  ((Expr1) != (Expr2))
#define yMkAddr_z_BasicTypes_0T_tNameShip yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0T_tNameShip
#define ANY_z_BasicTypes_0T_tNameShip (z_BasicTypes_0T_tNameShip)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0T4_REPAIR_BOAT)+1))
#endif
#define z_BasicTypes_0TA_copy(P)  (P)

/*****
* OPERATOR ns2i
* <<PACKAGE BasicTypes/TYPE tNameShip>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\ns2i.sop,4,1,10)
******/
YPRD_PROTOTYPE(z_BasicTypes_0TB_ns2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0TB_ns2i;
#define yPrdN_z_BasicTypes_0TB_ns2i  (&yPrdR_z_BasicTypes_0TB_ns2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0TB_ns2i  6
extern char * yRef_z_BasicTypes_0TB_ns2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\ns2i.sop,1,2,3) */
    z_BasicTypes_0T_tNameShip z_BasicTypes_0TB0_lit;
    SDL_Integer *z_BasicTypes_0TB_ProcedureResult;
    z_BasicTypes_0T_tNameShip  yDcn_z_BasicTypes_0T_tNameShip;
} yVDef_z_BasicTypes_0TB_ns2i;
typedef yVDef_z_BasicTypes_0TB_ns2i  *yVDP_z_BasicTypes_0TB_ns2i;
extern void yFree_z_BasicTypes_0TB_ns2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR ns2i>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\ns2i.sop,1,2,3)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0TB0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR ns2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0TB_ProcedureResult;
#endif

/*****
* OPERATOR i2ns
* <<PACKAGE BasicTypes/TYPE tNameShip>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2ns.sop,4,1,10)
******/
YPRD_PROTOTYPE(z_BasicTypes_0TC_i2ns)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0TC_i2ns;
#define yPrdN_z_BasicTypes_0TC_i2ns  (&yPrdR_z_BasicTypes_0TC_i2ns)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0TC_i2ns  6
extern char * yRef_z_BasicTypes_0TC_i2ns (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2ns.sop,1,2,3) */
    SDL_Integer z_BasicTypes_0TC0_int;
    z_BasicTypes_0T_tNameShip *z_BasicTypes_0TC_ProcedureResult;
} yVDef_z_BasicTypes_0TC_i2ns;
typedef yVDef_z_BasicTypes_0TC_i2ns  *yVDP_z_BasicTypes_0TC_i2ns;
extern void yFree_z_BasicTypes_0TC_i2ns (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR i2ns>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\i2ns.sop,1,2,3)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0TC0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR i2ns>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0TC_ProcedureResult;
#endif

/*****
* NEWTYPE tHeadingChange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(2),359(20,175),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0U_tHeadingChange;
#define ySrtN_z_BasicTypes_0U_tHeadingChange  (&ySrtR_z_BasicTypes_0U_tHeadingChange)
#endif

#define yAssF_z_BasicTypes_0U_tHeadingChange(V,E,A)  V = E
#define yEqF_z_BasicTypes_0U_tHeadingChange(Expr1,Expr2)  ((Expr1) == (Expr2))
#define yNEqF_z_BasicTypes_0U_tHeadingChange(Expr1,Expr2)  ((Expr1) != (Expr2))
#define yMkAddr_z_BasicTypes_0U_tHeadingChange yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0U_tHeadingChange
#define ANY_z_BasicTypes_0U_tHeadingChange (z_BasicTypes_0U_tHeadingChange)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0U1_RIGHT)+1))
#endif
#define z_BasicTypes_0U5_copy(P)  (P)

/*****
* NEWTYPE tCoordinates  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(3),287(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0V_tCoordinates;
#define ySrtN_z_BasicTypes_0V_tCoordinates  (&ySrtR_z_BasicTypes_0V_tCoordinates)
#endif

#define yAssF_z_BasicTypes_0V_tCoordinates(V,E,A)  V = *(z_BasicTypes_0V_tCoordinates *)(E)
#define yEq_z_BasicTypes_0V_tCoordinates(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0V_tCoordinates)
#define yEqF_z_BasicTypes_0V_tCoordinates(Expr1,Expr2)  yEq_z_BasicTypes_0V_tCoordinates(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0V_tCoordinates(Expr1,Expr2)  ( !( yEq_z_BasicTypes_0V_tCoordinates(Expr1,Expr2)) )
#ifndef ANY_z_BasicTypes_0V_tCoordinates
#define ANY_z_BasicTypes_0V_tCoordinates(R) (z_BasicTypes_0V_tCoordinates *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0V_tCoordinates)
#endif
#define z_BasicTypes_0V3_copy(P,R)  (P)

/*****
* NEWTYPE tWeaponryCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(3),146(20,60),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0W_tWeaponryCharacter;
#define ySrtN_z_BasicTypes_0W_tWeaponryCharacter  (&ySrtR_z_BasicTypes_0W_tWeaponryCharacter)
#endif

#define yAssF_z_BasicTypes_0W_tWeaponryCharacter(V,E,A)  V = *(z_BasicTypes_0W_tWeaponryCharacter *)(E)
#define yEq_z_BasicTypes_0W_tWeaponryCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0W_tWeaponryCharacter)
#define yEqF_z_BasicTypes_0W_tWeaponryCharacter(Expr1,Expr2)  yEq_z_BasicTypes_0W_tWeaponryCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0W_tWeaponryCharacter(Expr1,Expr2)  ( !( yEq_z_BasicTypes_0W_tWeaponryCharacter(Expr1,Expr2)) )
#ifndef ANY_z_BasicTypes_0W_tWeaponryCharacter
#define ANY_z_BasicTypes_0W_tWeaponryCharacter(R) (z_BasicTypes_0W_tWeaponryCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0W_tWeaponryCharacter)
#endif
#define z_BasicTypes_0W3_copy(P,R)  (P)

/*****
* NEWTYPE tShipCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(3),251(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0X_tShipCharacter;
#define ySrtN_z_BasicTypes_0X_tShipCharacter  (&ySrtR_z_BasicTypes_0X_tShipCharacter)
#endif

#define yAssF_z_BasicTypes_0X_tShipCharacter(V,E,A)  V = *(z_BasicTypes_0X_tShipCharacter *)(E)
#define yEq_z_BasicTypes_0X_tShipCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0X_tShipCharacter)
#define yEqF_z_BasicTypes_0X_tShipCharacter(Expr1,Expr2)  yEq_z_BasicTypes_0X_tShipCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0X_tShipCharacter(Expr1,Expr2)  ( !( yEq_z_BasicTypes_0X_tShipCharacter(Expr1,Expr2)) )
#ifndef ANY_z_BasicTypes_0X_tShipCharacter
#define ANY_z_BasicTypes_0X_tShipCharacter(R) (z_BasicTypes_0X_tShipCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0X_tShipCharacter)
#endif
#define z_BasicTypes_0X3_copy(P,R)  (P)

/*****
* NEWTYPE tShipCurrentState  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(3),401(20,125),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Y_tShipCurrentState;
#define ySrtN_z_BasicTypes_0Y_tShipCurrentState  (&ySrtR_z_BasicTypes_0Y_tShipCurrentState)
#endif

#define yAssF_z_BasicTypes_0Y_tShipCurrentState(V,E,A)  V = *(z_BasicTypes_0Y_tShipCurrentState *)(E)
#define yEq_z_BasicTypes_0Y_tShipCurrentState(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0Y_tShipCurrentState)
#define yEqF_z_BasicTypes_0Y_tShipCurrentState(Expr1,Expr2)  yEq_z_BasicTypes_0Y_tShipCurrentState(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0Y_tShipCurrentState(Expr1,Expr2)  ( !( yEq_z_BasicTypes_0Y_tShipCurrentState(Expr1,Expr2)) )
#ifndef ANY_z_BasicTypes_0Y_tShipCurrentState
#define ANY_z_BasicTypes_0Y_tShipCurrentState(R) (z_BasicTypes_0Y_tShipCurrentState *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0Y_tShipCurrentState)
#endif
#define z_BasicTypes_0Y3_copy(P,R)  (P)

/*****
* NEWTYPE tEnemyShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(3),446(20,165),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Z_tEnemyShip;
#define ySrtN_z_BasicTypes_0Z_tEnemyShip  (&ySrtR_z_BasicTypes_0Z_tEnemyShip)
#endif

#define yAssF_z_BasicTypes_0Z_tEnemyShip(V,E,A)  V = *(z_BasicTypes_0Z_tEnemyShip *)(E)
#define yEq_z_BasicTypes_0Z_tEnemyShip(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0Z_tEnemyShip)
#define yEqF_z_BasicTypes_0Z_tEnemyShip(Expr1,Expr2)  yEq_z_BasicTypes_0Z_tEnemyShip(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0Z_tEnemyShip(Expr1,Expr2)  ( !( yEq_z_BasicTypes_0Z_tEnemyShip(Expr1,Expr2)) )
#ifndef ANY_z_BasicTypes_0Z_tEnemyShip
#define ANY_z_BasicTypes_0Z_tEnemyShip(R) (z_BasicTypes_0Z_tEnemyShip *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0Z_tEnemyShip)
#endif
#define z_BasicTypes_0Z3_copy(P,R)  (P)

/*****
* NEWTYPE tArrayWeaponryCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),215(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_10_tArrayWeaponryCharacter;
#define ySrtN_z_BasicTypes_10_tArrayWeaponryCharacter  (&ySrtR_z_BasicTypes_10_tArrayWeaponryCharacter)
#endif

#define yAssF_z_BasicTypes_10_tArrayWeaponryCharacter(V,E,A)  V = *(z_BasicTypes_10_tArrayWeaponryCharacter *)(E)
#define yEq_z_BasicTypes_10_tArrayWeaponryCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_10_tArrayWeaponryCharacter)
#define yEqF_z_BasicTypes_10_tArrayWeaponryCharacter(Expr1,Expr2)  yEq_z_BasicTypes_10_tArrayWeaponryCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_10_tArrayWeaponryCharacter(Expr1,Expr2)  ( !( yEq_z_BasicTypes_10_tArrayWeaponryCharacter(Expr1,Expr2)) )
#ifdef XEINDEX
#define yTstI_z_BasicTypes_10_tArrayWeaponryCharacter(yExpr) GenericTstIArray(yExpr, &ySDL_z_BasicTypes_10_tArrayWeaponryCharacter)
#else
#define yTstI_z_BasicTypes_10_tArrayWeaponryCharacter(yExpr) (yExpr)
#endif
#ifndef ANY_z_BasicTypes_10_tArrayWeaponryCharacter
#define ANY_z_BasicTypes_10_tArrayWeaponryCharacter(R) (z_BasicTypes_10_tArrayWeaponryCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_10_tArrayWeaponryCharacter)
#endif
#define z_BasicTypes_106_copy(P,R)  (P)

/*****
* NEWTYPE tArrayShipsCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),284(20,55),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_11_tArrayShipsCharacter;
#define ySrtN_z_BasicTypes_11_tArrayShipsCharacter  (&ySrtR_z_BasicTypes_11_tArrayShipsCharacter)
#endif

#define yAssF_z_BasicTypes_11_tArrayShipsCharacter(V,E,A)  V = *(z_BasicTypes_11_tArrayShipsCharacter *)(E)
#define yEq_z_BasicTypes_11_tArrayShipsCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_11_tArrayShipsCharacter)
#define yEqF_z_BasicTypes_11_tArrayShipsCharacter(Expr1,Expr2)  yEq_z_BasicTypes_11_tArrayShipsCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_11_tArrayShipsCharacter(Expr1,Expr2)  ( !( yEq_z_BasicTypes_11_tArrayShipsCharacter(Expr1,Expr2)) )
#ifdef XEINDEX
#define yTstI_z_BasicTypes_11_tArrayShipsCharacter(yExpr) GenericTstIArray(yExpr, &ySDL_z_BasicTypes_11_tArrayShipsCharacter)
#else
#define yTstI_z_BasicTypes_11_tArrayShipsCharacter(yExpr) (yExpr)
#endif
#ifndef ANY_z_BasicTypes_11_tArrayShipsCharacter
#define ANY_z_BasicTypes_11_tArrayShipsCharacter(R) (z_BasicTypes_11_tArrayShipsCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_11_tArrayShipsCharacter)
#endif
#define z_BasicTypes_116_copy(P,R)  (P)

/*****
* NEWTYPE tArrayAmountAmmunition  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),344(20,70),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_12_tArrayAmountAmmunition;
#define ySrtN_z_BasicTypes_12_tArrayAmountAmmunition  (&ySrtR_z_BasicTypes_12_tArrayAmountAmmunition)
#endif

#define yAssF_z_BasicTypes_12_tArrayAmountAmmunition(V,E,A)  V = *(z_BasicTypes_12_tArrayAmountAmmunition *)(E)
#define yEq_z_BasicTypes_12_tArrayAmountAmmunition(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_12_tArrayAmountAmmunition)
#define yEqF_z_BasicTypes_12_tArrayAmountAmmunition(Expr1,Expr2)  yEq_z_BasicTypes_12_tArrayAmountAmmunition(Expr1,Expr2)
#define yNEqF_z_BasicTypes_12_tArrayAmountAmmunition(Expr1,Expr2)  ( !( yEq_z_BasicTypes_12_tArrayAmountAmmunition(Expr1,Expr2)) )
#ifdef XEINDEX
#define yTstI_z_BasicTypes_12_tArrayAmountAmmunition(yExpr) GenericTstIArray(yExpr, &ySDL_z_BasicTypes_12_tArrayAmountAmmunition)
#else
#define yTstI_z_BasicTypes_12_tArrayAmountAmmunition(yExpr) (yExpr)
#endif
#ifndef ANY_z_BasicTypes_12_tArrayAmountAmmunition
#define ANY_z_BasicTypes_12_tArrayAmountAmmunition(R) (z_BasicTypes_12_tArrayAmountAmmunition *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_12_tArrayAmountAmmunition)
#endif
#define z_BasicTypes_126_copy(P,R)  (P)

/*****
* NEWTYPE tArrayAmountLaunchUnit  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),341(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_13_tArrayAmountLaunchUnit;
#define ySrtN_z_BasicTypes_13_tArrayAmountLaunchUnit  (&ySrtR_z_BasicTypes_13_tArrayAmountLaunchUnit)
#endif

#define yAssF_z_BasicTypes_13_tArrayAmountLaunchUnit(V,E,A)  V = *(z_BasicTypes_13_tArrayAmountLaunchUnit *)(E)
#define yEq_z_BasicTypes_13_tArrayAmountLaunchUnit(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tArrayAmountLaunchUnit)
#define yEqF_z_BasicTypes_13_tArrayAmountLaunchUnit(Expr1,Expr2)  yEq_z_BasicTypes_13_tArrayAmountLaunchUnit(Expr1,Expr2)
#define yNEqF_z_BasicTypes_13_tArrayAmountLaunchUnit(Expr1,Expr2)  ( !( yEq_z_BasicTypes_13_tArrayAmountLaunchUnit(Expr1,Expr2)) )
#ifdef XEINDEX
#define yTstI_z_BasicTypes_13_tArrayAmountLaunchUnit(yExpr) GenericTstIArray(yExpr, &ySDL_z_BasicTypes_13_tArrayAmountLaunchUnit)
#else
#define yTstI_z_BasicTypes_13_tArrayAmountLaunchUnit(yExpr) (yExpr)
#endif
#ifndef ANY_z_BasicTypes_13_tArrayAmountLaunchUnit
#define ANY_z_BasicTypes_13_tArrayAmountLaunchUnit(R) (z_BasicTypes_13_tArrayAmountLaunchUnit *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tArrayAmountLaunchUnit)
#endif
#define z_BasicTypes_136_copy(P,R)  (P)

/*****
* NEWTYPE tStringShipCurrentState  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),404(20,100),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_14_tStringShipCurrentState;
#define ySrtN_z_BasicTypes_14_tStringShipCurrentState  (&ySrtR_z_BasicTypes_14_tStringShipCurrentState)
#endif

#define yEmptystring_z_BasicTypes_14_tStringShipCurrentState(Result) GenString_Emptystring(&ySDL_z_BasicTypes_14_tStringShipCurrentState,Result)
#define yMkString_z_BasicTypes_14_tStringShipCurrentState(P1,Result) (z_BasicTypes_14_tStringShipCurrentState *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_14_tStringShipCurrentState,(xString_Type *)Result)
#define yLength_z_BasicTypes_14_tStringShipCurrentState(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_14_tStringShipCurrentState)
#define yFirst_z_BasicTypes_14_tStringShipCurrentState(P1,Result) (z_BasicTypes_0Y_tShipCurrentState*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_14_tStringShipCurrentState,Result)
#define yLast_z_BasicTypes_14_tStringShipCurrentState(P1,Result) (z_BasicTypes_0Y_tShipCurrentState*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_14_tStringShipCurrentState,Result)
#define yConcat_z_BasicTypes_14_tStringShipCurrentState(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_14_tStringShipCurrentState,(xString_Type *)Result)
#define ySubString_z_BasicTypes_14_tStringShipCurrentState(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_14_tStringShipCurrentState,(xString_Type *)Result)
#define yAppend_z_BasicTypes_14_tStringShipCurrentState(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_14_tStringShipCurrentState)
#define z_BasicTypes_140_empty yEmptystring_z_BasicTypes_14_tStringShipCurrentState

#define yAss_z_BasicTypes_14_tStringShipCurrentState(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringShipCurrentState)
#define yAssF_z_BasicTypes_14_tStringShipCurrentState(V,E,A)  yAss_z_BasicTypes_14_tStringShipCurrentState(&(V),E,A)
#define yEq_z_BasicTypes_14_tStringShipCurrentState(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringShipCurrentState)
#define yEqF_z_BasicTypes_14_tStringShipCurrentState(Expr1,Expr2)  yEq_z_BasicTypes_14_tStringShipCurrentState(Expr1,Expr2)
#define yNEqF_z_BasicTypes_14_tStringShipCurrentState(Expr1,Expr2)  ( !( yEq_z_BasicTypes_14_tStringShipCurrentState(Expr1,Expr2)) )
#define yFree_z_BasicTypes_14_tStringShipCurrentState(P) GenericFreeSort((void **)(P), (tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringShipCurrentState)
#define yExtr_z_BasicTypes_14_tStringShipCurrentState(V1,V2) ((z_BasicTypes_0Y_tShipCurrentState *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_14_tStringShipCurrentState))
#define yAddr_z_BasicTypes_14_tStringShipCurrentState(V1,V2) ((z_BasicTypes_0Y_tShipCurrentState *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_14_tStringShipCurrentState))
#ifndef ANY_z_BasicTypes_14_tStringShipCurrentState
#define ANY_z_BasicTypes_14_tStringShipCurrentState(R) (z_BasicTypes_14_tStringShipCurrentState *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringShipCurrentState)
#endif
#define z_BasicTypes_14E_copy(P,R)  (P)

/*****
* NEWTYPE tStringEnemyShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),449(20,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_15_tStringEnemyShip;
#define ySrtN_z_BasicTypes_15_tStringEnemyShip  (&ySrtR_z_BasicTypes_15_tStringEnemyShip)
#endif

#define yEmptystring_z_BasicTypes_15_tStringEnemyShip(Result) GenString_Emptystring(&ySDL_z_BasicTypes_15_tStringEnemyShip,Result)
#define yMkString_z_BasicTypes_15_tStringEnemyShip(P1,Result) (z_BasicTypes_15_tStringEnemyShip *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_15_tStringEnemyShip,(xString_Type *)Result)
#define yLength_z_BasicTypes_15_tStringEnemyShip(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringEnemyShip)
#define yFirst_z_BasicTypes_15_tStringEnemyShip(P1,Result) (z_BasicTypes_0Z_tEnemyShip*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringEnemyShip,Result)
#define yLast_z_BasicTypes_15_tStringEnemyShip(P1,Result) (z_BasicTypes_0Z_tEnemyShip*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringEnemyShip,Result)
#define yConcat_z_BasicTypes_15_tStringEnemyShip(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_15_tStringEnemyShip,(xString_Type *)Result)
#define ySubString_z_BasicTypes_15_tStringEnemyShip(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_15_tStringEnemyShip,(xString_Type *)Result)
#define yAppend_z_BasicTypes_15_tStringEnemyShip(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_15_tStringEnemyShip)
#define z_BasicTypes_150_empty yEmptystring_z_BasicTypes_15_tStringEnemyShip

#define yAss_z_BasicTypes_15_tStringEnemyShip(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringEnemyShip)
#define yAssF_z_BasicTypes_15_tStringEnemyShip(V,E,A)  yAss_z_BasicTypes_15_tStringEnemyShip(&(V),E,A)
#define yEq_z_BasicTypes_15_tStringEnemyShip(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringEnemyShip)
#define yEqF_z_BasicTypes_15_tStringEnemyShip(Expr1,Expr2)  yEq_z_BasicTypes_15_tStringEnemyShip(Expr1,Expr2)
#define yNEqF_z_BasicTypes_15_tStringEnemyShip(Expr1,Expr2)  ( !( yEq_z_BasicTypes_15_tStringEnemyShip(Expr1,Expr2)) )
#define yFree_z_BasicTypes_15_tStringEnemyShip(P) GenericFreeSort((void **)(P), (tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringEnemyShip)
#define yExtr_z_BasicTypes_15_tStringEnemyShip(V1,V2) ((z_BasicTypes_0Z_tEnemyShip *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_15_tStringEnemyShip))
#define yAddr_z_BasicTypes_15_tStringEnemyShip(V1,V2) ((z_BasicTypes_0Z_tEnemyShip *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_15_tStringEnemyShip))
#ifndef ANY_z_BasicTypes_15_tStringEnemyShip
#define ANY_z_BasicTypes_15_tStringEnemyShip(R) (z_BasicTypes_15_tStringEnemyShip *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringEnemyShip)
#endif
#define z_BasicTypes_15E_copy(P,R)  (P)

/*****
* NEWTYPE tStringShotsList  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(4),362(20,130),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_16_tStringShotsList;
#define ySrtN_z_BasicTypes_16_tStringShotsList  (&ySrtR_z_BasicTypes_16_tStringShotsList)
#endif

#define yEmptystring_z_BasicTypes_16_tStringShotsList(Result) GenString_Emptystring(&ySDL_z_BasicTypes_16_tStringShotsList,Result)
#define yMkString_z_BasicTypes_16_tStringShotsList(P1,Result) (z_BasicTypes_16_tStringShotsList *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_16_tStringShotsList,(xString_Type *)Result)
#define yLength_z_BasicTypes_16_tStringShotsList(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_16_tStringShotsList)
#define yFirst_z_BasicTypes_16_tStringShotsList(P1,Result) (z_BasicTypes_0V_tCoordinates*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_16_tStringShotsList,Result)
#define yLast_z_BasicTypes_16_tStringShotsList(P1,Result) (z_BasicTypes_0V_tCoordinates*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_16_tStringShotsList,Result)
#define yConcat_z_BasicTypes_16_tStringShotsList(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_16_tStringShotsList,(xString_Type *)Result)
#define ySubString_z_BasicTypes_16_tStringShotsList(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_16_tStringShotsList,(xString_Type *)Result)
#define yAppend_z_BasicTypes_16_tStringShotsList(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_16_tStringShotsList)
#define z_BasicTypes_160_empty yEmptystring_z_BasicTypes_16_tStringShotsList

#define yAss_z_BasicTypes_16_tStringShotsList(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_16_tStringShotsList)
#define yAssF_z_BasicTypes_16_tStringShotsList(V,E,A)  yAss_z_BasicTypes_16_tStringShotsList(&(V),E,A)
#define yEq_z_BasicTypes_16_tStringShotsList(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_16_tStringShotsList)
#define yEqF_z_BasicTypes_16_tStringShotsList(Expr1,Expr2)  yEq_z_BasicTypes_16_tStringShotsList(Expr1,Expr2)
#define yNEqF_z_BasicTypes_16_tStringShotsList(Expr1,Expr2)  ( !( yEq_z_BasicTypes_16_tStringShotsList(Expr1,Expr2)) )
#define yFree_z_BasicTypes_16_tStringShotsList(P) GenericFreeSort((void **)(P), (tSDLTypeInfo *)&ySDL_z_BasicTypes_16_tStringShotsList)
#define yExtr_z_BasicTypes_16_tStringShotsList(V1,V2) ((z_BasicTypes_0V_tCoordinates *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_16_tStringShotsList))
#define yAddr_z_BasicTypes_16_tStringShotsList(V1,V2) ((z_BasicTypes_0V_tCoordinates *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_16_tStringShotsList))
#ifndef ANY_z_BasicTypes_16_tStringShotsList
#define ANY_z_BasicTypes_16_tStringShotsList(R) (z_BasicTypes_16_tStringShotsList *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_16_tStringShotsList)
#endif
#define z_BasicTypes_16E_copy(P,R)  (P)

/*****
* SIGNAL InitDataComplete
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),2,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_02_InitDataComplete;
#define ySigN_z_BasicTypes_02_InitDataComplete  (&ySigR_z_BasicTypes_02_InitDataComplete)
#endif

/*****
* SIGNAL StartSimulation
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),3,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_03_StartSimulation;
#define ySigN_z_BasicTypes_03_StartSimulation  (&ySigR_z_BasicTypes_03_StartSimulation)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Integer  Param1;
} yPDef_z_BasicTypes_03_StartSimulation;
typedef yPDef_z_BasicTypes_03_StartSimulation  *yPDP_z_BasicTypes_03_StartSimulation;

/*****
* SIGNAL FinishSimulation
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),4,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_04_FinishSimulation;
#define ySigN_z_BasicTypes_04_FinishSimulation  (&ySigR_z_BasicTypes_04_FinishSimulation)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Integer  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
} yPDef_z_BasicTypes_04_FinishSimulation;
typedef yPDef_z_BasicTypes_04_FinishSimulation  *yPDP_z_BasicTypes_04_FinishSimulation;

/*****
* SIGNAL OrderSpeedRequest
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),5,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_05_OrderSpeedRequest;
#define ySigN_z_BasicTypes_05_OrderSpeedRequest  (&ySigR_z_BasicTypes_05_OrderSpeedRequest)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tShipId  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
    z_BasicTypes_1I_tFactorAcceleration  Param3;
} yPDef_z_BasicTypes_05_OrderSpeedRequest;
typedef yPDef_z_BasicTypes_05_OrderSpeedRequest  *yPDP_z_BasicTypes_05_OrderSpeedRequest;

/*****
* SIGNAL OrderTurnRequest
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),6,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_06_OrderTurnRequest;
#define ySigN_z_BasicTypes_06_OrderTurnRequest  (&ySigR_z_BasicTypes_06_OrderTurnRequest)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tShipId  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
    z_BasicTypes_0U_tHeadingChange  Param3;
} yPDef_z_BasicTypes_06_OrderTurnRequest;
typedef yPDef_z_BasicTypes_06_OrderTurnRequest  *yPDP_z_BasicTypes_06_OrderTurnRequest;

/*****
* SIGNAL OrderFireRequest
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),7,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_07_OrderFireRequest;
#define ySigN_z_BasicTypes_07_OrderFireRequest  (&ySigR_z_BasicTypes_07_OrderFireRequest)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tShipId  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
    z_BasicTypes_0S_tNameWeaponry  Param3;
    z_BasicTypes_16_tStringShotsList  Param4;
} yPDef_z_BasicTypes_07_OrderFireRequest;
typedef yPDef_z_BasicTypes_07_OrderFireRequest  *yPDP_z_BasicTypes_07_OrderFireRequest;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_07_OrderFireRequest (void *SVarP);
#endif

/*****
* SIGNAL DestroyShip
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),8,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_08_DestroyShip;
#define ySigN_z_BasicTypes_08_DestroyShip  (&ySigR_z_BasicTypes_08_DestroyShip)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tShipId  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
    z_BasicTypes_0T_tNameShip  Param3;
} yPDef_z_BasicTypes_08_DestroyShip;
typedef yPDef_z_BasicTypes_08_DestroyShip  *yPDP_z_BasicTypes_08_DestroyShip;

/*****
* SIGNAL StrategyVictory
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),9,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_09_StrategyVictory;
#define ySigN_z_BasicTypes_09_StrategyVictory  (&ySigR_z_BasicTypes_09_StrategyVictory)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tStrategyId  Param1;
} yPDef_z_BasicTypes_09_StrategyVictory;
typedef yPDef_z_BasicTypes_09_StrategyVictory  *yPDP_z_BasicTypes_09_StrategyVictory;

/*****
* SIGNAL StrategyLose
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),10,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0A_StrategyLose;
#define ySigN_z_BasicTypes_0A_StrategyLose  (&ySigR_z_BasicTypes_0A_StrategyLose)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tStrategyId  Param1;
} yPDef_z_BasicTypes_0A_StrategyLose;
typedef yPDef_z_BasicTypes_0A_StrategyLose  *yPDP_z_BasicTypes_0A_StrategyLose;

/*****
* SIGNAL OrderSpeedResponse
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),11,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0B_OrderSpeedResponse;
#define ySigN_z_BasicTypes_0B_OrderSpeedResponse  (&ySigR_z_BasicTypes_0B_OrderSpeedResponse)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tShipId  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
} yPDef_z_BasicTypes_0B_OrderSpeedResponse;
typedef yPDef_z_BasicTypes_0B_OrderSpeedResponse  *yPDP_z_BasicTypes_0B_OrderSpeedResponse;

/*****
* SIGNAL OrderSpeedReject
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),12,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0C_OrderSpeedReject;
#define ySigN_z_BasicTypes_0C_OrderSpeedReject  (&ySigR_z_BasicTypes_0C_OrderSpeedReject)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tShipId  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
} yPDef_z_BasicTypes_0C_OrderSpeedReject;
typedef yPDef_z_BasicTypes_0C_OrderSpeedReject  *yPDP_z_BasicTypes_0C_OrderSpeedReject;

/*****
* SIGNAL OrderTurnResponse
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),13,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0D_OrderTurnResponse;
#define ySigN_z_BasicTypes_0D_OrderTurnResponse  (&ySigR_z_BasicTypes_0D_OrderTurnResponse)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tShipId  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
} yPDef_z_BasicTypes_0D_OrderTurnResponse;
typedef yPDef_z_BasicTypes_0D_OrderTurnResponse  *yPDP_z_BasicTypes_0D_OrderTurnResponse;

/*****
* SIGNAL OrderTurnReject
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),14,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0E_OrderTurnReject;
#define ySigN_z_BasicTypes_0E_OrderTurnReject  (&ySigR_z_BasicTypes_0E_OrderTurnReject)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tShipId  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
} yPDef_z_BasicTypes_0E_OrderTurnReject;
typedef yPDef_z_BasicTypes_0E_OrderTurnReject  *yPDP_z_BasicTypes_0E_OrderTurnReject;

/*****
* SIGNAL OrderFireResponse
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),15,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0F_OrderFireResponse;
#define ySigN_z_BasicTypes_0F_OrderFireResponse  (&ySigR_z_BasicTypes_0F_OrderFireResponse)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tShipId  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
} yPDef_z_BasicTypes_0F_OrderFireResponse;
typedef yPDef_z_BasicTypes_0F_OrderFireResponse  *yPDP_z_BasicTypes_0F_OrderFireResponse;

/*****
* SIGNAL OrderFireReject
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),16,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0G_OrderFireReject;
#define ySigN_z_BasicTypes_0G_OrderFireReject  (&ySigR_z_BasicTypes_0G_OrderFireReject)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tShipId  Param1;
    z_BasicTypes_1K_tStrategyId  Param2;
} yPDef_z_BasicTypes_0G_OrderFireReject;
typedef yPDef_z_BasicTypes_0G_OrderFireReject  *yPDP_z_BasicTypes_0G_OrderFireReject;

/*****
* SIGNAL ShipsCurrentState
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),17,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0H_ShipsCurrentState;
#define ySigN_z_BasicTypes_0H_ShipsCurrentState  (&ySigR_z_BasicTypes_0H_ShipsCurrentState)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tStrategyId  Param1;
    z_BasicTypes_14_tStringShipCurrentState  Param2;
} yPDef_z_BasicTypes_0H_ShipsCurrentState;
typedef yPDef_z_BasicTypes_0H_ShipsCurrentState  *yPDP_z_BasicTypes_0H_ShipsCurrentState;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0H_ShipsCurrentState (void *SVarP);
#endif

/*****
* SIGNAL VisibleShip
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),18,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0I_VisibleShip;
#define ySigN_z_BasicTypes_0I_VisibleShip  (&ySigR_z_BasicTypes_0I_VisibleShip)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tStrategyId  Param1;
    z_BasicTypes_15_tStringEnemyShip  Param2;
} yPDef_z_BasicTypes_0I_VisibleShip;
typedef yPDef_z_BasicTypes_0I_VisibleShip  *yPDP_z_BasicTypes_0I_VisibleShip;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0I_VisibleShip (void *SVarP);
#endif

/*****
* SIGNAL messageLog
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),19,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0J_messageLog;
#define ySigN_z_BasicTypes_0J_messageLog  (&ySigR_z_BasicTypes_0J_messageLog)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Charstring  Param1;
} yPDef_z_BasicTypes_0J_messageLog;
typedef yPDef_z_BasicTypes_0J_messageLog  *yPDP_z_BasicTypes_0J_messageLog;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0J_messageLog (void *SVarP);
#endif

/*****
* SIGNAL messageError
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),20,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0K_messageError;
#define ySigN_z_BasicTypes_0K_messageError  (&ySigR_z_BasicTypes_0K_messageError)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Charstring  Param1;
} yPDef_z_BasicTypes_0K_messageError;
typedef yPDef_z_BasicTypes_0K_messageError  *yPDP_z_BasicTypes_0K_messageError;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0K_messageError (void *SVarP);
#endif

/*****
* SIGNAL resetStrategy
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),21,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0L_resetStrategy;
#define ySigN_z_BasicTypes_0L_resetStrategy  (&ySigR_z_BasicTypes_0L_resetStrategy)
#endif

/*****
* REMOTE VARIABLE gWeaponryCharacter
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(5),329(20,40),1,8)
******/
#ifndef XNOREMOTEVARIDNODE
extern struct xRemoteVarIdStruct yReVR_z_BasicTypes_23_gWeaponryCharacter;
#define yReVN_z_BasicTypes_23_gWeaponryCharacter  (&yReVR_z_BasicTypes_23_gWeaponryCharacter)
#endif

/*****
* REMOTE VARIABLE gShipsCharacter
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Work\Testing\Battleships\Packages\BasicTypes.sun(5),329(20,40),2,8)
******/
#ifndef XNOREMOTEVARIDNODE
extern struct xRemoteVarIdStruct yReVR_z_BasicTypes_24_gShipsCharacter;
#define yReVN_z_BasicTypes_24_gShipsCharacter  (&yReVR_z_BasicTypes_24_gShipsCharacter)
#endif

/*************************************************************************
**                #CODE directives, #HEADING sections                   **
*************************************************************************/
#endif
