
/* Program generated by Cadvanced 6.2.0 9879 */
#define XSCT_CADVANCED

#ifndef X_IFC_z_Model
#define X_IFC_z_Model
#define SDT_SDLSYSNAME "Model"

/* *************** DECLARATIONS IN SYSTEM Model *************** */


/*------------------------- INCLUDE FILES -------------------------*/
#include "BasicTypes.ifc"
#include "ctypes.ifc"

/*--------------------------- SYNONYMS ----------------------------*/
#define NULL2 SDL_CHARSTRING_LIT("LNULL", "NULL")

#define NULL2 SDL_CHARSTRING_LIT("LNULL", "NULL")

#define stdin2 SDL_CHARSTRING_LIT("Lstdin", "stdin")

#define stdin2 SDL_CHARSTRING_LIT("Lstdin", "stdin")

#define stdout2 SDL_CHARSTRING_LIT("Lstdout", "stdout")

#define stdout2 SDL_CHARSTRING_LIT("Lstdout", "stdout")

#define stderr2 SDL_CHARSTRING_LIT("Lstderr", "stderr")

#define stderr2 SDL_CHARSTRING_LIT("Lstderr", "stderr")


/*---------------------------- SORTS ------------------------------*/

/*****
* SYNTYPE FileName  (TYPE section)
* <<SYSTEM Model>>
* #SDTREF(TEXT,C:\Telelogic\SDL_TTCN_Suite6.2\sdt\include\adt\file.pr,26,9)
******/
#ifndef XTNOUSE_FileName
extern tSDLGenInfo ySDL_z4_FileName;
#define ySDL_FileName ySDL_z4_FileName
#endif
typedef SDL_Charstring  z4_FileName;
#define FileName z4_FileName

/*****
* NEWTYPE TextFile  (TYPE section)
* <<SYSTEM Model>>
* #SDTREF(TEXT,C:\Telelogic\SDL_TTCN_Suite6.2\sdt\include\adt\file.pr,34,9)
******/
#ifndef XTNOUSE_TextFile
extern tSDLUserdefInfo ySDL_TextFile;
#endif
                /* #SDTREF(TEXT,C:\Telelogic\SDL_TTCN_Suite6.2\sdt\include\adt\file.pr,145,36) */
#define MAXFILENAME 256

#ifndef XMONITOR
#include <stdio.h>
#endif

#if defined(SUN4_1_1CC) || defined(SUN4_1_1GCC)
#include <unistd.h>
#endif

typedef  FILE * TextFile;

#ifdef XREADANDWRITEF
static char yCTemp_TextFile[MAXFILENAME];
#endif




/*****
* SYNTYPE FileName  (HEADING section)
* <<SYSTEM Model>>
* #SDTREF(TEXT,C:\Telelogic\SDL_TTCN_Suite6.2\sdt\include\adt\file.pr,26,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z4_FileName;
#define ySrtN_FileName  (&ySrtR_z4_FileName)
#endif

#define yAssF_z4_FileName(V,E,A)  yAssF_SDL_Charstring(V,E,A)
#define yAssF_FileName(V,E,A) yAssF_z4_FileName(V,E,A)
#define yEqF_z4_FileName(Expr1,Expr2)  yEqF_SDL_Charstring(Expr1,Expr2)
#define yNEqF_z4_FileName(Expr1,Expr2)  yNEqF_SDL_Charstring(Expr1,Expr2)
#define yEqF_FileName(Expr1,Expr2) yEqF_z4_FileName(Expr1,Expr2)
#define yNEqF_FileName(Expr1,Expr2) yNEqF_z4_FileName(Expr1,Expr2)
#define yFree_z4_FileName(P)  xFree_SDL_Charstring(P)
#define yFree_FileName(P) yFree_z4_FileName(P)
#define yMkAddr_z4_FileName yMkAddr_SDL_Charstring

/*****
* NEWTYPE TextFile  (HEADING section)
* <<SYSTEM Model>>
* #SDTREF(TEXT,C:\Telelogic\SDL_TTCN_Suite6.2\sdt\include\adt\file.pr,34,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_TextFile;
#endif
                /* #SDTREF(TEXT,C:\Telelogic\SDL_TTCN_Suite6.2\sdt\include\adt\file.pr,145,36) */
#define TextFileNull() (TextFile)0
#ifndef XUSE_GENERIC_FUNC
#define yDef_TextFile(F)  *F = (TextFile)0
#endif
#define stdin1() stdin
#define stdout1() stdout
#define stderr1() stderr

#ifdef LOUIS
#define stdin2() "Lstdin"
#define stdout2() "Lstdout"
#define stderr2() "Lstderr"
#endif

#ifdef XREADANDWRITEF
extern int  yRead_TextFile (void  *Result);
extern char *yWri_TextFile (void  *C);
#endif

extern TextFile Flush         (TextFile F);
extern TextFile GetAndOpenR   (SDL_Charstring Prompt);
extern TextFile GetAndOpenW   (SDL_Charstring Prompt);
extern TextFile OpenR         (SDL_Charstring FName);
extern TextFile OpenW         (SDL_Charstring FName);
extern TextFile OpenA         (SDL_Charstring FName);
#define Close(P)  CloseF(P); P=TextFileNull()
extern TextFile CloseF        (TextFile F);
extern SDL_Boolean IsOpened   (TextFile F);
extern SDL_Boolean AtEOF      (TextFile F);
extern SDL_Boolean AtLastChar (TextFile F);

extern void xPutValue
       (TextFile F, xSortIdNode SortId,
            void * Value, char * FunctionName);
extern TextFile PutReal       (TextFile F, SDL_Real V);
extern TextFile PutTime       (TextFile F, SDL_Time V);
extern TextFile PutDuration   (TextFile F, SDL_Duration V);
extern TextFile PutPid        (TextFile F, SDL_PId V);
extern TextFile PutInteger    (TextFile F, SDL_Integer V);
extern TextFile PutBoolean    (TextFile F, SDL_Boolean V);
extern TextFile PutCharacter  (TextFile F, SDL_Character V);
extern TextFile PutCharstring (TextFile F, SDL_Charstring V);
extern TextFile PutString     (TextFile F, SDL_Charstring V);
extern TextFile PutLine       (TextFile F, SDL_Charstring V);
extern TextFile PutNewLine    (TextFile F);

extern void xGetValue
       (TextFile F, SDL_Charstring Prompt, xSortIdNode SortId,
        void * Result, char * FunctionName);
extern SDL_Real GetReal
       (TextFile F, SDL_Charstring Prompt);
extern SDL_Time GetTime
       (TextFile F, SDL_Charstring Prompt);
extern SDL_Duration GetDuration
       (TextFile F, SDL_Charstring Prompt);
extern SDL_PId GetPid
       (TextFile F, SDL_Charstring Prompt);
extern SDL_Integer GetInteger
       (TextFile F, SDL_Charstring Prompt);
extern SDL_Boolean GetBoolean
       (TextFile F, SDL_Charstring Prompt);
extern SDL_Character GetCharacter
       (TextFile F, SDL_Charstring Prompt);
extern SDL_Charstring GetCharstring
       (TextFile F, SDL_Charstring Prompt);
extern SDL_Charstring GetString
       (TextFile F, SDL_Charstring Prompt);
extern SDL_Charstring GetLine
       (TextFile F, SDL_Charstring Prompt);
extern SDL_Integer GetSeed
       (TextFile F, SDL_Charstring Prompt);

#define GetR(F) (GetReal(F, \
		SDL_CHARSTRING_LIT("LReal: ", "Real: ")))
#define GetT(F) (GetTime(F, \
		SDL_CHARSTRING_LIT("LTime: ", "Time: ")))
#define GetD(F) (GetDuration(F, \
		SDL_CHARSTRING_LIT("LDuration: ", "Duration: ")))
#define GetP(F) (GetPid(F, \
		SDL_CHARSTRING_LIT("LPId: ", "PId: ")))
#define GetI(F) (GetInteger(F, \
		SDL_CHARSTRING_LIT("LInteger: ", "Integer: ")))
#define GetB(F) (GetBoolean(F, \
		SDL_CHARSTRING_LIT("LBoolean: ", "Boolean: ")))
#define GetC(F) (GetCharacter(F, \
		SDL_CHARSTRING_LIT("LCharacter: ", "Character: ")))
#define GetCS(F) (GetCharstring(F, \
		SDL_CHARSTRING_LIT("LCharstring: ", "Charstring: ")))
#define GetStr(F) (GetString(F, \
		SDL_CHARSTRING_LIT("LCharstring: ", "Charstring: ")))
#define GetLn(F) (GetLine(F, \
		SDL_CHARSTRING_LIT("LCharstring: ", "Charstring: ")))
#define GetS(F) (GetSeed(F, \
		SDL_CHARSTRING_LIT("LSeed: ", "Seed: ")))

extern int pfread   (FILE *file, char *buf, int buflen, long position);
extern char *pfgets (char *buf, int buflen, FILE *file);




#define yAssF_TextFile(V,E,A)  V = E
#define yEqF_TextFile(Expr1,Expr2)  ((Expr1) == (Expr2))
#define yNEqF_TextFile(Expr1,Expr2)  ((Expr1) != (Expr2))
#define yMkAddr_TextFile(V,R) (*(R) = V, (void *)R)

/*--------------------------- SIGNALS -----------------------------*/
/* FinishSimulation OUT */
typedef struct {
    SIGNAL_VARS
    SDL_Integer  Param1;
    tStrategyId  Param2;
} yPDef_FinishSimulation;
typedef yPDef_FinishSimulation  *yPDP_FinishSimulation;
#ifndef XNOSIGNALIDNODE
#ifndef FinishSimulation
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_04_FinishSimulation;
#define FinishSimulation (&ySigR_z_BasicTypes_04_FinishSimulation)
#endif
#endif

/* OrderSpeedRequest OUT */
typedef struct {
    SIGNAL_VARS
    tShipId  Param1;
    tStrategyId  Param2;
    tFactorAcceleration  Param3;
} yPDef_OrderSpeedRequest;
typedef yPDef_OrderSpeedRequest  *yPDP_OrderSpeedRequest;
#ifndef XNOSIGNALIDNODE
#ifndef OrderSpeedRequest
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_05_OrderSpeedRequest;
#define OrderSpeedRequest (&ySigR_z_BasicTypes_05_OrderSpeedRequest)
#endif
#endif

/* OrderTurnRequest OUT */
typedef struct {
    SIGNAL_VARS
    tShipId  Param1;
    tStrategyId  Param2;
    tHeadingChange  Param3;
} yPDef_OrderTurnRequest;
typedef yPDef_OrderTurnRequest  *yPDP_OrderTurnRequest;
#ifndef XNOSIGNALIDNODE
#ifndef OrderTurnRequest
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_06_OrderTurnRequest;
#define OrderTurnRequest (&ySigR_z_BasicTypes_06_OrderTurnRequest)
#endif
#endif

/* OrderFireRequest OUT */
typedef struct {
    SIGNAL_VARS
    tShipId  Param1;
    tStrategyId  Param2;
    tNameWeaponry  Param3;
    tStringShotsList  Param4;
} yPDef_OrderFireRequest;
typedef yPDef_OrderFireRequest  *yPDP_OrderFireRequest;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_07_OrderFireRequest (void *SVarP);
#define yFree_OrderFireRequest(S) yFree_z_BasicTypes_07_OrderFireRequest(S)
#endif
#ifndef XNOSIGNALIDNODE
#ifndef OrderFireRequest
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_07_OrderFireRequest;
#define OrderFireRequest (&ySigR_z_BasicTypes_07_OrderFireRequest)
#endif
#endif

/* InitDataComplete IN */
#ifndef XNOSIGNALIDNODE
#ifndef InitDataComplete
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_02_InitDataComplete;
#define InitDataComplete (&ySigR_z_BasicTypes_02_InitDataComplete)
#endif
#endif

/* StartSimulation IN */
typedef struct {
    SIGNAL_VARS
    SDL_Integer  Param1;
} yPDef_StartSimulation;
typedef yPDef_StartSimulation  *yPDP_StartSimulation;
#ifndef XNOSIGNALIDNODE
#ifndef StartSimulation
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_03_StartSimulation;
#define StartSimulation (&ySigR_z_BasicTypes_03_StartSimulation)
#endif
#endif

/* DestroyShip IN */
typedef struct {
    SIGNAL_VARS
    tShipId  Param1;
    tStrategyId  Param2;
    tNameShip  Param3;
} yPDef_DestroyShip;
typedef yPDef_DestroyShip  *yPDP_DestroyShip;
#ifndef XNOSIGNALIDNODE
#ifndef DestroyShip
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_08_DestroyShip;
#define DestroyShip (&ySigR_z_BasicTypes_08_DestroyShip)
#endif
#endif

/* OrderSpeedResponse IN */
typedef struct {
    SIGNAL_VARS
    tShipId  Param1;
    tStrategyId  Param2;
} yPDef_OrderSpeedResponse;
typedef yPDef_OrderSpeedResponse  *yPDP_OrderSpeedResponse;
#ifndef XNOSIGNALIDNODE
#ifndef OrderSpeedResponse
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0B_OrderSpeedResponse;
#define OrderSpeedResponse (&ySigR_z_BasicTypes_0B_OrderSpeedResponse)
#endif
#endif

/* OrderSpeedReject IN */
typedef struct {
    SIGNAL_VARS
    tShipId  Param1;
    tStrategyId  Param2;
} yPDef_OrderSpeedReject;
typedef yPDef_OrderSpeedReject  *yPDP_OrderSpeedReject;
#ifndef XNOSIGNALIDNODE
#ifndef OrderSpeedReject
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0C_OrderSpeedReject;
#define OrderSpeedReject (&ySigR_z_BasicTypes_0C_OrderSpeedReject)
#endif
#endif

/* OrderTurnResponse IN */
typedef struct {
    SIGNAL_VARS
    tShipId  Param1;
    tStrategyId  Param2;
} yPDef_OrderTurnResponse;
typedef yPDef_OrderTurnResponse  *yPDP_OrderTurnResponse;
#ifndef XNOSIGNALIDNODE
#ifndef OrderTurnResponse
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0D_OrderTurnResponse;
#define OrderTurnResponse (&ySigR_z_BasicTypes_0D_OrderTurnResponse)
#endif
#endif

/* OrderTurnReject IN */
typedef struct {
    SIGNAL_VARS
    tShipId  Param1;
    tStrategyId  Param2;
} yPDef_OrderTurnReject;
typedef yPDef_OrderTurnReject  *yPDP_OrderTurnReject;
#ifndef XNOSIGNALIDNODE
#ifndef OrderTurnReject
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0E_OrderTurnReject;
#define OrderTurnReject (&ySigR_z_BasicTypes_0E_OrderTurnReject)
#endif
#endif

/* OrderFireResponse IN */
typedef struct {
    SIGNAL_VARS
    tShipId  Param1;
    tStrategyId  Param2;
} yPDef_OrderFireResponse;
typedef yPDef_OrderFireResponse  *yPDP_OrderFireResponse;
#ifndef XNOSIGNALIDNODE
#ifndef OrderFireResponse
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0F_OrderFireResponse;
#define OrderFireResponse (&ySigR_z_BasicTypes_0F_OrderFireResponse)
#endif
#endif

/* OrderFireReject IN */
typedef struct {
    SIGNAL_VARS
    tShipId  Param1;
    tStrategyId  Param2;
} yPDef_OrderFireReject;
typedef yPDef_OrderFireReject  *yPDP_OrderFireReject;
#ifndef XNOSIGNALIDNODE
#ifndef OrderFireReject
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0G_OrderFireReject;
#define OrderFireReject (&ySigR_z_BasicTypes_0G_OrderFireReject)
#endif
#endif

/* ShipsCurrentState IN */
typedef struct {
    SIGNAL_VARS
    tStrategyId  Param1;
    tStringShipCurrentState  Param2;
} yPDef_ShipsCurrentState;
typedef yPDef_ShipsCurrentState  *yPDP_ShipsCurrentState;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0H_ShipsCurrentState (void *SVarP);
#define yFree_ShipsCurrentState(S) yFree_z_BasicTypes_0H_ShipsCurrentState(S)
#endif
#ifndef XNOSIGNALIDNODE
#ifndef ShipsCurrentState
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0H_ShipsCurrentState;
#define ShipsCurrentState (&ySigR_z_BasicTypes_0H_ShipsCurrentState)
#endif
#endif

/* VisibleShip IN */
typedef struct {
    SIGNAL_VARS
    tStrategyId  Param1;
    tStringEnemyShip  Param2;
} yPDef_VisibleShip;
typedef yPDef_VisibleShip  *yPDP_VisibleShip;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0I_VisibleShip (void *SVarP);
#define yFree_VisibleShip(S) yFree_z_BasicTypes_0I_VisibleShip(S)
#endif
#ifndef XNOSIGNALIDNODE
#ifndef VisibleShip
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0I_VisibleShip;
#define VisibleShip (&ySigR_z_BasicTypes_0I_VisibleShip)
#endif
#endif

/* StrategyVictory IN */
typedef struct {
    SIGNAL_VARS
    tStrategyId  Param1;
} yPDef_StrategyVictory;
typedef yPDef_StrategyVictory  *yPDP_StrategyVictory;
#ifndef XNOSIGNALIDNODE
#ifndef StrategyVictory
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_09_StrategyVictory;
#define StrategyVictory (&ySigR_z_BasicTypes_09_StrategyVictory)
#endif
#endif

/* StrategyLose IN */
typedef struct {
    SIGNAL_VARS
    tStrategyId  Param1;
} yPDef_StrategyLose;
typedef yPDef_StrategyLose  *yPDP_StrategyLose;
#ifndef XNOSIGNALIDNODE
#ifndef StrategyLose
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0A_StrategyLose;
#define StrategyLose (&ySigR_z_BasicTypes_0A_StrategyLose)
#endif
#endif

/* resetStrategy IN */
#ifndef XNOSIGNALIDNODE
#ifndef resetStrategy
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0L_resetStrategy;
#define resetStrategy (&ySigR_z_BasicTypes_0L_resetStrategy)
#endif
#endif

/* messageLog OUT */
typedef struct {
    SIGNAL_VARS
    SDL_Charstring  Param1;
} yPDef_messageLog;
typedef yPDef_messageLog  *yPDP_messageLog;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0J_messageLog (void *SVarP);
#define yFree_messageLog(S) yFree_z_BasicTypes_0J_messageLog(S)
#endif
#ifndef XNOSIGNALIDNODE
#ifndef messageLog
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0J_messageLog;
#define messageLog (&ySigR_z_BasicTypes_0J_messageLog)
#endif
#endif

/* messageError OUT */
typedef struct {
    SIGNAL_VARS
    SDL_Charstring  Param1;
} yPDef_messageError;
typedef yPDef_messageError  *yPDP_messageError;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0K_messageError (void *SVarP);
#define yFree_messageError(S) yFree_z_BasicTypes_0K_messageError(S)
#endif
#ifndef XNOSIGNALIDNODE
#ifndef messageError
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0K_messageError;
#define messageError (&ySigR_z_BasicTypes_0K_messageError)
#endif
#endif


/*--------------------------- CHANNELS ----------------------------*/
#ifndef XOPTCHAN
extern XCONST struct xChannelIdStruct yChaR_z1_StSimInt;
extern XCONST struct xChannelIdStruct yChaRR_z1_StSimInt;
#define xIN_StSimInt (&yChaRR_z1_StSimInt)
#define xOUT_StSimInt (&yChaR_z1_StSimInt)
#endif

#ifndef XOPTCHAN
extern XCONST struct xChannelIdStruct yChaR_z2_StMsgInt;
extern XCONST struct xChannelIdStruct yChaRR_z2_StMsgInt;
#define xIN_StMsgInt (&yChaRR_z2_StMsgInt)
#define xOUT_StMsgInt (&yChaR_z2_StMsgInt)
#endif

#endif
   /* X_IFC_z_Model */
