/* CIF PackageDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF PackageReference (175,25),(200,100) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'D:\Telelogic\SDL_TTCN_Suite4.3\sdt\include\ADT\ctypes.sun' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) */
PACKAGE ctypes;
/* CIF CurrentPage 1 */
/* CIF Text (250,400),(200,100) */
/* CIF Specific SDT FixedSize (200,100) */

/* Copyright (C) 1994 - 2000 by Telelogic AB.
Copyright (C) 1991, 1992, 1993, 1994 by Telelogic Malmoe AB.
Copyright (C) 1990, 1991 by Telesoft Europe AB.
This Program is owned by Telelogic and is protected by national
copyright laws and international copyright treaties. Telelogic
grants you the right to use this Program on one computer or in
one local computer network at any one time.
Under this License you may only modify the source code for the purpose
of adapting it to your environment. You must reproduce and include
any copyright and trademark notices on all copies of the source code.
You may not use, copy, merge, modify or transfer the Program except as
provided in this License.
Telelogic does not warrant that the Program will meet your
requirements or that the operation of the Program will be
uninterrupted and error free. You are solely responsible that the
selection of the Program and the modification of the source code
will achieve your intended results and that the results are actually
obtained. */

/*--------------------------- ShortInt --------------------------*/
/* Corresponds to C types : short int, short                     */
/*---------------------------------------------------------------*/

SYNTYPE ShortInt = Integer

/*#ADT(T A(S) E(S))
#TYPE
typedef short int #(ShortInt);
*/
ENDSYNTYPE ShortInt;



/*--------------------------- LongInt ---------------------------*/
/* Corresponds to C types : long int, long                       */
/*---------------------------------------------------------------*/

SYNTYPE LongInt = Integer

/*#ADT(T A(S) E(S))
#TYPE
typedef long int #(LongInt);
*/
ENDSYNTYPE LongInt;



/*---------------------- UnsignedShortInt -----------------------*/
/* Corresponds to C types : unsigned short int, unsigned short   */
/*---------------------------------------------------------------*/

SYNTYPE UnsignedShortInt = Integer

/*#ADT(T A(S) E(S))
#TYPE
typedef unsigned short #(UnsignedShortInt);
*/
ENDSYNTYPE UnsignedShortInt;



/*------------------------- UnsignedInt -------------------------*/
/* Corresponds to C types : unsigned int, unsigned               */
/*---------------------------------------------------------------*/

SYNTYPE UnsignedInt = Integer
/*#ADT(T A(S) E(S))
#TYPE
typedef unsigned #(UnsignedInt);
*/
ENDSYNTYPE UnsignedInt;



/*----------------------- UnsignedLongInt -----------------------*/
/* Corresponds to C types : unsigned long int, unsigned long     */
/*---------------------------------------------------------------*/

SYNTYPE UnsignedLongInt = Integer

/*#ADT(T A(S) E(S))
#TYPE
typedef unsigned long #(UnsignedLongInt);
*/
ENDSYNTYPE UnsignedLongInt;



/*--------------------------- Float -----------------------------*/
/* Corresponds to C type : float                                 */
/*---------------------------------------------------------------*/

SYNTYPE Float = Real
/*#ADT(T A(S) E(S))
#TYPE
#ifndef XNOUSEOFREAL
typedef float #(Float);
#define Float #(Float)
#endif
*/
ENDSYNTYPE Float;

/*-------------------------- Charstar ---------------------------*/
/* Corresponds to C type : char *                                */
/*---------------------------------------------------------------*/

NEWTYPE Charstar
  LITERALS
    Null                            /*#OP(S)*/;
  OPERATORS
    cstar2cstring : Charstar   -> Charstring;  /* NOT in Cmicro */
    cstring2cstar : Charstring -> Charstar;    /* NOT in Cmicro */
    cstar2vstar   : Charstar   -> Voidstar;
    vstar2cstar   : Voidstar   -> Charstar;
    cstar2vstarstar : Charstar -> Voidstarstar;/*#OP(HP)*/ /*To be used with free*/
  DEFAULT Null;
/*#ADT(T A(S) E(S) H)
#TYPE
typedef char * #(Charstar);
#HEADING
#define #(Null)()       0
#ifndef XSCT_CMICRO
extern SDL_Charstring #(cstar2cstring) XPP((#(Charstar)));
extern #(Charstar) #(cstring2cstar) XPP((SDL_Charstring));
#endif
#define #(cstar2vstar)(P) ((#(Voidstar))P)
#define #(vstar2cstar)(P) ((#(Charstar))P)
#define #(cstar2vstarstar)(P) ((#(Voidstarstar))&P)

#BODY
#ifndef XSCT_CMICRO
extern SDL_Charstring #(cstar2cstring)(
  #(Charstar) C)
{
  SDL_Charstring Result;
  int i = 0;
  if (C != 0) i = strlen(C);
  Result = (SDL_Charstring)XALLOC(i+2, (tSDLTypeInfo *)&ySDL_SDL_Charstring);
  if (i>0) memcpy(Result+1, C, i);
  Result[0] = 'T';
  Result[i+1] = '\0';
  return Result;
}

extern #(Charstar) #(cstring2cstar)(
  SDL_Charstring C)
{
  #(Charstar) Result;
  int i;
  if (C == (SDL_Charstring)0)
    i = 0;
  else
    i = strlen(C)-1;
#ifdef XVALIDATOR_LIB
  Result = (#(Charstar))XALLOC_REF_VAL(i+1, ySrtN_#(Charstar));
#else
  Result = (#(Charstar))XALLOC(i+1, (tSDLTypeInfo *)&ySDL_#(Charstar));
#endif
  if (i>0) memcpy(Result, C+1, i);
  Result[i] = '\0';
  if (C != 0 && C[0] == 'T')
    xFree_SDL_Charstring((void **)&C);
  return Result;
}
#endif
*/
ENDNEWTYPE Charstar;


/*-------------------------- Voidstar ---------------------------*/
/* Corresponds to C type : void *                                */
/*---------------------------------------------------------------*/

NEWTYPE Voidstar
  LITERALS
    Null                            /*#OP(S)*/;
  DEFAULT Null;
/*#ADT(T A(S) E(S) D(H) W(S) R(S))
#TYPE
typedef void * #(Voidstar);
#HEADING
#define #(Null)()       0
*/
ENDNEWTYPE Voidstar;


/*------------------------ Voidstarstar -------------------------*/
/* Corresponds to C type : void **                               */
/*---------------------------------------------------------------*/

NEWTYPE Voidstarstar
  LITERALS
     Null                            /*#OP(S)*/,
     Alloc                           /*#OP(H)*/;
  OPERATORS
    "*>"  : Voidstarstar, Voidstar -> Voidstarstar; /*#OP(SI)*/
    "*>"  : Voidstarstar -> Voidstar;               /*#OP(SI)*/
    "&"  : Voidstar -> Voidstarstar;                /*#OP(SI)*/
    "+"  : Voidstarstar, Integer -> Voidstarstar;   /*#OP(SI)*/
    "-"  : Voidstarstar, Integer -> Voidstarstar;   /*#OP(SI)*/
    vstarstar2vstar : Voidstarstar -> Voidstar;     /*#OP(HP)*/
    vstar2vstarstar : Voidstar -> Voidstarstar;     /*#OP(HP)*/
  DEFAULT Null;
/*#ADT(T A(S) E(S))
#TYPE
typedef void ** #(Voidstarstar);
#HEADING
#define yExtr_#(Voidstarstar)(yVar)  (*(yVar))
#define yAddr_#(Voidstarstar)(yVar)  (*(yVar))
#define #(Null)()       0
#define #(Alloc)() (#0)XALLOC(sizeof(Voidstar), (tSDLTypeInfo *)&ySDL_#(Voidstarstar))
#define #(vstarstar2vstar)(P) ((#(Voidstar))P)
#define #(vstar2vstarstar)(P) ((#(Voidstarstar))P)
*/
ENDNEWTYPE Voidstarstar;


/*--------------------------- CArray ----------------------------*/
/* Corresponds to C arrays                                       */
/*---------------------------------------------------------------*/

GENERATOR Carray (CONSTANT Length, TYPE Itemsort)
  OPERATORS
    modify!  : Carray, Integer, Itemsort -> Carray;
    extract! : Carray, Integer           -> Itemsort;
ENDGENERATOR Carray;



/*---------------------------- Ref ------------------------------*/
/* Corresponds to C pointers                                     */
/*---------------------------------------------------------------*/

GENERATOR Ref (TYPE Itemsort)
  LITERALS
     Null,
     Alloc;
  OPERATORS
    "*>"  : Ref, Itemsort -> Ref;
    "*>"  : Ref -> Itemsort;
    "&"   : Itemsort -> Ref;
    make! : Itemsort -> Ref;
    free  : in/out Ref;
    "+"   : Ref, Integer -> Ref;
    "-"   : Ref, Integer -> Ref;
    ref2vstar : Ref -> Voidstar;
    vstar2ref : Voidstar -> Ref;
    ref2vstarstar : Ref /*#REF*/ -> Voidstarstar;
  DEFAULT Null;
ENDGENERATOR Ref;

procedure free /*#NAME 'XXFREE'*/; fpar p Voidstarstar; external;
/*#CODE
#HEADING
#ifdef XVALIDATOR_LIB
#define XXFREE(p) XFREE_REF_VAL(p,0)
#else
#define XXFREE(p) XFREE(p,0)
#endif
*/


/* CIF End Text */
/* CIF End PackageDiagram */
endpackage ctypes;
/* CIF PackageDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF PackageReference (175,25),(200,100) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF PackageReference (175,25),(200,100) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF PackageReference (175,25),(200,100) */
/* CIF Page 4 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF PackageReference (175,25),(200,100) */
/* CIF Page 5 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF PackageReference (175,25),(200,100) */
/* CIF Page 6 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF PackageReference (175,25),(200,100) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Packages\BasicTypes.sun' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 140 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 140 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 4 Scale 140 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 5 Scale 140 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 6 Scale 140 Grid (50,50) AutoNumbered */
package BasicTypes;
/* CIF CurrentPage 1 */
/* CIF Specific SDT PRRef (400,250),(0,0) 'ConfigFile' */
/*#include 'C:\Battleships\Config\ConfigFile.pr' */
/* CIF Text (200,400),(200,100) */
syntype tSCRange = Integer
  constants 0:MaxSCRange
endsyntype;
syntype tSCMaxSpeed = Integer
  constants 0:MaxSCMaxSpeed
endsyntype;
syntype tSCMaxAcceleration = Integer
  constants 0:MaxSCMaxAcceleration
endsyntype;
syntype tSCMaxResource = Integer
  constants 0:MaxSCMaxResource
endsyntype;
/* CIF End Text */
/* CIF Text (800,400),(200,100) */
syntype tWCPower = Integer
  constants 0:MaxWCPower
endsyntype;
syntype tWCRange = Integer
  constants 0:MaxWCRange
endsyntype;
syntype tWCSpeed = Integer
  constants 0:MaxWCSpeed
endsyntype;
/* CIF End Text */
/* CIF Text (800,750),(200,100) */
syntype tAAWeaponry = Integer
  constants 0:MaxAAWeaponry
endsyntype;
syntype tLUWeaponry = Integer
  constants 0:MaxLUWeaponry
endsyntype;
/* CIF End Text */
/* CIF Text (200,850),(200,100) */
syntype tXCoordinate = Integer
  constants 0:MaxXCoordinate
endsyntype;
syntype tYCoordinate = Integer
  constants 0:MaxYCoordinate
endsyntype;
/* CIF End Text */
/* CIF Text (800,1000),(200,100) */
syntype tFactorAcceleration = Real
  constants -1.0:1.0
endsyntype;
/* CIF End Text */
/* CIF Text (200,1100),(200,100) */
syntype tShipId = Integer
  constants 1:(MaxTypeBattleship + 
               MaxTypeCruiser + 
               MaxTypeDestroyer + 
               MaxTypeMissileCutter + 
               MaxTypeRepairBoat) *
               AmountStrategy
endsyntype;
/* CIF End Text */
/* CIF Text (800,1150),(200,100) */
syntype tStrategyId = Integer
  constants 1:AmountStrategy
endsyntype;
/* CIF End Text */
/* CIF Text (800,1300),(200,100) */
synonym sqrt2  Real = 1.41421356;
/* CIF End Text */
/* CIF CurrentPage 2 */
/* CIF Text (200,400),(200,100) */
newtype tHeading
  literals
    NORTH,
    NORTH_EAST,
    EAST,
    SOUTH_EAST,
    SOUTH,
    SOUTH_WEST,
    WEST,
    NORTH_WEST;
  operators
    h2i : tHeading -> Integer;
    i2h : Integer -> tHeading;
  operator h2i;
    fpar lit tHeading;
    returns Integer; referenced;
  operator i2h;
    fpar int Integer;
    returns tHeading; referenced;
endnewtype;
/* CIF End Text */
/* CIF Text (700,400),(200,100) */
newtype tDeep
  literals
    LAND,
    FLEET,
    NORMAL,
    DEEPLY,
    VERY_DEEPLY;
  operators
    d2i : tDeep -> Integer;
    i2d : Integer -> tDeep;
  operator d2i;
    fpar lit tDeep;
    returns Integer; referenced;
  operator i2d;
    fpar int Integer;
    returns tDeep; referenced;
endnewtype;
/* CIF End Text */
/* CIF Text (200,1150),(200,100) */
newtype tNameWeaponry
  literals
    MISSILE,
    TORPEDO,
    SHELL,
    REPAIR;
  operators
    nw2i : tNameWeaponry -> Integer;
    i2nw : Integer -> tNameWeaponry;
  operator nw2i;
    fpar lit tNameWeaponry;
    returns Integer; referenced;
  operator i2nw;
    fpar int Integer;
    returns tNameWeaponry; referenced;
endnewtype;
/* CIF End Text */
/* CIF Text (800,1150),(200,100) */
newtype tNameShip
  literals
    BATTLESHIP,
    CRUISER,
    DESTROYER,
    MISSILE_CUTTER,
    REPAIR_BOAT;
  operators
    ns2i : tNameShip -> Integer;
    i2ns : Integer -> tNameShip;
  operator ns2i;
    fpar lit tNameShip;
    returns Integer; referenced;
  operator i2ns;
    fpar int Integer;
    returns tNameShip; referenced;
endnewtype;
/* CIF End Text */
/* CIF Text (200,1750),(200,100) */
newtype tHeadingChange
  literals
    LEFT,
    RIGHT;
endnewtype;
/* CIF End Text */
/* CIF Operator h2i (1400,400),(200,100) */
/* CIF TextPosition (1425,450) */
/* CIF Operator i2h (1400,550),(200,100) */
/* CIF TextPosition (1425,600) */
/* CIF Operator d2i (1400,700),(200,100) */
/* CIF TextPosition (1425,750) */
/* CIF Operator i2d (1400,850),(200,100) */
/* CIF TextPosition (1425,900) */
/* CIF Operator nw2i (1400,1000),(200,100) */
/* CIF TextPosition (1425,1050) */
/* CIF Operator i2nw (1400,1150),(200,100) */
/* CIF TextPosition (1425,1200) */
/* CIF Operator ns2i (1400,1300),(200,100) */
/* CIF TextPosition (1425,1350) */
/* CIF Operator i2ns (1400,1450),(200,100) */
/* CIF TextPosition (1425,1500) */
/* CIF CurrentPage 3 */
/* CIF Text (200,400),(200,100) */
newtype tCoordinates
  struct
    x tXCoordinate;
    y tYCoordinate;
endnewtype;
/* CIF End Text */
/* CIF Text (200,600),(200,100) */
newtype tWeaponryCharacter
  struct
    Power tWCPower;
    Range tWCRange;
    Speed tWCSpeed;      
endnewtype;
/* CIF End Text */
/* CIF Text (200,850),(200,100) */
newtype tShipCharacter
  struct
    Range tSCRange;
    MaxSpeed tSCMaxSpeed;
    MaxAcceleration tSCMaxAcceleration;
    MaxResource tSCMaxResource;
    MaxAmmunition tArrayAmountAmmunition;
    MaxLaunchUnit tArrayAmountLaunchUnit;
    MaxDeep tDeep;
endnewtype;
/* CIF End Text */
/* CIF Text (200,1250),(200,100) */
newtype tShipCurrentState
  struct
    ShipId tShipId;
    StrategyId tStrategyId;
    TypeShip tNameShip;
    Speed tSCMaxSpeed;
    Heading tHeading;
    Resource tSCMaxResource;
    Coordinates tCoordinates;
    Ammunition tArrayAmountAmmunition;
endnewtype;
/* CIF End Text */
/* CIF Text (200,1650),(200,100) */
newtype tEnemyShip
  struct
    ShipId tShipId;
    StrategyId tStrategyId;
    TypeShip tNameShip;
    Speed tSCMaxSpeed;
    Heading tHeading;
    Coordinates tCoordinates;
endnewtype;
/* CIF End Text */
/* CIF CurrentPage 4 */
/* CIF Text (200,400),(200,100) */
newtype tArrayWeaponryCharacter
  Array(tNameWeaponry,tWeaponryCharacter);
endnewtype;
/* CIF End Text */
/* CIF Text (200,550),(200,100) */
newtype tArrayShipsCharacter
  Array(tNameShip,tShipCharacter);
endnewtype;
/* CIF End Text */
/* CIF Text (200,700),(200,100) */
newtype tArrayAmountAmmunition
  Array(tNameWeaponry,tAAWeaponry);
endnewtype;
/* CIF End Text */
/* CIF Text (200,850),(200,100) */
newtype tArrayAmountLaunchUnit
  Array(tNameWeaponry,tLUWeaponry);
endnewtype;
/* CIF End Text */
/* CIF Text (200,1000),(200,100) */
newtype tStringShipCurrentState
  String(tShipCurrentState,empty);
endnewtype;
/* CIF End Text */
/* CIF Text (200,1150),(200,100) */
newtype tStringEnemyShip
  String(tEnemyShip,empty);
endnewtype;
/* CIF End Text */
/* CIF Text (200,1300),(200,100) */
newtype tStringShotsList
  String(tCoordinates,empty);
endnewtype;
/* CIF End Text */
/* CIF CurrentPage 5 */
/* CIF Text (200,400),(200,100) */
remote gWeaponryCharacter tArrayWeaponryCharacter;
remote gShipsCharacter tArrayShipsCharacter;
/* CIF End Text */
/* CIF Text (200,550),(200,100) */
procedure getDeepXY;
  fpar
    x tXCoordinate,
    y tYCoordinate;
  returns Integer;
external;
/* CIF End Text */
/* CIF Text (200,800),(200,100) */
procedure getDistance;
  fpar
    xps Integer,
    yps Integer,
    xpf Integer,
    ypf Integer;
  returns Integer;
external;
/* CIF End Text */
/* CIF CurrentPage 6 */
/* CIF Text (200,400),(200,100) */
signal
  InitDataComplete,
  StartSimulation(Integer),
  FinishSimulation(Integer,tStrategyId),
  OrderSpeedRequest(tShipId,tStrategyId,tFactorAcceleration),
  OrderTurnRequest(tShipId,tStrategyId,tHeadingChange),
  OrderFireRequest(tShipId,tStrategyId,tNameWeaponry,tStringShotsList),
  DestroyShip(tShipId,tStrategyId,tNameShip),
  StrategyVictory(tStrategyId),
  StrategyLose(tStrategyId),
  OrderSpeedResponse(tShipId,tStrategyId),
  OrderSpeedReject(tShipId,tStrategyId),
  OrderTurnResponse(tShipId,tStrategyId),
  OrderTurnReject(tShipId,tStrategyId),
  OrderFireResponse(tShipId,tStrategyId),
  OrderFireReject(tShipId,tStrategyId),
  ShipsCurrentState(tStrategyId,tStringShipCurrentState),
  VisibleShip(tStrategyId,tStringEnemyShip),
  messageLog(Charstring),
  messageError(Charstring);
/* CIF End Text */
/* CIF Text (200,1150),(200,100) */
signallist fromSimulator = (toStrategy);
/* CIF End Text */
/* CIF Text (800,1150),(200,100) */
signallist toSimulator = (fromStrategy);
/* CIF End Text */
/* CIF Text (200,1300),(200,100) */
signallist toStrategy = 
InitDataComplete,
StartSimulation,
DestroyShip,
OrderSpeedResponse,
OrderSpeedReject,
OrderTurnResponse,
OrderTurnReject,
OrderFireResponse,
OrderFireReject,
ShipsCurrentState,
VisibleShip,
StrategyVictory,
StrategyLose;
/* CIF End Text */
/* CIF Text (600,1300),(200,100) */
signallist fromStrategy =
FinishSimulation,
OrderSpeedRequest,
OrderTurnRequest,
OrderFireRequest;
/* CIF End Text */
/* CIF End PackageDiagram */
endpackage BasicTypes;
/* CIF OperatorDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Packages\h2i.sop' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
operator h2i
; fpar
  lit tHeading;
returns Integer;
/* CIF DefaultSize (100,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,250),(200,100) */
start ;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400),(200,100) */
decision lit;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(300,450),(300,550) */
/* CIF TextPosition (325,500) */
(NORTH):
/* CIF Return (250,550) */
return 0;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1500,450),(1500,550) */
/* CIF TextPosition (1525,500) */
(NORTH_WEST):
/* CIF Return (1450,550) */
return 7;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(450,450),(450,700) */
/* CIF TextPosition (475,650) */
(NORTH_EAST):
/* CIF Return (400,700) */
return 1;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1350,450),(1350,700) */
/* CIF TextPosition (1375,650) */
(WEST):
/* CIF Return (1300,700) */
return 6;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(600,450),(600,850) */
/* CIF TextPosition (625,800) */
(EAST):
/* CIF Return (550,850) */
return 2;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1200,450),(1200,850) */
/* CIF TextPosition (1225,800) */
(SOUTH_WEST):
/* CIF Return (1150,850) */
return 5;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(750,450),(750,1000) */
/* CIF TextPosition (775,950) */
(SOUTH_EAST):
/* CIF Return (700,1000) */
return 3;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1050,450),(1050,1000) */
/* CIF TextPosition (1075,950) */
(SOUTH):
/* CIF Return (1000,1000) */
return 4;
/* CIF End Decision */
enddecision;
/* CIF End OperatorDiagram */
endoperator h2i;
/* CIF OperatorDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Packages\i2h.sop' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
operator i2h
; fpar
  int Integer;
returns tHeading;
/* CIF DefaultSize (100,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,250),(200,100) */
start ;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400),(200,100) */
decision int mod 8 ;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(300,450),(300,550) */
/* CIF TextPosition (325,500) */
(=0):
/* CIF Return (250,550) */
return NORTH;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1500,450),(1500,550) */
/* CIF TextPosition (1525,500) */
(=7):
/* CIF Return (1450,550) */
return NORTH_WEST;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(450,450),(450,700) */
/* CIF TextPosition (475,650) */
(=1):
/* CIF Return (400,700) */
return NORTH_EAST;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1350,450),(1350,700) */
/* CIF TextPosition (1375,650) */
(=6):
/* CIF Return (1300,700) */
return WEST;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(600,450),(600,850) */
/* CIF TextPosition (625,800) */
(=2):
/* CIF Return (550,850) */
return EAST;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1200,450),(1200,850) */
/* CIF TextPosition (1225,800) */
(=5):
/* CIF Return (1150,850) */
return SOUTH_WEST;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(750,450),(750,1000) */
/* CIF TextPosition (775,950) */
(=3):
/* CIF Return (700,1000) */
return SOUTH_EAST;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1050,450),(1050,1000) */
/* CIF TextPosition (1075,950) */
(=4):
/* CIF Return (1000,1000) */
return SOUTH;
/* CIF End Decision */
enddecision;
/* CIF End OperatorDiagram */
endoperator i2h;
/* CIF OperatorDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Packages\d2i.sop' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
operator d2i
; fpar
  lit tDeep;
returns Integer;
/* CIF DefaultSize (100,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,250),(200,100) */
start ;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400),(200,100) */
decision lit;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(550,450),(550,550) */
/* CIF TextPosition (575,525) */
(LAND):
/* CIF Return (500,550) */
return 0;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1250,450),(1250,550) */
/* CIF TextPosition (1275,500) */
(VERY_DEEPLY):
/* CIF Return (1200,550) */
return 4;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(700,450),(700,700) */
/* CIF TextPosition (725,650) */
(FLEET):
/* CIF Return (650,700) */
return 1;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1100,450),(1100,700) */
/* CIF TextPosition (1125,650) */
(DEEPLY):
/* CIF Return (1050,700) */
return 3;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,850) */
/* CIF TextPosition (925,800) */
(NORMAL):
/* CIF Return (850,850) */
return 2;
/* CIF End Decision */
enddecision;
/* CIF End OperatorDiagram */
endoperator d2i;
/* CIF OperatorDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Packages\i2d.sop' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
operator i2d
; fpar
  int Integer;
returns tDeep;
/* CIF DefaultSize (100,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,250),(200,100) */
start ;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400),(200,100) */
decision int mod 5;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(550,450),(550,550) */
/* CIF TextPosition (600,500) */
(=0):
/* CIF Return (500,550) */
return LAND;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1250,450),(1250,550) */
/* CIF TextPosition (1275,500) */
(=4):
/* CIF Return (1200,550) */
return VERY_DEEPLY;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(700,450),(700,700) */
/* CIF TextPosition (725,650) */
(=1):
/* CIF Return (650,700) */
return FLEET;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1100,450),(1100,700) */
/* CIF TextPosition (1125,650) */
(=3):
/* CIF Return (1050,700) */
return DEEPLY;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,850) */
/* CIF TextPosition (925,800) */
(=2):
/* CIF Return (850,850) */
return NORMAL;
/* CIF End Decision */
enddecision;
/* CIF End OperatorDiagram */
endoperator i2d;
/* CIF OperatorDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Packages\nw2i.sop' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
operator nw2i
; fpar
  lit tNameWeaponry;
returns Integer;
/* CIF DefaultSize (100,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,250),(200,100) */
start ;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400),(200,100) */
decision lit;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(600,450),(600,550) */
/* CIF TextPosition (625,500) */
(MISSILE):
/* CIF Return (550,550) */
return 0;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1200,450),(1200,550) */
/* CIF TextPosition (1225,500) */
(REPAIR):
/* CIF Return (1150,550) */
return 3;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(750,450),(750,700) */
/* CIF TextPosition (775,650) */
(TORPEDO):
/* CIF Return (700,700) */
return 1;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1050,450),(1050,700) */
/* CIF TextPosition (1075,650) */
(SHELL):
/* CIF Return (1000,700) */
return 2;
/* CIF End Decision */
enddecision;
/* CIF End OperatorDiagram */
endoperator nw2i;
/* CIF OperatorDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Packages\i2nw.sop' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
operator i2nw
; fpar
  int Integer;
returns tNameWeaponry;
/* CIF DefaultSize (100,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,250),(200,100) */
start ;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400),(200,100) */
decision int mod 4;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(600,450),(600,550) */
/* CIF TextPosition (625,500) */
(=0):
/* CIF Return (550,550) */
return MISSILE;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1200,450),(1200,550) */
/* CIF TextPosition (1225,500) */
(=3):
/* CIF Return (1150,550) */
return REPAIR;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(750,450),(750,700) */
/* CIF TextPosition (775,650) */
(=1):
/* CIF Return (700,700) */
return TORPEDO;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1050,450),(1050,700) */
/* CIF TextPosition (1075,650) */
(=2):
/* CIF Return (1000,700) */
return SHELL;
/* CIF End Decision */
enddecision;
/* CIF End OperatorDiagram */
endoperator i2nw;
/* CIF OperatorDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Packages\ns2i.sop' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
operator ns2i
; fpar
  lit tNameShip;
returns Integer;
/* CIF DefaultSize (100,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,250),(200,100) */
start ;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400),(200,100) */
decision lit;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(550,450),(550,550) */
/* CIF TextPosition (575,500) */
(BATTLESHIP):
/* CIF Return (500,550) */
return 0;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1250,450),(1250,550) */
/* CIF TextPosition (1275,500) */
(REPAIR_BOAT):
/* CIF Return (1200,550) */
return 4;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(700,450),(700,700) */
/* CIF TextPosition (725,650) */
(CRUISER):
/* CIF Return (650,700) */
return 1;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1100,450),(1100,700) */
/* CIF TextPosition (1125,650) */
(MISSILE_CUTTER):
/* CIF Return (1050,700) */
return 3;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,850) */
/* CIF TextPosition (925,800) */
(DESTROYER):
/* CIF Return (850,850) */
return 2;
/* CIF End Decision */
enddecision;
/* CIF End OperatorDiagram */
endoperator ns2i;
/* CIF OperatorDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Packages\i2ns.sop' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
operator i2ns
; fpar
  int Integer;
returns tNameShip;
/* CIF DefaultSize (100,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,250),(200,100) */
start ;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400),(200,100) */
decision int mod 5;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(550,450),(550,550) */
/* CIF TextPosition (575,500) */
(=0):
/* CIF Return (500,550) */
return BATTLESHIP;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1250,450),(1250,550) */
/* CIF TextPosition (1275,500) */
(=4):
/* CIF Return (1200,550) */
return REPAIR_BOAT;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,450),(700,450),(700,700) */
/* CIF TextPosition (725,650) */
(=1):
/* CIF Return (650,700) */
return CRUISER;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1100,450),(1100,700) */
/* CIF TextPosition (1125,650) */
(=3):
/* CIF Return (1050,700) */
return MISSILE_CUTTER;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,850) */
/* CIF TextPosition (925,800) */
(=2):
/* CIF Return (850,850) */
return DESTROYER;
/* CIF End Decision */
enddecision;
/* CIF End OperatorDiagram */
endoperator i2ns;
/* CIF SystemDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF PackageReference (175,25),(200,100) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\BattleShips.ssy' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
use ctypes;
use BasicTypes;
system BattleShips;
/*#include 'file.pr'*/
/* CIF CurrentPage 1 */
/* CIF Channel (1100,500),(1750,500) */
/* CIF TextPosition (1300,425) */
/* CIF TextPosition (1500,550) SignalList1 */
/* CIF Arrow1Position (1703,500) */
channel St2MsgInt from Strategy2 to env with messageLog,
messageError;
endchannel St2MsgInt;
/* CIF Channel (950,1000),(950,600) */
/* CIF TextPosition (750,775) */
/* CIF TextPosition (975,650) SignalList1 */
/* CIF TextPosition (975,900) SignalList2 */
/* CIF Arrow1Position (950,616) */
/* CIF Arrow2Position (950,980) */
channel SimSt2Int from Simulator to Strategy2 with (toStrategy);
from Strategy2 to Simulator with (fromStrategy);
endchannel SimSt2Int;
/* CIF Channel (1100,1100),(1750,1100) */
/* CIF TextPosition (1325,1025) */
/* CIF TextPosition (1500,1150) SignalList1 */
/* CIF Arrow1Position (1705,1100) */
channel SimMsgInt from Simulator to env with messageLog,
messageError;
endchannel SimMsgInt;
/* CIF Channel (950,1200),(950,1600) */
/* CIF TextPosition (750,1440) */
/* CIF TextPosition (975,1497) SignalList1 */
/* CIF TextPosition (975,1254) SignalList2 */
/* CIF Arrow1Position (950,1574) */
/* CIF Arrow2Position (950,1229) */
channel SimSt1Int from Simulator to Strategy1 with (toStrategy);
from Strategy1 to Simulator with (fromStrategy);
endchannel SimSt1Int;
/* CIF Channel (1100,1700),(1750,1700) */
/* CIF TextPosition (1325,1625) */
/* CIF TextPosition (1500,1750) SignalList1 */
/* CIF Arrow1Position (1712,1700) */
channel St1MsgInt from Strategy1 to env with messageLog,
messageError;
endchannel St1MsgInt;
/* CIF Block (800,400),(300,200) */
/* CIF TextPosition (825,475) */
block Strategy2 referenced;
/* CIF Block (800,1000),(300,200) */
/* CIF TextPosition (825,1075) */
block Simulator referenced;
/* CIF Block (800,1600),(300,200) */
/* CIF TextPosition (825,1675) */
block Strategy1 referenced;
/* CIF End SystemDiagram */
endsystem BattleShips;
/* CIF BlockDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\Simulator.sbk' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 140 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 140 Grid (50,50) AutoNumbered */
block Simulator;
/* CIF CurrentPage 1 */
/* CIF Text (200,400),(200,100) */
newtype tShipParameters
  struct
    ShipId tShipId;
    StrategyId tStrategyId;
    TypeShip tNameShip;
    Speed tSCMaxSpeed;
    Heading tHeading;
    Resource tSCMaxResource;
    Coordinates tCoordinates;
    Ammunition tArrayAmountAmmunition;
    VisibleToStrategy tArrayVisible;
endnewtype;
/* CIF End Text */
/* CIF Text (900,400),(200,100) */
remote gShips tStringShipParameters;
remote gShots tStringShotParameters;
remote gASI tArraySI;
/* CIF End Text */
/* CIF Text (900,550),(200,100) */
signal
  SendData,
  InitSocket,
  SendDataComplete(tErrorCode),
  InitSocketComplete(tErrorCode);
/* CIF End Text */
/* CIF Text (200,850),(200,100) */
newtype tShotParameters
  struct
    TypeWeaponry tNameWeaponry;
    CurrentCoordinates tCoordinates;
    FinishCoordinates tCoordinates;
endnewtype;
/* CIF End Text */
/* CIF Text (200,1100),(200,100) */
newtype tArrayVisible
  Array(tStrategyId,Boolean);
endnewtype;
/* CIF End Text */
/* CIF Text (200,1250),(200,100) */
newtype tStringShipParameters
  String(tShipParameters,empty);
endnewtype;
/* CIF End Text */
/* CIF Text (200,1400),(200,100) */
newtype tStringShotParameters
  String(tShotParameters,empty);
endnewtype;
/* CIF End Text */
/* CIF Text (200,1550),(200,100) */
newtype tErrorCode
  literals
    EC_OK,
    EC_FAULT;
endnewtype;
/* CIF End Text */
/* CIF Text (200,1800),(200,100) */
newtype tArraySI
  Array(tStrategyId, Boolean);
endnewtype;
/* CIF End Text */
/* CIF CurrentPage 2 */
/* CIF Text (200,400),(200,100) */
procedure checkMap;
  returns Integer;
external;
/* CIF End Text */
/* CIF Text (200,550),(200,100) */
procedure generatePoints;
  fpar
    Radius Integer,
    Deep Integer,
    NumOfStrat Integer;
  returns Integer;
external;
/* CIF End Text */
/* CIF Text (200,850),(200,100) */
procedure getFleetPointX;
  fpar
    StratNum Integer;
  returns Integer;
external;
/* CIF End Text */
/* CIF Text (200,1050),(200,100) */
procedure getFleetPointY;
  fpar
    StratNum Integer;
  returns Integer;
external;
/* CIF End Text */
/* CIF Text (200,1250),(200,100) */
procedure FreeAll;
external;
/* CIF End Text */
/* CIF Text (200,1400),(200,100) */
procedure getHeading;
  returns Integer;
external;
/* CIF End Text */
/* CIF CurrentPage 3 */
/* CIF SignalRoute (800,550),(150,550) */
/* CIF TextPosition (400,500) */
/* CIF TextPosition (175,575) SignalList1 */
/* CIF TextPosition (575,600) SignalList2 */
signalroute chRtrSt2 from Router to env with (toStrategy);
from env to Router with (fromStrategy);
/* CIF SignalRoute (1100,550),(1750,550) */
/* CIF TextPosition (1350,500) */
/* CIF TextPosition (1550,575) SignalList1 */
/* CIF TextPosition (1125,575) SignalList2 */
signalroute chRtrSt1 from Router to env with (toStrategy);
from env to Router with (fromStrategy);
/* CIF SignalRoute (950,650),(950,1000) */
/* CIF TextPosition (975,790) */
/* CIF TextPosition (975,950) SignalList1 */
/* CIF TextPosition (975,675) SignalList2 */
signalroute chMnRtr from Router to Main with (fromStrategy);
from Main to Router with (toStrategy);
/* CIF SignalRoute (1100,1100),(1750,1100) */
/* CIF TextPosition (1325,1025) */
/* CIF TextPosition (1525,1125) SignalList1 */
signalroute chSimMsg from Main to env with messageLog,
messageError;
/* CIF SignalRoute (950,1200),(950,1500) */
/* CIF TextPosition (975,1333) */
/* CIF TextPosition (975,1400) SignalList1 */
/* CIF TextPosition (975,1225) SignalList2 */
signalroute chMnDS from Main to DataSender with SendData,
InitSocket;
from DataSender to Main with SendDataComplete,
InitSocketComplete;
/* CIF Process (800,450),(300,200) */
/* CIF TextPosition (825,525) */
process Router(1,1) referenced;
/* CIF Process (800,1000),(300,200) */
/* CIF TextPosition (825,1075) */
process Main(1,1) referenced;
/* CIF Process (800,1500),(300,200) */
/* CIF TextPosition (825,1575) */
process DataSender(1,1) referenced;
/* CIF Connect */
/* CIF TextPosition (75,475) */
connect SimSt2Int and chRtrSt2;
/* CIF Connect */
/* CIF TextPosition (1675,475) */
connect SimSt1Int and chRtrSt1;
/* CIF Connect */
/* CIF TextPosition (1675,1025) */
connect SimMsgInt and chSimMsg;
/* CIF End BlockDiagram */
endblock Simulator;
/* CIF ProcessDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 4 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\Router.spr' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 4 Scale 120 Grid (50,50) AutoNumbered */
process Router;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (1150,100) */
dcl
  rTime Integer,
  rShipId tShipId,
  rStrategyId tStrategyId,
  rNameShip tNameShip,
  rStringEnemyShip tStringEnemyShip,
  rStringShipCurrentState tStringShipCurrentState,
  rFactorAcceleration tFactorAcceleration,
  rHeadingChange tHeadingChange,
  rNameWeaponry tNameWeaponry,
  rStringShotsList tStringShotsList;
/* CIF End Text */
/* CIF Text (1150,500) */
imported gASI tArraySI;
dcl
  rASI tArraySI;
/* CIF End Text */
/* CIF Procedure (50,250),(550,100) */
/* CIF TextPosition (75,275) */
procedure SendOrderSpeedResponse referenced;
/* CIF Procedure (50,400),(550,100) */
/* CIF TextPosition (75,425) */
procedure SendOrderSpeedReject referenced;
/* CIF Procedure (50,550),(550,100) */
/* CIF TextPosition (75,575) */
procedure SendOrderTurnResponse referenced;
/* CIF Procedure (50,700),(550,100) */
/* CIF TextPosition (75,725) */
procedure SendOrderTurnReject referenced;
/* CIF Procedure (50,850),(550,100) */
/* CIF TextPosition (75,875) */
procedure SendOrderFireResponse referenced;
/* CIF Procedure (50,1000),(550,100) */
/* CIF TextPosition (82,1025) */
procedure SendOrderFireReject referenced;
/* CIF Procedure (50,1150),(550,100) */
/* CIF TextPosition (82,1175) */
procedure SendDestroyShip referenced;
/* CIF Procedure (50,1300),(550,100) */
/* CIF TextPosition (82,1325) */
procedure SendVisibleShip referenced;
/* CIF Procedure (700,1300),(550,100) */
/* CIF TextPosition (725,1325) */
procedure SendOrderSpeedRequest referenced;
/* CIF Procedure (50,1450),(550,100) */
/* CIF TextPosition (82,1475) */
procedure SendShipsCurrentState referenced;
/* CIF Procedure (700,1450),(550,100) */
/* CIF TextPosition (725,1475) */
procedure SendOrderTurnRequest referenced;
/* CIF Procedure (50,1600),(550,100) */
/* CIF TextPosition (82,1625) */
procedure SendStrategyVictory referenced;
/* CIF Procedure (700,1600),(550,100) */
/* CIF TextPosition (725,1625) */
procedure SendOrderFireRequest referenced;
/* CIF Procedure (50,1750),(550,100) */
/* CIF TextPosition (82,1775) */
procedure SendStrategyLose referenced;
/* CIF Procedure (700,1750),(550,100) */
/* CIF TextPosition (732,1775) */
procedure SendFinishSimulation referenced;
/* CIF CurrentPage 2 */
/* CIF Start (1100,50) */
start ;
/* CIF Line (1200,150),(1200,200) */
/* CIF NextState (1100,200) */
nextstate Wait;
/* CIF State (1100,200) */
state Wait;
/* CIF Line (1200,300),(1200,325),(150,325),(150,350) */
/* CIF Input (50,350) Right */
input 
/* CIF TextExtension (300,350) Right */
/* CIF Line (300,400),(250,400) */
StartSimulation
(rTime)
/* CIF End TextExtension */
;
/* CIF Line (150,450),(150,500) */
/* CIF Task (50,500) */
task 
/* CIF TextExtension (300,500) Right */
/* CIF Line (300,550),(250,550) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (150,600),(150,650) */
/* CIF Decision (50,650) */
decision rASI(1);
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (250,700),(400,700),(400,800) */
/* CIF TextPosition (425,725) */
(true):
/* CIF Output (300,800) Right */
output 
/* CIF TextExtension (550,800) Right */
/* CIF Line (550,850),(500,850) */
StartSimulation
(rTime) via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (400,900),(400,925),(150,925),(150,950) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,750),(150,950) */
/* CIF TextPosition (175,775) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Decision (50,950) */
decision rASI(2);
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (250,1000),(400,1000),(400,1100) */
/* CIF TextPosition (425,1025) */
(true):
/* CIF Output (300,1100) Right */
output 
/* CIF TextExtension (550,1100) Right */
/* CIF Line (550,1150),(500,1150) */
StartSimulation
(rTime) via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (400,1200),(400,1225),(150,1225),(150,1250) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,1050),(150,1250) */
/* CIF TextPosition (175,1075) */
(false):
/* CIF End Decision */
enddecision;
/* CIF NextState (50,1250) */
nextstate -;
/* CIF Line (1200,300),(1200,350) */
/* CIF Input (1100,350) Right */
input 
/* CIF TextExtension (1350,350) Right */
/* CIF Line (1350,400),(1300,400) */
InitDataComplete
/* CIF End TextExtension */
;
/* CIF Line (1200,450),(1200,500) */
/* CIF Task (1100,500) */
task 
/* CIF TextExtension (1350,500) Right */
/* CIF Line (1350,550),(1300,550) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (1200,600),(1200,650) */
/* CIF Decision (1100,650) */
decision rASI(1);
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1300,700),(1450,700),(1450,800) */
/* CIF TextPosition (1475,725) */
(true):
/* CIF Output (1350,800) Right */
output 
/* CIF TextExtension (1600,800) Right */
/* CIF Line (1600,850),(1550,850) */
InitDataComplete
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1450,900),(1450,925),(1200,925),(1200,950) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1200,750),(1200,950) */
/* CIF TextPosition (1225,775) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Decision (1100,950) */
decision rASI(2);
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1300,1000),(1450,1000),(1450,1100) */
/* CIF TextPosition (1475,1025) */
(true):
/* CIF Output (1350,1100) Right */
output 
/* CIF TextExtension (1600,1100) Right */
/* CIF Line (1600,1150),(1550,1150) */
InitDataComplete
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1450,1200),(1450,1225),(1200,1225),(1200,1250) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1200,1050),(1200,1250) */
/* CIF TextPosition (1225,1075) */
(false):
/* CIF End Decision */
enddecision;
/* CIF NextState (1100,1250) */
nextstate -;
/* CIF End State */
endstate;
/* CIF CurrentPage 1 */
/* CIF CurrentPage 3 */
/* CIF State (50,250) */
state Wait;
/* CIF Line (150,350),(150,400) */
/* CIF Input (50,400) Right */
input 
/* CIF TextExtension (300,400) Right */
/* CIF Line (300,450),(250,450) */
VisibleShip(
rStrategyId,
rStringEnemyShip)
/* CIF End TextExtension */
;
/* CIF Line (150,500),(150,600) */
/* CIF ProcedureCall (50,600) */
call 
/* CIF TextExtension (300,600) Right */
/* CIF Line (300,650),(250,650) */
SendVisibleShip
/* CIF End TextExtension */
;
/* CIF Line (150,700),(150,750) */
/* CIF NextState (50,750) */
nextstate -;
/* CIF Line (150,350),(150,375),(700,375),(700,400) */
/* CIF Input (600,400) Right */
input 
/* CIF TextExtension (850,400) Right */
/* CIF Line (850,450),(800,450) */
DestroyShip(
rShipId,
rStrategyId,
rNameShip)
/* CIF End TextExtension */
;
/* CIF Line (700,500),(700,600) */
/* CIF ProcedureCall (600,600) */
call 
/* CIF TextExtension (850,600) Right */
/* CIF Line (850,650),(800,650) */
SendDestroyShip
/* CIF End TextExtension */
;
/* CIF Line (700,700),(700,750) */
/* CIF NextState (600,750) */
nextstate -;
/* CIF Line (150,350),(150,375),(1250,375),(1250,400) */
/* CIF Input (1150,400) Right */
input 
/* CIF TextExtension (1400,400) Right */
/* CIF Line (1400,450),(1350,450) */
ShipsCurrentState(
rStrategyId,
rStringShipCurrentState)
/* CIF End TextExtension */
;
/* CIF Line (1250,500),(1250,600) */
/* CIF ProcedureCall (1150,600) */
call 
/* CIF TextExtension (1400,600) Right */
/* CIF Line (1400,650),(1350,650) */
SendShipsCurrentState
/* CIF End TextExtension */
;
/* CIF Line (1250,700),(1250,750) */
/* CIF NextState (1150,750) */
nextstate -;
/* CIF End State */
endstate;
/* CIF State (50,900) */
state Wait;
/* CIF Line (150,1000),(150,1050) */
/* CIF Input (50,1050) Right */
input 
/* CIF TextExtension (300,1050) Right */
/* CIF Line (300,1100),(250,1100) */
StrategyVictory
(rStrategyId)
/* CIF End TextExtension */
;
/* CIF Line (150,1150),(150,1200) */
/* CIF ProcedureCall (50,1200) */
call 
/* CIF TextExtension (300,1200) Right */
/* CIF Line (300,1250),(250,1250) */
SendStrategyVictory
/* CIF End TextExtension */
;
/* CIF Line (150,1300),(150,1350) */
/* CIF NextState (50,1350) */
nextstate -;
/* CIF Line (150,1000),(150,1025),(750,1025),(750,1050) */
/* CIF Input (650,1050) Right */
input 
/* CIF TextExtension (900,1050) Right */
/* CIF Line (900,1100),(850,1100) */
StrategyLose
(rStrategyId)
/* CIF End TextExtension */
;
/* CIF Line (750,1150),(750,1200) */
/* CIF ProcedureCall (650,1200) */
call 
/* CIF TextExtension (900,1200) Right */
/* CIF Line (900,1250),(850,1250) */
SendStrategyLose
/* CIF End TextExtension */
;
/* CIF Line (750,1300),(750,1350) */
/* CIF NextState (650,1350) */
nextstate -;
/* CIF Line (150,1000),(150,1025),(1350,1025),(1350,1050) */
/* CIF Input (1250,1050) Right */
input 
/* CIF TextExtension (1500,1050) Right */
/* CIF Line (1500,1100),(1450,1100) */
FinishSimulation(
rTime,
rStrategyId)
/* CIF End TextExtension */
;
/* CIF Line (1350,1150),(1350,1200) */
/* CIF ProcedureCall (1250,1200) */
call 
/* CIF TextExtension (1500,1200) Right */
/* CIF Line (1500,1250),(1450,1250) */
SendFinishSimulation
/* CIF End TextExtension */
;
/* CIF Line (1350,1300),(1350,1350) */
/* CIF NextState (1250,1350) */
nextstate -;
/* CIF End State */
endstate;
/* CIF CurrentPage 4 */
/* CIF State (50,250) */
state Wait;
/* CIF Line (150,350),(150,400) */
/* CIF Input (50,400) Right */
input 
/* CIF TextExtension (300,400) Right */
/* CIF Line (300,450),(250,450) */
OrderSpeedRequest(
rShipId, rStrategyId,
rFactorAcceleration)
/* CIF End TextExtension */
;
/* CIF Line (150,500),(150,550) */
/* CIF ProcedureCall (50,550) */
call 
/* CIF TextExtension (300,550) Right */
/* CIF Line (300,600),(250,600) */
SendOrder_
SpeedRequest
/* CIF End TextExtension */
;
/* CIF Line (150,650),(150,700) */
/* CIF NextState (50,700) */
nextstate -;
/* CIF Line (150,350),(150,375),(750,375),(750,400) */
/* CIF Input (650,400) Right */
input 
/* CIF TextExtension (900,400) Right */
/* CIF Line (900,450),(850,450) */
OrderSpeedResponse(
rShipId,
rStrategyId)
/* CIF End TextExtension */
;
/* CIF Line (750,500),(750,550) */
/* CIF ProcedureCall (650,550) */
call 
/* CIF TextExtension (900,550) Right */
/* CIF Line (900,600),(850,600) */
SendOrder_
SpeedResponse
/* CIF End TextExtension */
;
/* CIF Line (750,650),(750,700) */
/* CIF NextState (650,700) */
nextstate -;
/* CIF Line (150,350),(150,375),(1400,375),(1400,400) */
/* CIF Input (1300,400) Right */
input 
/* CIF TextExtension (1550,400) Right */
/* CIF Line (1550,450),(1500,450) */
OrderSpeedReject(
rShipId,
rStrategyId)
/* CIF End TextExtension */
;
/* CIF Line (1400,500),(1400,550) */
/* CIF ProcedureCall (1300,550) */
call 
/* CIF TextExtension (1550,550) Right */
/* CIF Line (1550,600),(1500,600) */
SendOrder_
SpeedReject
/* CIF End TextExtension */
;
/* CIF Line (1400,650),(1400,700) */
/* CIF NextState (1300,700) */
nextstate -;
/* CIF End State */
endstate;
/* CIF State (50,850) */
state Wait;
/* CIF Line (150,950),(150,1000) */
/* CIF Input (50,1000) Right */
input 
/* CIF TextExtension (300,1000) Right */
/* CIF Line (300,1050),(250,1050) */
OrderTurnRequest(
rShipId, rStrategyId,
rHeadingChange)
/* CIF End TextExtension */
;
/* CIF Line (150,1100),(150,1150) */
/* CIF ProcedureCall (50,1150) */
call 
/* CIF TextExtension (300,1150) Right */
/* CIF Line (300,1200),(250,1200) */
SendOrder_
TurnRequest
/* CIF End TextExtension */
;
/* CIF Line (150,1250),(150,1300) */
/* CIF NextState (50,1300) */
nextstate -;
/* CIF Line (150,950),(150,975),(750,975),(750,1000) */
/* CIF Input (650,1000) Right */
input 
/* CIF TextExtension (900,1000) Right */
/* CIF Line (900,1050),(850,1050) */
OrderTurnResponse(
rShipId,
rStrategyId)
/* CIF End TextExtension */
;
/* CIF Line (750,1100),(750,1150) */
/* CIF ProcedureCall (650,1150) */
call 
/* CIF TextExtension (900,1150) Right */
/* CIF Line (900,1200),(850,1200) */
SendOrder_
TurnResponse
/* CIF End TextExtension */
;
/* CIF Line (750,1250),(750,1300) */
/* CIF NextState (650,1300) */
nextstate -;
/* CIF Line (150,950),(150,975),(1350,975),(1350,1000) */
/* CIF Input (1250,1000) Right */
input 
/* CIF TextExtension (1500,1000) Right */
/* CIF Line (1500,1050),(1450,1050) */
OrderTurnReject(
rShipId,
rStrategyId)
/* CIF End TextExtension */
;
/* CIF Line (1350,1100),(1350,1150) */
/* CIF ProcedureCall (1250,1150) */
call 
/* CIF TextExtension (1500,1150) Right */
/* CIF Line (1500,1200),(1450,1200) */
SendOrder_
TurnReject
/* CIF End TextExtension */
;
/* CIF Line (1350,1250),(1350,1300) */
/* CIF NextState (1250,1300) */
nextstate -;
/* CIF End State */
endstate;
/* CIF State (50,1450) */
state Wait;
/* CIF Line (150,1550),(150,1600) */
/* CIF Input (50,1600) Right */
input 
/* CIF TextExtension (300,1600) Right */
/* CIF Line (300,1650),(250,1650) */
OrderFireRequest(
rShipId, rStrategyId,
rNameWeaponry,
rStringShotsList)
/* CIF End TextExtension */
;
/* CIF Line (150,1700),(150,1800) */
/* CIF ProcedureCall (50,1800) */
call 
/* CIF TextExtension (300,1800) Right */
/* CIF Line (300,1850),(250,1850) */
SendOrder_
FireRequest
/* CIF End TextExtension */
;
/* CIF Line (150,1900),(150,1950) */
/* CIF NextState (50,1950) */
nextstate -;
/* CIF Line (150,1550),(150,1575),(750,1575),(750,1600) */
/* CIF Input (650,1600) Right */
input 
/* CIF TextExtension (900,1600) Right */
/* CIF Line (900,1650),(850,1650) */
OrderFireResponse(
rShipId,
rStrategyId)
/* CIF End TextExtension */
;
/* CIF Line (750,1700),(750,1800) */
/* CIF ProcedureCall (650,1800) */
call 
/* CIF TextExtension (900,1800) Right */
/* CIF Line (900,1850),(850,1850) */
SendOrder_
FireResponse
/* CIF End TextExtension */
;
/* CIF Line (750,1900),(750,1950) */
/* CIF NextState (650,1950) */
nextstate -;
/* CIF Line (150,1550),(150,1575),(1350,1575),(1350,1600) */
/* CIF Input (1250,1600) Right */
input 
/* CIF TextExtension (1500,1600) Right */
/* CIF Line (1500,1650),(1450,1650) */
OrderFireReject(
rShipId,
rStrategyId)
/* CIF End TextExtension */
;
/* CIF Line (1350,1700),(1350,1800) */
/* CIF ProcedureCall (1250,1800) */
call 
/* CIF TextExtension (1500,1800) Right */
/* CIF Line (1500,1850),(1450,1850) */
SendOrder_
FireReject
/* CIF End TextExtension */
;
/* CIF Line (1350,1900),(1350,1950) */
/* CIF NextState (1250,1950) */
nextstate -;
/* CIF End State */
endstate;
/* CIF End ProcessDiagram */
endprocess Router;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendOrderSpeedRequest.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendOrderSpeedRequest;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision rASI(rStrategyId);
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1150,450),(1150,550) */
/* CIF TextPosition (1175,475) */
(true):
/* CIF Output (1050,550) Right */
output 
/* CIF TextExtension (1300,550) Right */
/* CIF Line (1300,600),(1250,600) */
OrderSpeedRequest(
rShipId, rStrategyId,
rFactorAcceleration)
via chMnRtr
/* CIF End TextExtension */
;
/* CIF Line (1150,650),(1150,675),(900,675),(900,700) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,700) */
/* CIF TextPosition (925,525) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Return (850,700),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure SendOrderSpeedRequest;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendOrderSpeedResponse.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendOrderSpeedResponse;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = true) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
OrderSpeedResponse(
rShipId,
rStrategyId)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
OrderSpeedResponse(
rShipId,
rStrategyId)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendOrderSpeedResponse;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendOrderSpeedReject.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendOrderSpeedReject;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = true) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
OrderSpeedReject(
rShipId,
rStrategyId)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
OrderSpeedReject(
rShipId,
rStrategyId)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendOrderSpeedReject;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendOrderTurnRequest.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendOrderTurnRequest;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1100,250) Right */
/* CIF Line (1100,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision rASI(rStrategyId);
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1150,450),(1150,550) */
/* CIF TextPosition (1175,475) */
(true):
/* CIF Output (1050,550) Right */
output 
/* CIF TextExtension (1300,550) Right */
/* CIF Line (1300,600),(1250,600) */
OrderTurnRequest(
rShipId, rStrategyId,
rHeadingChange)
via chMnRtr
/* CIF End TextExtension */
;
/* CIF Line (1150,650),(1150,675),(900,675),(900,700) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,700) */
/* CIF TextPosition (925,525) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Return (850,700),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure SendOrderTurnRequest;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendOrderTurnResponse.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendOrderTurnResponse;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = true) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
OrderTurnResponse(
rShipId,
rStrategyId)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
OrderTurnResponse(
rShipId,
rStrategyId)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendOrderTurnResponse;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendFinishSimulation.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendFinishSimulation;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision rASI(rStrategyId);
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1150,450),(1150,550) */
/* CIF TextPosition (1175,475) */
(true):
/* CIF Output (1050,550) Right */
output 
/* CIF TextExtension (1300,550) Right */
/* CIF Line (1300,600),(1250,600) */
FinishSimulation(
rTime,
rStrategyId)
via chMnRtr
/* CIF End TextExtension */
;
/* CIF Line (1150,650),(1150,675),(900,675),(900,700) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,700) */
/* CIF TextPosition (925,525) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Return (850,700),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure SendFinishSimulation;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendOrderTurnReject.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendOrderTurnReject;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = true) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
OrderTurnReject(
rShipId,
rStrategyId)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
OrderTurnReject(
rShipId,
rStrategyId)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendOrderTurnReject;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendVisibleShip.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendVisibleShip;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = true) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
VisibleShip(
rStrategyId,
rStringEnemyShip)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
VisibleShip(
rStrategyId,
rStringEnemyShip)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendVisibleShip;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendOrderFireRequest.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendOrderFireRequest;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision rASI(rStrategyId);
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,450),(1150,450),(1150,550) */
/* CIF TextPosition (1175,475) */
(true):
/* CIF Output (1050,550) Right */
output 
/* CIF TextExtension (1300,550) Right */
/* CIF Line (1300,600),(1250,600) */
OrderFireRequest(
rShipId, rStrategyId,
rNameWeaponry,
rStringShotsList)
via chMnRtr
/* CIF End TextExtension */
;
/* CIF Line (1150,650),(1150,675),(900,675),(900,700) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,700) */
/* CIF TextPosition (925,525) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Return (850,700),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure SendOrderFireRequest;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendShipsCurrentState.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendShipsCurrentState;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = true) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
ShipsCurrentState(
rStrategyId,rString_
ShipCurrentState)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
ShipsCurrentState(
rStrategyId,rString_
ShipCurrentState)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendShipsCurrentState;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendOrderFireResponse.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendOrderFireResponse;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = true) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
OrderFireResponse(
rShipId,
rStrategyId)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
OrderFireResponse(
rShipId,
rStrategyId)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendOrderFireResponse;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendStrategyVictory.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendStrategyVictory;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = true) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
StrategyVictory
(rStrategyId)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
StrategyVictory
(rStrategyId)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendStrategyVictory;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendOrderFireReject.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendOrderFireReject;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = true) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
OrderFireReject(
rShipId,
rStrategyId)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
OrderFireReject(
rShipId,
rStrategyId)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendOrderFireReject;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendStrategyLose.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendStrategyLose;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = false) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
StrategyLose
(rStrategyId)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
StrategyLose
(rStrategyId)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendStrategyLose;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendDestroyShip.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendDestroyShip;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Task (800,250) */
task 
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
rASI := import(gASI)
/* CIF End TextExtension */
;
/* CIF Line (900,350),(900,400) */
/* CIF Decision (800,400) */
decision 
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
if (rASI(rStrategyId) = true) 
then rStrategyId
else (AmountStrategy + 1) fi
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF TextPosition (1175,550) */
(=1):
/* CIF Output (1050,600) Right */
output 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
VisibleShip(
rStrategyId,
rStringEnemyShip)
via chRtrSt1
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Return (1100,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,500),(900,875),(1150,875),(1150,900) */
/* CIF TextPosition (1175,850) */
(=2):
/* CIF Output (1050,900) Right */
output 
/* CIF TextExtension (1300,900) Right */
/* CIF Line (1300,950),(1250,950) */
VisibleShip(
rStrategyId,
rStringEnemyShip)
via chRtrSt2
/* CIF End TextExtension */
;
/* CIF Line (1150,1000),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return ;
/* CIF Answer Left */
/* CIF Line (800,450),(650,450),(650,500) */
/* CIF TextPosition (575,450) */
else:
/* CIF Return (600,500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendDestroyShip;
/* CIF ProcessDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 4 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 5 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\Main.spr' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 4 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 5 Scale 120 Grid (50,50) AutoNumbered */
process Main;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (900,250) */
dcl
  exported
    gWeaponryCharacter tArrayWeaponryCharacter,
    gShipsCharacter tArrayShipsCharacter,
    gShips tStringShipParameters,
    gShots tStringShotParameters,
    gASI tArraySI;
/* CIF End Text */
/* CIF Text (900,550) */
synonym NAMESHIP_NUM Integer = 5;
synonym CHECK_ITER Integer = 10;
/* CIF End Text */
/* CIF Text (900,700) */
newtype tErrorName
  literals
    EN_OK,
    EN_COULD_NOT_OPEN_FILE,
    EN_SHIP_NOT_FOUND,
    EN_ERROR_PROPERTY,
    EN_NOT_ENOUGH_AMMO,
    EN_INIT_SOCKET_FAULT,
    EN_SEND_DATA_FAULT,
    EN_WRONG_MAP,
    EN_GEN_POINTS_FAULT,
    EN_GET_COORD_FAULT;
endnewtype;
/* CIF End Text */
/* CIF Text (900,1250) */
dcl errcode tErrorCode;
dcl errname tErrorName;
dcl simtime Integer;
dcl victory Boolean;
/* CIF End Text */
/* CIF Text (900,1550) */
procedure sdl_sqrt;
  fpar
    x Integer;
  returns Integer;
external;
/* CIF End Text */
/* CIF Procedure (50,250),(500,100) */
/* CIF TextPosition (75,275) */
procedure InitDataShipsWeaponry referenced;
/* CIF Procedure (50,400),(500,100) */
/* CIF TextPosition (150,425) */
procedure InitStrategyFleet referenced;
/* CIF Procedure (50,550),(500,100) */
/* CIF TextPosition (166,575) */
procedure SetVisibility referenced;
/* CIF Procedure (50,700),(500,100) */
/* CIF TextPosition (150,725) */
procedure SendCurrentState referenced;
/* CIF Procedure (50,850),(500,100) */
/* CIF TextPosition (150,875) */
procedure SendVisibleShips referenced;
/* CIF Procedure (50,1150),(500,100) */
/* CIF TextPosition (187,1175) */
procedure Err2Str referenced;
/* CIF Procedure (50,1400),(500,100) */
/* CIF TextPosition (187,1425) */
procedure SimIteration referenced;
/* CIF Procedure (50,1600),(500,100) */
/* CIF TextPosition (250,1625) */
procedure SetSI referenced;
/* CIF Procedure (50,1800),(500,100) */
/* CIF TextPosition (187,1825) */
procedure KillStrategy referenced;
/* CIF Procedure (50,2000),(500,100) */
/* CIF TextPosition (187,2025) */
procedure IsWeaponry referenced;
/* CIF CurrentPage 2 */
/* CIF Start (550,100) */
start ;
/* CIF Line (650,200),(650,250) */
/* CIF Extendedtask (550,250) */
task {
/* CIF TextExtension (800,250) Right */
/* CIF Line (800,300),(750,300) */
errcode := call SetSI;
export ( gASI );
/* CIF End TextExtension */
};
/* CIF Line (650,350),(650,400) */
/* CIF Output (550,400) Right */
output messageLog
/* CIF TextExtension (800,400) Right */
/* CIF Line (800,450),(750,450) */
('Start config file reading')
/* CIF End TextExtension */
;
/* CIF Line (650,500),(650,550) */
/* CIF Task (550,550) */
task 
/* CIF TextExtension (800,550) Right */
/* CIF Line (800,600),(750,600) */
errcode := call InitDataShipsWeaponry
/* CIF End TextExtension */
;
/* CIF Line (650,650),(650,700) */
/* CIF Decision (550,700) */
decision errcode;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (750,750),(900,750),(900,850) */
/* CIF TextPosition (925,775) */
(= EC_OK):
/* CIF Export (800,850) */

/* CIF TextExtension (1050,850) Right */
/* CIF Line (1050,900),(1000,900) */
export(
  gWeaponryCharacter,
  gShipsCharacter)
/* CIF End TextExtension */
;
/* CIF Line (900,950),(900,1000) */
/* CIF Output (800,1000) Right */
output messageLog
/* CIF TextExtension (1050,1000) Right */
/* CIF Line (1050,1050),(1000,1050) */
('Start fleet initialization')
/* CIF End TextExtension */
;
/* CIF Line (900,1100),(900,1150) */
/* CIF Task (800,1150) */
task 
/* CIF TextExtension (1050,1150) Right */
/* CIF Line (1050,1200),(1000,1200) */
errcode := call InitStrategyFleet
/* CIF End TextExtension */
;
/* CIF Line (900,1250),(900,1300) */
/* CIF Decision (800,1300) */
decision errcode;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,1350),(1150,1350),(1150,1500) */
/* CIF TextPosition (1175,1375) */
(= EC_OK):
/* CIF Export (1050,1500) */

/* CIF TextExtension (1300,1500) Right */
/* CIF Line (1300,1550),(1250,1550) */
export( gShips, gShots )
/* CIF End TextExtension */
;
/* CIF Line (1150,1600),(1150,1650) */
/* CIF Output (1050,1650) Right */
output InitDataComplete;
/* CIF Line (1150,1750),(1150,1800) */
/* CIF Join (1100,1800),(100,100) */
join PM1;
/* CIF Answer Left */
/* CIF Line (800,1350),(400,1350),(400,1500) */
/* CIF TextPosition (425,1375) */
else:
/* CIF Output (300,1500) Right */
output messageError
/* CIF TextExtension (550,1500) Right */
/* CIF Line (550,1550),(500,1550) */
(call Err2Str)
/* CIF End TextExtension */
;
/* CIF Line (400,1600),(400,1700) */
/* CIF Join (350,1700),(100,100) */
join QUIT;
/* CIF End Decision */
enddecision;
/* CIF Answer Left */
/* CIF Line (550,750),(150,750),(150,850) */
/* CIF TextPosition (225,775) */
else:
/* CIF Output (50,850) Right */
output messageError
/* CIF TextExtension (300,850) Right */
/* CIF Line (300,900),(250,900) */
(call Err2Str)
/* CIF End TextExtension */
;
/* CIF Line (150,950),(150,1050) */
/* CIF Join (100,1050),(100,100) */
join QUIT;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 1 */
/* CIF CurrentPage 3 */
/* CIF State (750,400) */
state WaitSocketInit;
/* CIF Line (850,500),(850,550) */
/* CIF Input (750,550) Right */
input 
/* CIF TextExtension (1000,550) Right */
/* CIF Line (1000,600),(950,600) */
InitSocketComplete(errcode)
/* CIF End TextExtension */
;
/* CIF Line (850,650),(850,700) */
/* CIF Decision (750,700) */
decision errcode;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,800),(850,850) */
/* CIF TextPosition (875,800) */
(= EC_OK):
/* CIF Output (750,850) Right */
output messageLog
/* CIF TextExtension (1000,850) Right */
/* CIF Line (1000,900),(950,900) */
('Start SendCurrentState, SetVisibility
  and SendVisibleShips procedures')
/* CIF End TextExtension */
;
/* CIF Line (850,950),(850,1000) */
/* CIF Extendedtask (750,1000) */
task {
/* CIF TextExtension (1000,1000) Right */
/* CIF Line (1000,1050),(950,1050) */
call SendCurrentState;
call SetVisibility;
call SendVisibleShips;
export( gShips, gShots );
/* CIF End TextExtension */
};
/* CIF Line (850,1100),(850,1150) */
/* CIF Output (750,1150) Right */
output SendData;
/* CIF Line (850,1250),(850,1300) */
/* CIF NextState (750,1300) */
nextstate WaitSendData1;
/* CIF Answer Left */
/* CIF Line (750,750),(150,750),(150,850) */
/* CIF TextPosition (125,775) */
else:
/* CIF Task (50,850) */
task 
/* CIF TextExtension (300,850) Right */
/* CIF Line (300,900),(250,900) */
errname :=
  EN_INIT_SOCKET_FAULT
/* CIF End TextExtension */
;
/* CIF Line (150,950),(150,1000) */
/* CIF Output (50,1000) Right */
output messageError
/* CIF TextExtension (300,1000) Right */
/* CIF Line (300,1050),(250,1050) */
(call Err2Str)
/* CIF End TextExtension */
;
/* CIF Line (150,1100),(150,1200) */
/* CIF Join (100,1200),(100,100) */
join QUIT;
/* CIF End Decision */
enddecision;
/* CIF End State */
endstate;
/* CIF State (750,1300) */
state WaitSendData1;
/* CIF Line (850,1400),(850,1450) */
/* CIF Input (750,1450) Right */
input 
/* CIF TextExtension (1000,1450) Right */
/* CIF Line (1000,1500),(950,1500) */
SendDataComplete(errcode)
/* CIF End TextExtension */
;
/* CIF Line (850,1550),(850,1600) */
/* CIF Decision (750,1600) */
decision errcode;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,1650),(1150,1650),(1150,1700) */
/* CIF TextPosition (1025,1600) */
(= EC_OK):
/* CIF Extendedtask (1050,1700) */
task {
/* CIF TextExtension (1300,1700) Right */
/* CIF Line (1300,1750),(1250,1750) */
simtime := 0;
victory := false;
/* CIF End TextExtension */
};
/* CIF Line (1150,1800),(1150,1850) */
/* CIF Output (1050,1850) Right */
output messageLog
/* CIF TextExtension (1300,1850) Right */
/* CIF Line (1300,1900),(1250,1900) */
('StartSimulation signal')
/* CIF End TextExtension */
;
/* CIF Line (1150,1950),(1150,2000) */
/* CIF Join (1100,2000),(100,100) */
join PM2;
/* CIF Answer Left */
/* CIF Line (750,1650),(200,1650),(200,1700) */
/* CIF TextPosition (600,1600) */
else:
/* CIF Task (100,1700) */
task 
/* CIF TextExtension (350,1700) Right */
/* CIF Line (350,1750),(300,1750) */
errname :=
  EN_SEND_DATA_FAULT
/* CIF End TextExtension */
;
/* CIF Line (200,1800),(200,1850) */
/* CIF Output (100,1850) Right */
output messageError
/* CIF TextExtension (350,1850) Right */
/* CIF Line (350,1900),(300,1900) */
(call Err2Str)
/* CIF End TextExtension */
;
/* CIF Line (200,1950),(200,2000) */
/* CIF Join (150,2000),(100,100) */
join QUIT;
/* CIF End Decision */
enddecision;
/* CIF End State */
endstate;
/* CIF Label (800,100),(100,100) */
connection PM1:
/* CIF Line (850,200),(850,250) */
/* CIF Output (750,250) Right */
output InitSocket;
/* CIF Line (850,350),(850,400) */
/* CIF NextState (750,400) */
nextstate WaitSocketInit;
/* CIF End Label */
endconnection PM1;
/* CIF CurrentPage 4 */
/* CIF State (50,1800) */
state FIN;
/* CIF Line (150,1900),(150,1950) */
/* CIF Input (50,1950) Right */
input *;
/* CIF Line (150,2050),(150,2100) */
/* CIF NextState (50,2100) */
nextstate -;
/* CIF End State */
endstate;
/* CIF State (800,1150) */
state WaitSendData2;
/* CIF Line (900,1250),(900,1300) */
/* CIF Input (800,1300) Right */
input 
/* CIF TextExtension (1050,1300) Right */
/* CIF Line (1050,1350),(1000,1350) */
SendDataComplete( errcode )
/* CIF End TextExtension */
;
/* CIF Line (900,1400),(900,1450) */
/* CIF Decision (800,1450) */
decision victory;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,1500),(150,1500),(150,1600) */
/* CIF TextPosition (600,1450) */
(true):
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1000,1500),(1150,1500),(1150,1600) */
/* CIF TextPosition (1175,1525) */
(false):
/* CIF Decision (1050,1600) */
decision errcode;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1150,1700),(1150,1800) */
/* CIF TextPosition (1175,1725) */
(= EC_OK):
/* CIF Output (1050,1800) Right */
output messageLog
/* CIF TextExtension (1300,1800) Right */
/* CIF Line (1300,1850),(1250,1850) */
( 'Start SendCurrentState, SetVisibility
  and SendVisibleShips procedures' )
/* CIF End TextExtension */
;
/* CIF Line (1150,1900),(1150,1950) */
/* CIF Extendedtask (1050,1950) */
task {
/* CIF TextExtension (1300,1950) Right */
/* CIF Line (1300,2000),(1250,2000) */
call SendCurrentState;
call SetVisibility;
call SendVisibleShips;
export( gShips, gShots );
/* CIF End TextExtension */
};
/* CIF Line (1150,2050),(1150,2150) */
/* CIF Join (1100,2150),(100,100) */
join PM3;
/* CIF Answer Left */
/* CIF Line (1050,1650),(450,1650),(450,1800) */
/* CIF TextPosition (725,1600) */
else:
/* CIF Task (350,1800) */
task 
/* CIF TextExtension (600,1800) Right */
/* CIF Line (600,1850),(550,1850) */
errname :=
  EN_SEND_DATA_FAULT
/* CIF End TextExtension */
;
/* CIF Line (450,1900),(450,1950) */
/* CIF Output (350,1950) Right */
output messageError
/* CIF TextExtension (600,1950) Right */
/* CIF Line (600,2000),(550,2000) */
(call Err2Str)
/* CIF End TextExtension */
;
/* CIF Line (450,2050),(450,2100) */
/* CIF Join (400,2100),(100,100) */
join QUIT;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Label Invisible */
grst0:
/* CIF Extendedtask (50,1600) */
task {call FreeAll;};
/* CIF Line (150,1700),(150,1800) */
/* CIF NextState (50,1800) */
nextstate FIN;
/* CIF End State */
endstate;
/* CIF Label (850,200),(100,100) */
connection PM2:
/* CIF Line (900,300),(900,350) */
/* CIF Output (800,350) Right */
output StartSimulation
/* CIF TextExtension (1050,350) Right */
/* CIF Line (1050,400),(1000,400) */
(simtime)
/* CIF End TextExtension */
;
/* CIF Line (900,450),(900,500) */
/* CIF Extendedtask (800,500) */
task {
/* CIF TextExtension (1050,500) Right */
/* CIF Line (1050,550),(1000,550) */
errcode := call SimIteration;
export( gASI );
/* CIF End TextExtension */
};
/* CIF Line (900,600),(900,650) */
/* CIF Decision (800,650) */
decision errcode;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,750),(900,850) */
/* CIF TextPosition (925,775) */
(= EC_OK):
/* CIF Extendedtask (800,850) */
task {
/* CIF TextExtension (1050,850) Right */
/* CIF Line (1050,900),(1000,900) */
export( gShips, gShots );
simtime := simtime + 1;
/* CIF End TextExtension */
};
/* CIF Line (900,950),(900,1000) */
/* CIF Output (800,1000) Right */
output SendData;
/* CIF Line (900,1100),(900,1150) */
/* CIF NextState (800,1150) */
nextstate WaitSendData2;
/* CIF Answer Left */
/* CIF Line (800,700),(150,700),(150,850) */
/* CIF TextPosition (125,725) */
else:
/* CIF Output (50,850) Right */
output messageError
/* CIF TextExtension (300,850) Right */
/* CIF Line (300,900),(250,900) */
(call Err2Str)
/* CIF End TextExtension */
;
/* CIF Line (150,950),(150,1300) */
/* CIF End Decision */
enddecision;
/* CIF Label (350,1000),(100,100) */
QUIT:
/* CIF Line (400,1100),(400,1125),(150,1125),(150,1300) */
/* CIF Extendedtask (50,1300) */
task {
/* CIF TextExtension (300,1300) Right */
/* CIF Line (300,1350),(250,1350) */
errcode :=
  call KillStrategy;
export( gASI );
/* CIF End TextExtension */
};
/* CIF Line (150,1400),(150,1600) */
/* CIF Join Invisible */
join grst0;
/* CIF End Label */
endconnection PM2;
/* CIF CurrentPage 5 */
/* CIF State (750,950) */
state WaitSendData3;
/* CIF Line (850,1050),(850,1100) */
/* CIF Input (750,1100) Right */
input 
/* CIF TextExtension (1000,1100) Right */
/* CIF Line (1000,1150),(950,1150) */
SendDataComplete( errcode )
/* CIF End TextExtension */
;
/* CIF Line (850,1200),(850,1250) */
/* CIF Join (800,1250),(100,100) */
join QUIT;
/* CIF End State */
endstate;
/* CIF Label (800,300),(100,100) */
connection PM3:
/* CIF Line (850,400),(850,450) */
/* CIF Decision (750,450) */
decision 
/* CIF TextExtension (1000,450) Right */
/* CIF Line (1000,500),(950,500) */
( NOT( simtime mod CHECK_ITER  = 0 ) )
  OR ( call IsWeaponry )
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,500),(600,500),(600,650) */
/* CIF TextPosition (650,450) */
(true):
/* CIF Join (550,650),(100,100) */
join PM2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,550),(850,650) */
/* CIF TextPosition (875,575) */
(false):
/* CIF Output (750,650) Right */
output messageLog
/* CIF TextExtension (1000,650) Right */
/* CIF Line (1000,700),(950,700) */
( 'Draw game' )
/* CIF End TextExtension */
;
/* CIF Line (850,750),(850,800) */
/* CIF Output (750,800) Right */
output SendData;
/* CIF Line (850,900),(850,950) */
/* CIF NextState (750,950) */
nextstate WaitSendData3;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection PM3;
/* CIF End ProcessDiagram */
endprocess Main;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\InitDataShipsWeaponry.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure InitDataShipsWeaponry
;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (700,100) */
dcl srcFile TextFile;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (50,300) */
start ;
/* CIF Line (150,400),(150,450) */
/* CIF Extendedtask (50,450) */
task {
/* CIF TextExtension (300,450) Right */
/* CIF Line (300,500),(250,500) */
srcFile := OpenR
('C:\Battleships\Config\DataValue.pr');
/* CIF End TextExtension */
};
/* CIF Line (150,550),(150,600) */
/* CIF Decision (50,600) */
decision srcFile;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (250,650),(525,650),(525,575),(900,575),(900,600) */
/* CIF TextPosition (550,600) */
(= NULL):
/* CIF Extendedtask (800,600) */
task {
/* CIF TextExtension (1050,600) Right */
/* CIF Line (1050,650),(1000,650) */
srcFile := Close(srcFile);
errname := EN_COULD_NOT_OPEN_FILE;
/* CIF End TextExtension */
};
/* CIF Line (900,700),(900,750) */
/* CIF Return (850,750),(100,100) */
return EC_FAULT;
/* CIF Answer */
/* CIF Line (150,700),(150,900) */
/* CIF TextPosition (175,725) */
else:
/* CIF Extendedtask (50,900) */
task {
/* CIF TextExtension (300,900) Right */
/* CIF Line (300,950),(250,950) */
gWeaponryCharacter(MISSILE)!Power := fix(GetReal(srcFile) * float(MaxWCPower));
gWeaponryCharacter(MISSILE)!Range := fix(GetReal(srcFile) * float(MaxWCRange));
gWeaponryCharacter(MISSILE)!Speed := fix(GetReal(srcFile) * float(MaxWCSpeed));
gWeaponryCharacter(TORPEDO)!Power := fix(GetReal(srcFile) * float(MaxWCPower));
gWeaponryCharacter(TORPEDO)!Range := fix(GetReal(srcFile) * float(MaxWCRange));
gWeaponryCharacter(TORPEDO)!Speed := fix(GetReal(srcFile) * float(MaxWCSpeed));
gWeaponryCharacter(SHELL)!Power := fix(GetReal(srcFile) * float(MaxWCPower));
gWeaponryCharacter(SHELL)!Range := fix(GetReal(srcFile) * float(MaxWCRange));
gWeaponryCharacter(SHELL)!Speed := fix(GetReal(srcFile) * float(MaxWCSpeed));
gWeaponryCharacter(REPAIR)!Power := fix(GetReal(srcFile) * float(MaxWCPower));
gWeaponryCharacter(REPAIR)!Range := fix(GetReal(srcFile) * float(MaxWCRange));
gWeaponryCharacter(REPAIR)!Speed := fix(GetReal(srcFile) * float(MaxWCSpeed));
/* CIF End TextExtension */
};
/* CIF Line (150,1000),(150,1350) */
/* CIF Extendedtask (50,1350) */
task {
/* CIF TextExtension (300,1350) Right */
/* CIF Line (300,1400),(250,1400) */
gShipsCharacter(BATTLESHIP)!Range := fix(GetReal(srcFile) * float(MaxSCRange));
gShipsCharacter(BATTLESHIP)!MaxSpeed := fix(GetReal(srcFile) * float(MaxSCMaxSpeed));
gShipsCharacter(BATTLESHIP)!MaxAcceleration := fix(GetReal(srcFile) * float(MaxSCMaxAcceleration));
gShipsCharacter(BATTLESHIP)!MaxResource := fix(GetReal(srcFile) * float(MaxSCMaxResource));
gShipsCharacter(BATTLESHIP)!MaxAmmunition(MISSILE) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(BATTLESHIP)!MaxAmmunition(TORPEDO) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(BATTLESHIP)!MaxAmmunition(SHELL) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(BATTLESHIP)!MaxAmmunition(REPAIR) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(BATTLESHIP)!MaxLaunchUnit(MISSILE) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(BATTLESHIP)!MaxLaunchUnit(TORPEDO) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(BATTLESHIP)!MaxLaunchUnit(SHELL) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(BATTLESHIP)!MaxLaunchUnit(REPAIR) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(BATTLESHIP)!MaxDeep := i2d(GetInteger(srcFile));
gShipsCharacter(CRUISER)!Range := fix(GetReal(srcFile) * float(MaxSCRange));
gShipsCharacter(CRUISER)!MaxSpeed := fix(GetReal(srcFile) * float(MaxSCMaxSpeed));
gShipsCharacter(CRUISER)!MaxAcceleration := fix(GetReal(srcFile) * float(MaxSCMaxAcceleration));
gShipsCharacter(CRUISER)!MaxResource := fix(GetReal(srcFile) * float(MaxSCMaxResource));
gShipsCharacter(CRUISER)!MaxAmmunition(MISSILE) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(CRUISER)!MaxAmmunition(TORPEDO) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(CRUISER)!MaxAmmunition(SHELL) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(CRUISER)!MaxAmmunition(REPAIR) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(CRUISER)!MaxLaunchUnit(MISSILE) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(CRUISER)!MaxLaunchUnit(TORPEDO) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(CRUISER)!MaxLaunchUnit(SHELL) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(CRUISER)!MaxLaunchUnit(REPAIR) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(CRUISER)!MaxDeep := i2d(GetInteger(srcFile));
/* CIF End TextExtension */
};
/* CIF Line (150,1450),(150,1500) */
/* CIF Join (100,1500),(100,100) */
join L1;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 2 */
/* CIF Label (100,300),(100,100) */
connection L1:
/* CIF Line (150,400),(150,450) */
/* CIF Extendedtask (50,450) */
task {
/* CIF TextExtension (300,450) Right */
/* CIF Line (300,500),(250,500) */
gShipsCharacter(DESTROYER)!Range := fix(GetReal(srcFile) * float(MaxSCRange));
gShipsCharacter(DESTROYER)!MaxSpeed := fix(GetReal(srcFile) * float(MaxSCMaxSpeed));
gShipsCharacter(DESTROYER)!MaxAcceleration := fix(GetReal(srcFile) * float(MaxSCMaxAcceleration));
gShipsCharacter(DESTROYER)!MaxResource := fix(GetReal(srcFile) * float(MaxSCMaxResource));
gShipsCharacter(DESTROYER)!MaxAmmunition(MISSILE) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(DESTROYER)!MaxAmmunition(TORPEDO) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(DESTROYER)!MaxAmmunition(SHELL) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(DESTROYER)!MaxAmmunition(REPAIR) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(DESTROYER)!MaxLaunchUnit(MISSILE) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(DESTROYER)!MaxLaunchUnit(TORPEDO) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(DESTROYER)!MaxLaunchUnit(SHELL) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(DESTROYER)!MaxLaunchUnit(REPAIR) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(DESTROYER)!MaxDeep := i2d(GetInteger(srcFile));
gShipsCharacter(MISSILE_CUTTER)!Range := fix(GetReal(srcFile) * float(MaxSCRange));
gShipsCharacter(MISSILE_CUTTER)!MaxSpeed := fix(GetReal(srcFile) * float(MaxSCMaxSpeed));
gShipsCharacter(MISSILE_CUTTER)!MaxAcceleration := fix(GetReal(srcFile) * float(MaxSCMaxAcceleration));
gShipsCharacter(MISSILE_CUTTER)!MaxResource := fix(GetReal(srcFile) * float(MaxSCMaxResource));
gShipsCharacter(MISSILE_CUTTER)!MaxAmmunition(MISSILE) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(MISSILE_CUTTER)!MaxAmmunition(TORPEDO) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(MISSILE_CUTTER)!MaxAmmunition(SHELL) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(MISSILE_CUTTER)!MaxAmmunition(REPAIR) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(MISSILE_CUTTER)!MaxLaunchUnit(MISSILE) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(MISSILE_CUTTER)!MaxLaunchUnit(TORPEDO) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(MISSILE_CUTTER)!MaxLaunchUnit(SHELL) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(MISSILE_CUTTER)!MaxLaunchUnit(REPAIR) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(MISSILE_CUTTER)!MaxDeep := i2d(GetInteger(srcFile));
gShipsCharacter(REPAIR_BOAT)!Range := fix(GetReal(srcFile) * float(MaxSCRange));
gShipsCharacter(REPAIR_BOAT)!MaxSpeed := fix(GetReal(srcFile) * float(MaxSCMaxSpeed));
gShipsCharacter(REPAIR_BOAT)!MaxAcceleration := fix(GetReal(srcFile) * float(MaxSCMaxAcceleration));
gShipsCharacter(REPAIR_BOAT)!MaxResource := fix(GetReal(srcFile) * float(MaxSCMaxResource));
gShipsCharacter(REPAIR_BOAT)!MaxAmmunition(MISSILE) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(REPAIR_BOAT)!MaxAmmunition(TORPEDO) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(REPAIR_BOAT)!MaxAmmunition(SHELL) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(REPAIR_BOAT)!MaxAmmunition(REPAIR) := fix(GetReal(srcFile) * float(MaxAAWeaponry));
gShipsCharacter(REPAIR_BOAT)!MaxLaunchUnit(MISSILE) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(REPAIR_BOAT)!MaxLaunchUnit(TORPEDO) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(REPAIR_BOAT)!MaxLaunchUnit(SHELL) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(REPAIR_BOAT)!MaxLaunchUnit(REPAIR) := fix(GetReal(srcFile) * float(MaxLUWeaponry));
gShipsCharacter(REPAIR_BOAT)!MaxDeep := i2d(GetInteger(srcFile));
/* CIF End TextExtension */
};
/* CIF Line (150,550),(150,1850) */
/* CIF Extendedtask (50,1850) */
task {
/* CIF TextExtension (300,1850) Right */
/* CIF Line (300,1900),(250,1900) */
srcFile := Close(srcFile);
errname := EN_OK;
/* CIF End TextExtension */
};
/* CIF Line (150,1950),(150,2000) */
/* CIF Return (100,2000),(100,100) */
return EC_OK;
/* CIF End Label */
endconnection L1;
/* CIF End ProcedureDiagram */
endprocedure InitDataShipsWeaponry;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\InitStrategyFleet.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure InitStrategyFleet
;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (350,100) */
dcl shipParam tShipParameters;
dcl shipType tNameShip;

dcl shipId Integer;
dcl nAS, nST Integer;
dcl i, maxShips Integer;

synonym OK Integer = 1;
dcl Radius, Deep, pX, pY Integer;
/* CIF End Text */
/* CIF Procedure (950,100),(350,100) */
/* CIF TextPosition (1075,125) */
procedure InitRD referenced;
/* CIF CurrentPage 2 */
/* CIF Procedure (600,150),(350,100) */
/* CIF TextPosition (650,175) */
procedure GetMaxShips referenced;
/* CIF Procedure (1000,150),(350,100) */
/* CIF TextPosition (1050,175) */
procedure GetCoordinate referenced;
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (950,300) */
start ;
/* CIF Line (1050,400),(1050,450) */
/* CIF Decision (950,450) */
decision 
/* CIF TextExtension (1200,450) Right */
/* CIF Line (1200,500),(1150,500) */
call checkMap
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1050,550),(1050,600) */
/* CIF TextPosition (1075,550) */
(= OK):
/* CIF Extendedtask (950,600) */
task {
/* CIF TextExtension (1200,600) Right */
/* CIF Line (1200,650),(1150,650) */
errcode := call InitRD;
/* CIF End TextExtension */
};
/* CIF Line (1050,700),(1050,850) */
/* CIF Decision (950,850) */
decision 
/* CIF TextExtension (1200,850) Right */
/* CIF Line (1200,900),(1150,900) */
call generatePoints(
  Radius, Deep, AmountStrategy)
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1050,950),(1050,1000) */
/* CIF TextPosition (1075,950) */
(= OK):
/* CIF Extendedtask (950,1000) */
task {
/* CIF TextExtension (1200,1000) Right */
/* CIF Line (1200,1050),(1150,1050) */
shipParam!Speed := 0;
shipId := 1;
nAS := 1;
/* CIF End TextExtension */
};
/* CIF Line (1050,1100),(1050,1300) */
/* CIF Answer Left */
/* CIF Line (950,900),(350,900),(350,1000) */
/* CIF TextPosition (325,925) */
else:
/* CIF Task (250,1000) */
task 
/* CIF TextExtension (500,1000) Right */
/* CIF Line (500,1050),(450,1050) */
errname :=
  EN_GEN_POINTS_FAULT
/* CIF End TextExtension */
;
/* CIF Line (350,1100),(350,1150) */
/* CIF Return (300,1150),(100,100) */
return EC_FAULT;
/* CIF End Decision */
enddecision;
/* CIF Answer Left */
/* CIF Line (950,500),(350,500),(350,600) */
/* CIF TextPosition (325,525) */
else:
/* CIF Task (250,600) */
task 
/* CIF TextExtension (500,600) Right */
/* CIF Line (500,650),(450,650) */
errname :=
  EN_WRONG_MAP
/* CIF End TextExtension */
;
/* CIF Line (350,700),(350,750) */
/* CIF Return (300,750),(100,100) */
return EC_FAULT;
/* CIF End Decision */
enddecision;
/* CIF Label Invisible */
grst1:
/* CIF Decision (950,1300) */
decision 
/* CIF TextExtension (1200,1300) Right */
/* CIF Line (1200,1350),(1150,1350) */
nAS <= AmountStrategy
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (950,1350),(350,1350),(350,1500) */
/* CIF TextPosition (450,1375) */
(false):
/* CIF Extendedtask (250,1500) */
task {
/* CIF TextExtension (500,1500) Right */
/* CIF Line (500,1550),(450,1550) */
errname := EN_OK;
/* CIF End TextExtension */
};
/* CIF Line (350,1600),(350,1650) */
/* CIF Return (300,1650),(100,100) */
return EC_OK;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1050,1400),(1050,1500) */
/* CIF TextPosition (1075,1425) */
(true):
/* CIF Output (950,1500) Right */
output messageLog
/* CIF TextExtension (1200,1500) Right */
/* CIF Line (1200,1550),(1150,1550) */
('Init next strategy')
/* CIF End TextExtension */
;
/* CIF Line (1050,1600),(1050,1650) */
/* CIF Extendedtask (950,1650) */
task {
/* CIF TextExtension (1200,1650) Right */
/* CIF Line (1200,1700),(1150,1700) */
shipParam!StrategyId := nAS;
nST := 1;
/* CIF End TextExtension */
};
/* CIF Line (1050,1750),(1050,1800) */
/* CIF Extendedtask (950,1800) */
task {
/* CIF TextExtension (1200,1800) Right */
/* CIF Line (1200,1850),(1150,1850) */
pX := call getFleetPointX(nAS);
pY := call getFleetPointY(nAS);
/* CIF End TextExtension */
};
/* CIF Line (1050,1900),(1050,1950) */
/* CIF End Decision */
enddecision;
/* CIF Label (650,1800),(100,100) */
ISF1:
/* CIF Line (700,1900),(700,1925),(1050,1925),(1050,1950) */
/* CIF Decision (950,1950) */
decision 
/* CIF TextExtension (1200,1950) Right */
/* CIF Line (1200,2000),(1150,2000) */
nST <= NAMESHIP_NUM
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (950,2000),(400,2000),(400,2100) */
/* CIF TextPosition (475,2025) */
(false):
/* CIF Extendedtask (300,2100) */
task {
/* CIF TextExtension (550,2100) Right */
/* CIF Line (550,2150),(500,2150) */
nAS := nAS + 1;
/* CIF End TextExtension */
};
/* CIF Line (400,2200),(400,2225),(225,2225),(225,1275),(1050,1275),(1050,1300) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1050,2050),(1050,2150) */
/* CIF TextPosition (1075,2075) */
(true):
/* CIF Join (1000,2150),(100,100) */
join ISF2;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst1;
/* CIF CurrentPage 2 */
/* CIF Label (400,300),(100,100) */
connection ISF2:
/* CIF Line (450,400),(450,450) */
/* CIF Extendedtask (350,450) */
task {
/* CIF TextExtension (600,450) Right */
/* CIF Line (600,500),(550,500) */
shipType := i2ns(nST);
/* CIF End TextExtension */
};
/* CIF Line (450,550),(450,600) */
/* CIF Extendedtask (350,600) */
task {
/* CIF TextExtension (600,600) Right */
/* CIF Line (600,650),(550,650) */
shipParam!TypeShip := shipType;
shipParam!Resource := gShipsCharacter(shipType)!MaxResource;
shipParam!Ammunition(MISSILE) :=
  gShipsCharacter(shipType)!MaxAmmunition(MISSILE);
shipParam!Ammunition(TORPEDO) :=
  gShipsCharacter(shipType)!MaxAmmunition(TORPEDO);
shipParam!Ammunition(SHELL) :=
  gShipsCharacter(shipType)!MaxAmmunition(SHELL);
shipParam!Ammunition(REPAIR) :=
  gShipsCharacter(shipType)!MaxAmmunition(REPAIR);

Deep := d2i(gShipsCharacter(shipType)!MaxDeep);
maxShips := call GetMaxShips(shipType);
i := 1;
/* CIF End TextExtension */
};
/* CIF Line (450,700),(450,1150) */
/* CIF Label Invisible */
grst2:
/* CIF Decision (350,1150) */
decision 
/* CIF TextExtension (600,1150) Right */
/* CIF Line (600,1200),(550,1200) */
i <= maxShips
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (350,1200),(150,1200),(150,1350) */
/* CIF TextPosition (175,1225) */
(false):
/* CIF Task (50,1350) */
task nST:=nST+1;
/* CIF Line (150,1450),(150,1500) */
/* CIF Join (100,1500),(100,100) */
join ISF1;
/* CIF Answer InvisibleBrackets */
/* CIF Line (450,1250),(450,1350) */
/* CIF TextPosition (475,1275) */
(true):
/* CIF Extendedtask (350,1350) */
task {
/* CIF TextExtension (600,1350) Right */
/* CIF Line (600,1400),(550,1400) */
shipParam!ShipId      := shipId;
shipParam!Heading     := i2h(call getHeading);
errcode := call GetCoordinate(shipParam!Coordinates);
/* CIF End TextExtension */
};
/* CIF Line (450,1450),(450,1550) */
/* CIF Decision (350,1550) */
decision errcode;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (550,1600),(1050,1600),(1050,1700) */
/* CIF TextPosition (1075,1625) */
(= EC_OK):
/* CIF Extendedtask (950,1700) */
task {
/* CIF TextExtension (1200,1700) Right */
/* CIF Line (1200,1750),(1150,1750) */
gShips := gShips // mkstring(shipParam);

shipId := shipId + 1;
i := i + 1;
/* CIF End TextExtension */
};
/* CIF Line (1050,1800),(1050,1900),(1850,1900),(1850,1125),(450,1125),(450,1150) */
/* CIF Answer Left */
/* CIF Line (350,1600),(250,1600),(250,1700) */
/* CIF TextPosition (325,1550) */
else:
/* CIF Return (200,1700),(100,100) */
return EC_FAULT;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst2;
/* CIF End Label */
endconnection ISF2;
/* CIF End ProcedureDiagram */
endprocedure InitStrategyFleet;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\InitRD.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure InitRD
;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF Text (500,100) */
dcl r Integer := MaxTypeBattleship + MaxTypeCruiser +
  MaxTypeDestroyer + MaxTypeMissileCutter + MaxTypeRepairBoat;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (850,300) */
start ;
/* CIF Line (950,400),(950,450) */
/* CIF Extendedtask (850,450) */
task {
/* CIF TextExtension (1100,450) Right */
/* CIF Line (1100,500),(1050,500) */
nST := 1;
Deep := 0;
/* CIF End TextExtension */
};
/* CIF Line (950,550),(950,600) */
/* CIF Label Invisible */
grst3:
/* CIF Decision (850,600) */
decision 
/* CIF TextExtension (1100,600) Right */
/* CIF Line (1100,650),(1050,650) */
nST <= NAMESHIP_NUM
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,650),(150,650),(150,800) */
/* CIF TextPosition (825,600) */
(false):
/* CIF Extendedtask (50,800) */
task {
/* CIF TextExtension (300,800) Right */
/* CIF Line (300,850),(250,850) */
Radius :=
  (call sdl_sqrt(r))/2 + 1;
/* CIF End TextExtension */
};
/* CIF Line (150,900),(150,1000) */
/* CIF Extendedtask (50,1000) */
task {
/* CIF TextExtension (300,1000) Right */
/* CIF Line (300,1050),(250,1050) */
errname := EN_OK;
/* CIF End TextExtension */
};
/* CIF Line (150,1100),(150,1150) */
/* CIF Return (100,1150),(100,100) */
return EC_OK;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,700),(950,800) */
/* CIF TextPosition (975,725) */
(true):
/* CIF Task (850,800) */
task 
/* CIF TextExtension (1100,800) Right */
/* CIF Line (1100,850),(1050,850) */
shipType := i2ns(nST)
/* CIF End TextExtension */
;
/* CIF Line (950,900),(950,1000) */
/* CIF Decision (850,1000) */
decision 
/* CIF TextExtension (1100,1000) Right */
/* CIF Line (1100,1050),(1050,1050) */
Deep < d2i(gShipsCharacter(shipType)!MaxDeep)
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,1100),(950,1200) */
/* CIF TextPosition (975,1125) */
(true):
/* CIF Task (850,1200) */
task 
/* CIF TextExtension (1100,1200) Right */
/* CIF Line (1100,1250),(1050,1250) */
Deep := d2i(gShipsCharacter(shipType)!MaxDeep)
/* CIF End TextExtension */
;
/* CIF Line (950,1300),(950,1350) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,1050),(775,1050),(775,1325),(950,1325),(950,1350) */
/* CIF TextPosition (775,1000) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Task (850,1350) */
task 
/* CIF TextExtension (1100,1350) Right */
/* CIF Line (1100,1400),(1050,1400) */
nST := nST + 1
/* CIF End TextExtension */
;
/* CIF Line (950,1450),(950,1475),(1850,1475),(1850,575),(950,575),(950,600) */
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst3;
/* CIF End ProcedureDiagram */
endprocedure InitRD;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\GetMaxShips.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure GetMaxShips
;fpar
  Name tNameShip;
returns Integer;
/* CIF DefaultSize (100,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,250),(200,100) */
start ;
/* CIF Line (800,350),(800,400) */
/* CIF Decision (700,400),(200,100) */
decision Name;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,500),(800,525),(1300,525),(1300,550) */
/* CIF TextPosition (975,475) */
(= MISSILE_CUTTER):
/* CIF Return (1250,550) */
return MaxTypeMissileCutter;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,500),(800,525),(200,525),(200,600) */
/* CIF TextPosition (350,475) */
(= BATTLESHIP):
/* CIF Return (150,600) */
return MaxTypeBattleship;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,500),(800,825),(200,825),(200,850) */
/* CIF TextPosition (350,775) */
(= CRUISER):
/* CIF Return (150,850) */
return MaxTypeCruiser;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,500),(800,825),(1300,825),(1300,850) */
/* CIF TextPosition (1000,775) */
(= REPAIR_BOAT):
/* CIF Return (1250,850) */
return   MaxTypeRepairBoat;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,500),(800,1075),(200,1075),(200,1100) */
/* CIF TextPosition (325,1025) */
(= DESTROYER):
/* CIF Return (150,1100) */
return MaxTypeDestroyer;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure GetMaxShips;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\GetCoordinate.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure GetCoordinate
;fpar
  in/out coord tCoordinates;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (50,250) */
dcl cDeep, tDeep Integer;
dcl cCoord tCoordinates;
dcl xMax, xMin Integer;
dcl yMax, yMin Integer;
dcl IsCoord Boolean;
/* CIF End Text */
/* CIF CurrentPage 2 */
/* CIF Procedure (600,100),(400,100) */
/* CIF TextPosition (700,125) */
procedure IsBusyPoint referenced;
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,250) */
start ;
/* CIF Line (800,350),(800,400) */
/* CIF Extendedtask (700,400) */
task {
/* CIF TextExtension (950,400) Right */
/* CIF Line (950,450),(900,450) */
xMax := pX + Radius;
xMin := pX - Radius;
yMax := pY + Radius;
yMin := pY - Radius;
/* CIF End TextExtension */
};
/* CIF Line (800,500),(800,550) */
/* CIF Decision (700,550) */
decision xMin < 0;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,650),(800,750) */
/* CIF TextPosition (825,675) */
(true):
/* CIF Task (700,750) */
task xMin := 0;
/* CIF Line (800,850),(800,900) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,600),(600,600),(600,875),(800,875),(800,900) */
/* CIF TextPosition (625,550) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Decision (700,900) */
decision yMin < 0;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1000),(800,1100) */
/* CIF TextPosition (825,1025) */
(true):
/* CIF Task (700,1100) */
task yMin := 0;
/* CIF Line (800,1200),(800,1250) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,950),(600,950),(600,1225),(800,1225),(800,1250) */
/* CIF TextPosition (625,900) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Decision (700,1250) */
decision 
/* CIF TextExtension (950,1250) Right */
/* CIF Line (950,1300),(900,1300) */
xMax > MaxXCoordinate
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1350),(800,1450) */
/* CIF TextPosition (825,1375) */
(true):
/* CIF Task (700,1450) */
task 
/* CIF TextExtension (950,1450) Right */
/* CIF Line (950,1500),(900,1500) */
xMax := MaxXCoordinate
/* CIF End TextExtension */
;
/* CIF Line (800,1550),(800,1600) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1300),(600,1300),(600,1575),(800,1575),(800,1600) */
/* CIF TextPosition (625,1250) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Decision (700,1600) */
decision 
/* CIF TextExtension (950,1600) Right */
/* CIF Line (950,1650),(900,1650) */
yMax > MaxYCoordinate
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1700),(800,1800) */
/* CIF TextPosition (825,1725) */
(true):
/* CIF Task (700,1800) */
task 
/* CIF TextExtension (950,1800) Right */
/* CIF Line (950,1850),(900,1850) */
yMax := MaxYCoordinate
/* CIF End TextExtension */
;
/* CIF Line (800,1900),(800,1950) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1650),(600,1650),(600,1925),(800,1925),(800,1950) */
/* CIF TextPosition (625,1600) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,1950) */
task {
/* CIF TextExtension (950,1950) Right */
/* CIF Line (950,2000),(900,2000) */
IsCoord := false;
cCoord!x := xMin;
cCoord!y := yMin;
cDeep := d2i(VERY_DEEPLY);
/* CIF End TextExtension */
};
/* CIF Line (800,2050),(800,2150) */
/* CIF Join (750,2150),(100,100) */
join GC1;
/* CIF CurrentPage 2 */
/* CIF Label (950,300),(100,100) */
connection GC1:
/* CIF Line (1000,400),(1000,450) */
/* CIF Decision (900,450) */
decision 
/* CIF TextExtension (1150,450) Right */
/* CIF Line (1150,500),(1100,500) */
cCoord!y <= yMax
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,500),(150,500),(150,650) */
/* CIF TextPosition (125,525) */
(false):
/* CIF Decision (50,650) */
decision IsCoord;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (250,700),(450,700),(450,800) */
/* CIF TextPosition (475,725) */
(true):
/* CIF Task (350,800) */
task 
/* CIF TextExtension (600,800) Right */
/* CIF Line (600,850),(550,850) */
errname :=
  EN_OK
/* CIF End TextExtension */
;
/* CIF Line (450,900),(450,950) */
/* CIF Return (400,950),(100,100) */
return EC_OK;
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,750),(150,1100) */
/* CIF TextPosition (175,775) */
(false):
/* CIF Extendedtask (50,1100) */
task {
/* CIF TextExtension (300,1100) Right */
/* CIF Line (300,1150),(250,1150) */
errname :=
  EN_GET_COORD_FAULT;
/* CIF End TextExtension */
};
/* CIF Line (150,1200),(150,1250) */
/* CIF Return (100,1250),(100,100) */
return EC_FAULT;
/* CIF End Decision */
enddecision;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,550),(1000,650) */
/* CIF TextPosition (1025,575) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Label Invisible */
grst4:
/* CIF Decision (900,650) */
decision 
/* CIF TextExtension (1200,650) Right */
/* CIF Line (1200,700),(1100,700) */
cCoord!x <= xMax
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1100,700),(1150,700),(1150,850) */
/* CIF TextPosition (1175,775) */
(false):
/* CIF Extendedtask (1050,850) */
task {
/* CIF TextExtension (1350,850) Right */
/* CIF Line (1350,900),(1250,900) */
cCoord!x := xMin;
cCoord!y := cCoord!y + 1;
/* CIF End TextExtension */
};
/* CIF Line (1150,950),(1150,975),(1725,975),(1725,425),(1000,425),(1000,450) */
/* CIF Join Invisible */
join GC1;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,750),(1000,1050) */
/* CIF TextPosition (1025,775) */
(true):
/* CIF Decision (900,1050) */
decision 
/* CIF TextExtension (1150,1050) Right */
/* CIF Line (1150,1100),(1100,1100) */
call IsBusyPoint
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,1150),(1000,1250) */
/* CIF TextPosition (1025,1175) */
(false):
/* CIF Task (900,1250) */
task 
/* CIF TextExtension (1150,1250) Right */
/* CIF Line (1150,1300),(1100,1300) */
tDeep := call getDeepXY(cCoord!x, cCoord!y)
/* CIF End TextExtension */
;
/* CIF Line (1000,1350),(1000,1400) */
/* CIF Decision (900,1400) */
decision 
/* CIF TextExtension (1150,1400) Right */
/* CIF Line (1150,1450),(1100,1450) */
(tDeep >= Deep) AND (tDeep <= cDeep)
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,1500),(1000,1600) */
/* CIF TextPosition (1025,1525) */
(true):
/* CIF Extendedtask (900,1600) */
task {
/* CIF TextExtension (1150,1600) Right */
/* CIF Line (1150,1650),(1100,1650) */
cDeep := tDeep;
coord := cCoord;
IsCoord := true;
/* CIF End TextExtension */
};
/* CIF Line (1000,1700),(1000,1800) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,1450),(750,1450),(750,1775),(1000,1775),(1000,1800) */
/* CIF TextPosition (800,1400) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,1100),(750,1100),(750,1775),(1000,1775),(1000,1800) */
/* CIF TextPosition (800,1050) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Task (900,1800) */
task 
/* CIF TextExtension (1150,1800) Right */
/* CIF Line (1150,1850),(1100,1850) */
cCoord!x := cCoord!x + 1
/* CIF End TextExtension */
;
/* CIF Line (1000,1900),(1000,1925),(875,1925),(875,625),(1000,625),(1000,650) */
/* CIF Join Invisible */
join grst4;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection GC1;
/* CIF End ProcedureDiagram */
endprocedure GetCoordinate;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\IsBusyPoint.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure IsBusyPoint
;
returns Boolean;
/* CIF DefaultSize (200,100) */
/* CIF Text (450,100) */
dcl iBP, length Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (600,250) */
start ;
/* CIF Line (700,350),(700,400) */
/* CIF Extendedtask (600,400) */
task {
/* CIF TextExtension (850,400) Right */
/* CIF Line (850,450),(800,450) */
length := length(gShips);
iBP := 1;
/* CIF End TextExtension */
};
/* CIF Line (700,500),(700,550) */
/* CIF Label Invisible */
grst5:
/* CIF Decision (600,550) */
decision 
/* CIF TextExtension (850,550) Right */
/* CIF Line (850,600),(800,600) */
iBP > length
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,600),(150,600),(150,700) */
/* CIF TextPosition (125,625) */
(true):
/* CIF Return (100,700),(100,100) */
return false;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,650),(700,750) */
/* CIF TextPosition (725,675) */
(false):
/* CIF Decision (600,750) */
decision 
/* CIF TextExtension (850,750) Right */
/* CIF Line (850,800),(800,800) */
gShips(iBP)!Coordinates = cCoord
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,800),(400,800),(400,950) */
/* CIF TextPosition (375,825) */
(true):
/* CIF Return (350,950),(100,100) */
return true;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,850),(700,950) */
/* CIF TextPosition (725,875) */
(false):
/* CIF Task (600,950) */
task 
/* CIF TextExtension (850,950) Right */
/* CIF Line (850,1000),(800,1000) */
iBP := iBP + 1
/* CIF End TextExtension */
;
/* CIF Line (700,1050),(700,1075),(1450,1075),(1450,525),(700,525),(700,550) */
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst5;
/* CIF End ProcedureDiagram */
endprocedure IsBusyPoint;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SetVisibility.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SetVisibility;
/* CIF DefaultSize (200,100) */
/* CIF Text (300,100) */
dcl n Integer;
dcl ins, jns, r Integer;
/* CIF End Text */
/* CIF Procedure (50,250),(400,100) */
/* CIF TextPosition (100,275) */
procedure zeroizeVisibility referenced;
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (850,100) */
start ;
/* CIF Line (950,200),(950,250) */
/* CIF ProcedureCall (850,250) */
call 
/* CIF TextExtension (1100,250) Right */
/* CIF Line (1100,300),(1050,300) */
zeroizeVisibility
/* CIF End TextExtension */
;
/* CIF Line (950,350),(950,400) */
/* CIF Extendedtask (850,400) */
task {
/* CIF TextExtension (1100,400) Right */
/* CIF Line (1100,450),(1050,450) */
n := length( gShips );
ins := 1;
/* CIF End TextExtension */
};
/* CIF Line (950,500),(950,550) */
/* CIF Label Invisible */
grst6:
/* CIF Decision (850,550) */
decision ins <= n;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,600),(250,600),(250,750) */
/* CIF TextPosition (225,625) */
(false):
/* CIF Return (200,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,650),(950,750) */
/* CIF TextPosition (975,675) */
(true):
/* CIF Extendedtask (850,750) */
task {jns := ins + 1;};
/* CIF Line (950,850),(950,900) */
/* CIF End Decision */
enddecision;
/* CIF Label Invisible */
grst7:
/* CIF Decision (850,900) */
decision jns <= n;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1050,950),(1200,950),(1200,1050) */
/* CIF TextPosition (1225,975) */
(false):
/* CIF Task (1100,1050) */
task ins := ins + 1;
/* CIF Line (1200,1150),(1200,1175),(1375,1175),(1375,525),(950,525),(950,550) */
/* CIF Join Invisible */
join grst6;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,1000),(950,1200) */
/* CIF TextPosition (975,1025) */
(true):
/* CIF Task (850,1200) */
task 
/* CIF TextExtension (1100,1200) Right */
/* CIF Line (1100,1250),(1050,1250) */
r := call getDistance(
  gShips(ins)!Coordinates!x,
  gShips(ins)!Coordinates!y,
  gShips(jns)!Coordinates!x,
  gShips(jns)!Coordinates!y)
/* CIF End TextExtension */
;
/* CIF Line (950,1300),(950,1450) */
/* CIF Decision (850,1450) */
decision 
/* CIF TextExtension (1100,1450) Right */
/* CIF Line (1100,1500),(1050,1500) */
r <= gShipsCharacter(gShips(ins)!TypeShip)!Range
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,1500),(200,1500),(200,1650) */
/* CIF TextPosition (275,1525) */
(false):
/* CIF Task (100,1650) */
task 
/* CIF TextExtension (350,1650) Right */
/* CIF Line (350,1700),(300,1700) */
gShips(jns)!VisibleToStrategy(
  gShips(ins)!StrategyId) := false
/* CIF End TextExtension */
;
/* CIF Line (200,1750),(200,1775),(950,1775),(950,1800) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,1550),(950,1650) */
/* CIF TextPosition (975,1575) */
(true):
/* CIF Task (850,1650) */
task 
/* CIF TextExtension (1100,1650) Right */
/* CIF Line (1100,1700),(1050,1700) */
gShips(jns)!VisibleToStrategy(
  gShips(ins)!StrategyId) := true
/* CIF End TextExtension */
;
/* CIF Line (950,1750),(950,1800) */
/* CIF End Decision */
enddecision;
/* CIF Decision (850,1800) */
decision 
/* CIF TextExtension (1100,1800) Right */
/* CIF Line (1100,1850),(1050,1850) */
r <= gShipsCharacter(gShips(jns)!TypeShip)!Range
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,1850),(200,1850),(200,2000) */
/* CIF TextPosition (275,1875) */
(false):
/* CIF Task (100,2000) */
task 
/* CIF TextExtension (350,2000) Right */
/* CIF Line (350,2050),(300,2050) */
gShips(ins)!VisibleToStrategy(
  gShips(jns)!StrategyId) := false
/* CIF End TextExtension */
;
/* CIF Line (200,2100),(200,2125),(950,2125),(950,2150) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,1900),(950,2000) */
/* CIF TextPosition (975,1925) */
(true):
/* CIF Task (850,2000) */
task 
/* CIF TextExtension (1100,2000) Right */
/* CIF Line (1100,2050),(1050,2050) */
gShips(ins)!VisibleToStrategy(
  gShips(jns)!StrategyId) := true
/* CIF End TextExtension */
;
/* CIF Line (950,2100),(950,2150) */
/* CIF End Decision */
enddecision;
/* CIF Task (850,2150) */
task jns := jns + 1;
/* CIF Line (950,2250),(950,2275),(75,2275),(75,875),(950,875),(950,900) */
/* CIF Join Invisible */
join grst7;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SetVisibility;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\zeroizeVisibility.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure zeroizeVisibility;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (650,300) */
start ;
/* CIF Line (750,400),(750,450) */
/* CIF Extendedtask (650,450) */
task {
/* CIF TextExtension (900,450) Right */
/* CIF Line (900,500),(850,500) */
n := length( gShips );
ins := 1;
/* CIF End TextExtension */
};
/* CIF Line (750,550),(750,600) */
/* CIF Label Invisible */
grst8:
/* CIF Decision (650,600) */
decision ins <= n;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,650),(450,650),(450,800) */
/* CIF TextPosition (425,675) */
(false):
/* CIF Return (400,800),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,700),(750,800) */
/* CIF TextPosition (775,725) */
(true):
/* CIF Task (650,800) */
task jns := 1;
/* CIF Line (750,900),(750,950) */
/* CIF End Decision */
enddecision;
/* CIF Label Invisible */
grst9:
/* CIF Decision (650,950) */
decision 
/* CIF TextExtension (900,950) Right */
/* CIF Line (900,1000),(850,1000) */
jns <= AmountStrategy
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,1000),(500,1000),(500,1150) */
/* CIF TextPosition (625,950) */
(false):
/* CIF Task (400,1150) */
task ins := ins + 1;
/* CIF Line (500,1250),(500,1275),(275,1275),(275,575),(750,575),(750,600) */
/* CIF Join Invisible */
join grst8;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1050),(750,1150) */
/* CIF TextPosition (775,1075) */
(true):
/* CIF Extendedtask (650,1150) */
task {
/* CIF TextExtension (900,1150) Right */
/* CIF Line (900,1200),(850,1200) */
gShips( ins )!VisibleToStrategy( jns ) := false;
jns := jns + 1;
/* CIF End TextExtension */
};
/* CIF Line (750,1250),(750,1275),(1600,1275),(1600,925),(750,925),(750,950) */
/* CIF Join Invisible */
join grst9;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure zeroizeVisibility;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendCurrentState.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendCurrentState;
/* CIF DefaultSize (200,100) */
/* CIF Text (550,100) */
dcl i, n Integer;
dcl strId tStrategyId;
dcl shCS tShipCurrentState;
dcl shSCS tStringShipCurrentState;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (900,300) */
start ;
/* CIF Line (1000,400),(1000,450) */
/* CIF Extendedtask (900,450) */
task {
/* CIF TextExtension (1150,450) Right */
/* CIF Line (1150,500),(1100,500) */
n := length(gShips);
i := 1;
/* CIF End TextExtension */
};
/* CIF Line (1000,550),(1000,600) */
/* CIF Label Invisible */
grst10:
/* CIF Decision (900,600) */
decision i <= n;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,650),(250,650),(250,800) */
/* CIF TextPosition (225,675) */
(false):
/* CIF Return (200,800),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,700),(1000,800) */
/* CIF TextPosition (1025,725) */
(true):
/* CIF Extendedtask (900,800) */
task {
/* CIF TextExtension (1150,800) Right */
/* CIF Line (1150,850),(1100,850) */
shSCS := empty;
strId := gShips(i)!StrategyId;
shCS!StrategyId := gShips(i)!StrategyId;
/* CIF End TextExtension */
};
/* CIF Line (1000,900),(1000,1100) */
/* CIF End Decision */
enddecision;
/* CIF Label Invisible */
grst11:
/* CIF Decision (900,1100) */
decision 
/* CIF TextExtension (1150,1100) Right */
/* CIF Line (1150,1150),(1100,1150) */
i <= n AND strId = gShips(i)!StrategyId
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,1150),(250,1150),(250,1300) */
/* CIF TextPosition (275,1175) */
(false):
/* CIF Output (150,1300) Right */
output 
/* CIF TextExtension (400,1300) Right */
/* CIF Line (400,1350),(350,1350) */
ShipsCurrentState(strId, shSCS)
/* CIF End TextExtension */
;
/* CIF Line (250,1400),(250,1425),(75,1425),(75,575),(1000,575),(1000,600) */
/* CIF Join Invisible */
join grst10;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,1200),(1000,1300) */
/* CIF TextPosition (1025,1225) */
(true):
/* CIF Extendedtask (900,1300) */
task {
/* CIF TextExtension (1150,1300) Right */
/* CIF Line (1150,1350),(1100,1350) */
shCS!ShipId := gShips(i)!ShipId;
shCS!TypeShip := gShips(i)!TypeShip;
shCS!Speed := gShips(i)!Speed;
shCS!Heading := gShips(i)!Heading;
shCS!Resource := gShips(i)!Resource;
shCS!Coordinates := gShips(i)!Coordinates;
shCS!Ammunition := gShips(i)!Ammunition;

shSCS := shSCS // mkstring(shCS);

i := i + 1;
/* CIF End TextExtension */
};
/* CIF Line (1000,1400),(1000,1725),(1800,1725),(1800,1075),(1000,1075),(1000,1100) */
/* CIF Join Invisible */
join grst11;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendCurrentState;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendVisibleShips.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendVisibleShips;
/* CIF DefaultSize (200,100) */
/* CIF Text (550,100) */
dcl i, j, n Integer;
/* CIF End Text */
/* CIF Text (900,100) */
dcl shES tEnemyShip;
dcl shSES tStringEnemyShip;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (750,250) */
start ;
/* CIF Line (850,350),(850,400) */
/* CIF Extendedtask (750,400) */
task {
/* CIF TextExtension (1000,400) Right */
/* CIF Line (1000,450),(950,450) */
n := length(gShips);
j := 1;
/* CIF End TextExtension */
};
/* CIF Line (850,500),(850,550) */
/* CIF Label Invisible */
grst12:
/* CIF Decision (750,550) */
decision 
/* CIF TextExtension (1000,550) Right */
/* CIF Line (1000,600),(950,600) */
j <= AmountStrategy
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,600),(200,600),(200,750) */
/* CIF TextPosition (175,625) */
(false):
/* CIF Return (150,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,650),(850,750) */
/* CIF TextPosition (875,675) */
(true):
/* CIF Extendedtask (750,750) */
task {
/* CIF TextExtension (1000,750) Right */
/* CIF Line (1000,800),(950,800) */
i := 1;
shSES := empty;
/* CIF End TextExtension */
};
/* CIF Line (850,850),(850,900) */
/* CIF End Decision */
enddecision;
/* CIF Label Invisible */
grst13:
/* CIF Decision (750,900) */
decision i <= n;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1000),(850,1100) */
/* CIF TextPosition (875,1025) */
(true):
/* CIF Decision (750,1100) */
decision 
/* CIF TextExtension (1000,1100) Right */
/* CIF Line (1000,1150),(950,1150) */
gShips(i)!VisibleToStrategy(j) = true AND
  gShips(i)!StrategyId /= j
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1200),(850,1300) */
/* CIF TextPosition (875,1225) */
(true):
/* CIF Extendedtask (750,1300) */
task {
/* CIF TextExtension (1000,1300) Right */
/* CIF Line (1000,1350),(950,1350) */
shES!ShipId := gShips(i)!ShipId;
shES!StrategyId := gShips(i)!StrategyId;
shES!TypeShip := gShips(i)!TypeShip;
shES!Speed := gShips(i)!Speed;
shES!Heading := gShips(i)!Heading;
shES!Coordinates := gShips(i)!Coordinates;

shSES := shSES // mkstring(shES);
/* CIF End TextExtension */
};
/* CIF Line (850,1400),(850,1600) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1150),(675,1150),(675,1575),(850,1575),(850,1600) */
/* CIF TextPosition (675,1100) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Task (750,1600) */
task i := i + 1;
/* CIF Line (850,1700),(850,1725),(1700,1725),(1700,875),(850,875),(850,900) */
/* CIF Join Invisible */
join grst13;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,950),(200,950),(200,1250) */
/* CIF TextPosition (175,975) */
(false):
/* CIF Decision (100,1250) */
decision 
/* CIF TextExtension (350,1250) Right */
/* CIF Line (350,1300),(300,1300) */
length(shSES) > 0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (200,1350),(200,1450) */
/* CIF TextPosition (225,1375) */
(true):
/* CIF Output (100,1450) Right */
output VisibleShip
/* CIF TextExtension (350,1450) Right */
/* CIF Line (350,1500),(300,1500) */
(j, shSES)
/* CIF End TextExtension */
;
/* CIF Line (200,1550),(200,1600) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (100,1300),(75,1300),(75,1575),(200,1575),(200,1600) */
/* CIF TextPosition (125,1250) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Task (100,1600) */
task j := j + 1;
/* CIF Line (200,1700),(200,1725),(50,1725),(50,525),(850,525),(850,550) */
/* CIF Join Invisible */
join grst12;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure SendVisibleShips;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\Err2Str.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure Err2Str
;
returns Charstring;
/* CIF DefaultSize (100,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (50,250),(200,100) */
start ;
/* CIF Line (150,350),(150,400) */
/* CIF Decision (50,400),(200,100) */
decision errname;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (250,450),(1025,450),(1025,525),(1150,525),(1150,550) */
/* CIF TextPosition (1175,525) */
(= EN_GEN_POINTS_FAULT):
/* CIF Return (1100,550) */
return 'generatePoints function retuns fault';
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,500),(150,725),(300,725),(300,750) */
/* CIF TextPosition (325,725) */
(= EN_OK):
/* CIF Return (250,750) */
return 'All operations complete successfully';
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (250,450),(1025,450),(1025,725),(1150,725),(1150,750) */
/* CIF TextPosition (1175,725) */
(= EN_WRONG_MAP):
/* CIF Return (1100,750) */
return 'Wrong map format';
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,500),(150,925),(300,925),(300,950) */
/* CIF TextPosition (325,925) */
(= EN_COULD_NOT_OPEN_FILE):
/* CIF Return (250,950) */
return 'Could not open file';
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,500),(150,1125),(300,1125),(300,1150) */
/* CIF TextPosition (325,1125) */
(= EN_SHIP_NOT_FOUND):
/* CIF Return (250,1150) */
return 'Ship not found';
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,500),(150,1325),(300,1325),(300,1350) */
/* CIF TextPosition (325,1325) */
(= EN_ERROR_PROPERTY):
/* CIF Return (250,1350) */
return 'Ship does not have this ammunition';
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,500),(150,1525),(300,1525),(300,1550) */
/* CIF TextPosition (325,1525) */
(= EN_NOT_ENOUGH_AMMO):
/* CIF Return (250,1550) */
return 'Not enough ammunition';
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,500),(150,1725),(300,1725),(300,1750) */
/* CIF TextPosition (325,1725) */
(= EN_INIT_SOCKET_FAULT):
/* CIF Return (250,1750) */
return 'Socket initialization fault';
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,500),(150,1925),(300,1925),(300,1950) */
/* CIF TextPosition (325,1925) */
(= EN_SEND_DATA_FAULT):
/* CIF Return (250,1950) */
return 'Data sending fault';
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,500),(150,2125),(300,2125),(300,2150) */
/* CIF TextPosition (325,2125) */
(= EN_GET_COORD_FAULT):
/* CIF Return (250,2150) */
return 'GetCoordinates function fault';
/* CIF Answer Right */
/* CIF Line (250,450),(300,450),(300,550) */
/* CIF TextPosition (325,475) */
else:
/* CIF Return (250,550) */
return 'Unknown error (strange situation)';
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure Err2Str;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 4 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SimIteration.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 4 Scale 120 Grid (50,50) AutoNumbered */
procedure SimIteration
;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (700,300) */
dcl st Integer;
/* CIF End Text */
/* CIF Text (1200,300) */
dcl shId tShipId;
dcl strId tStrategyId;
dcl shFA tFactorAcceleration;
dcl shHC tHeadingChange;
dcl shWN tNameWeaponry;
dcl shSSL tStringShotsList;
/* CIF End Text */
/* CIF Text (700,450) */
dcl strASI tArraySI;
/* CIF End Text */
/* CIF Text (700,600) */
newtype tLiteralsOrder
  literals
    SPEED,
    TURN,
    FIRE;
endnewtype;

newtype tStructOrder
  struct
    IsOrder Boolean;
    Order tLiteralsOrder;
    IsOrderPass Boolean;
    StrId tStrategyId;
    FA tFactorAcceleration;
    HC tHeadingChange;
    WN tNameWeaponry;
    SSL tStringShotsList;
endnewtype;

newtype tArrayOrder
  Array(tShipId, tStructOrder);
endnewtype;
/* CIF End Text */
/* CIF Text (1200,600) */
dcl shipOrders tArrayOrder;
/* CIF End Text */
/* CIF Text (1200,750) */
synonym MAX_SHIP_ID =
  (MaxTypeBattleship + MaxTypeCruiser +
  MaxTypeDestroyer + MaxTypeMissileCutter +
  MaxTypeRepairBoat)*AmountStrategy;
/* CIF End Text */
/* CIF Procedure (50,300),(550,100) */
/* CIF TextPosition (244,325) */
procedure NullingSI referenced;
/* CIF Procedure (50,450),(550,100) */
/* CIF TextPosition (171,475) */
procedure IsASIComplete referenced;
/* CIF Procedure (50,600),(550,100) */
/* CIF TextPosition (136,625) */
procedure CheckStrategies referenced;
/* CIF Procedure (50,750),(550,100) */
/* CIF TextPosition (136,775) */
procedure NullingShipOrders referenced;
/* CIF Procedure (50,900),(550,100) */
/* CIF TextPosition (100,925) */
procedure SendResposeOnOrders referenced;
/* CIF CurrentPage 3 */
/* CIF Procedure (450,100),(400,100) */
/* CIF TextPosition (549,125) */
procedure OrderFire referenced;
/* CIF Procedure (900,100),(400,100) */
/* CIF TextPosition (999,125) */
procedure OrderTurn referenced;
/* CIF Procedure (1350,100),(400,100) */
/* CIF TextPosition (1450,125) */
procedure OrderSpeed referenced;
/* CIF CurrentPage 4 */
/* CIF Procedure (100,550),(400,100) */
/* CIF TextPosition (125,575) */
procedure ChangeCoordinate referenced;
/* CIF Procedure (100,700),(400,100) */
/* CIF TextPosition (200,725) */
procedure CollisionShip referenced;
/* CIF Procedure (100,850),(400,100) */
/* CIF TextPosition (175,875) */
procedure UpdateShots referenced;
/* CIF CurrentPage 2 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,250) */
/* CIF Extendedtask (800,250) */
task {
/* CIF TextExtension (1050,250) Right */
/* CIF Line (1050,300),(1000,300) */
errcode := call NullingSI;
errcode := call NullingShipOrders;
/* CIF End TextExtension */
};
/* CIF Line (900,350),(900,400) */
/* CIF NextState (800,400) */
nextstate idle;
/* CIF State (800,400) */
state idle;
/* CIF Line (900,500),(900,525),(150,525),(150,600) */
/* CIF Input (50,600) Right */
input 
/* CIF TextExtension (300,600) Right */
/* CIF Line (300,650),(250,650) */
OrderSpeedRequest(shId, strId, shFA)
/* CIF End TextExtension */
;
/* CIF Line (150,700),(150,750) */
/* CIF Decision (50,750) */
decision 
/* CIF TextExtension (300,750) Right */
/* CIF Line (300,800),(250,800) */
shipOrders(shId)!IsOrder = false
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,850),(150,1000) */
/* CIF TextPosition (175,875) */
(true):
/* CIF Extendedtask (50,1000) */
task {
/* CIF TextExtension (300,1000) Right */
/* CIF Line (300,1050),(250,1050) */
shipOrders(shId)!Order := SPEED;
shipOrders(shId)!FA := shFA;
/* CIF End TextExtension */
};
/* CIF Line (150,1100),(150,1200) */
/* CIF Join (100,1200),(100,100) */
join SI2;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (250,800),(275,800),(275,950),(900,950),(900,1200) */
/* CIF TextPosition (450,900) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Label Invisible */
grst14:
/* CIF NextState (800,1200) */
nextstate -;
/* CIF Line (900,500),(900,525),(1150,525),(1150,600) */
/* CIF Input (1050,600) Right */
input 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
OrderTurnRequest(shId, strId, shHC)
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,750) */
/* CIF Decision (1050,750) */
decision 
/* CIF TextExtension (1300,750) Right */
/* CIF Line (1300,800),(1250,800) */
shipOrders(shId)!IsOrder = false
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1150,850),(1150,1000) */
/* CIF TextPosition (1175,875) */
(true):
/* CIF Extendedtask (1050,1000) */
task {
/* CIF TextExtension (1300,1000) Right */
/* CIF Line (1300,1050),(1250,1050) */
shipOrders(shId)!Order := TURN;
shipOrders(shId)!HC := shHC;
/* CIF End TextExtension */
};
/* CIF Line (1150,1100),(1150,1200) */
/* CIF Join (1100,1200),(100,100) */
join SI2;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1050,800),(900,800),(900,1200) */
/* CIF TextPosition (1000,750) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst14;
/* CIF End State */
endstate;
/* CIF State (800,1400) */
state idle;
/* CIF Line (900,1500),(900,1525),(250,1525),(250,1600) */
/* CIF Input (150,1600) Right */
input 
/* CIF TextExtension (400,1600) Right */
/* CIF Line (400,1650),(350,1650) */
OrderFireRequest(shId, strId, shWN, shSSL)
/* CIF End TextExtension */
;
/* CIF Line (250,1700),(250,1750) */
/* CIF Decision (150,1750) */
decision 
/* CIF TextExtension (400,1750) Right */
/* CIF Line (400,1800),(350,1800) */
shipOrders(shId)!IsOrder = false
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (150,1800),(50,1800),(50,1375),(600,1375),(600,1150),(900,1150),
    (900,1200) */
/* CIF TextPosition (75,1750) */
(false):
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,1850),(250,1950) */
/* CIF TextPosition (275,1875) */
(true):
/* CIF Extendedtask (150,1950) */
task {
/* CIF TextExtension (400,1950) Right */
/* CIF Line (400,2000),(350,2000) */
shipOrders(shId)!Order := FIRE;
shipOrders(shId)!WN := shWN;
shipOrders(shId)!SSL := shSSL;
/* CIF End TextExtension */
};
/* CIF Line (250,2050),(250,2100) */
/* CIF Join (200,2100),(100,100) */
join SI2;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst14;
/* CIF Line (900,1500),(900,1525),(1200,1525),(1200,1600) */
/* CIF Input (1100,1600) Right */
input 
/* CIF TextExtension (1350,1600) Right */
/* CIF Line (1350,1650),(1300,1650) */
FinishSimulation(st, strId)
/* CIF End TextExtension */
;
/* CIF Line (1200,1700),(1200,1750) */
/* CIF Extendedtask (1100,1750) */
task {
/* CIF TextExtension (1350,1750) Right */
/* CIF Line (1350,1800),(1300,1800) */
strASI(strId) := true;
/* CIF End TextExtension */
};
/* CIF Line (1200,1850),(1200,1950) */
/* CIF Decision (1100,1950) */
decision 
/* CIF TextExtension (1350,1950) Right */
/* CIF Line (1350,2000),(1300,2000) */
call IsASIComplete
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1100,2000),(975,2000),(975,2225),(50,2225),(50,1375),(600,1375),
    (600,1150),(900,1150),(900,1200) */
/* CIF TextPosition (1050,1950) */
(false):
/* CIF Answer InvisibleBrackets */
/* CIF Line (1200,2050),(1200,2150) */
/* CIF TextPosition (1225,2075) */
(true):
/* CIF Join (1150,2150),(100,100) */
join SI3;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst14;
/* CIF End State */
endstate;
/* CIF CurrentPage 1 */
/* CIF CurrentPage 3 */
/* CIF Label (750,300),(100,100) */
connection SI2:
/* CIF Line (800,400),(800,450) */
/* CIF Extendedtask (700,450) */
task {
/* CIF TextExtension (950,450) Right */
/* CIF Line (950,500),(900,500) */
shipOrders(shId)!IsOrder := true;
shipOrders(shId)!StrId := strId;
/* CIF End TextExtension */
};
/* CIF Line (800,550),(800,650) */
/* CIF Decision (700,650) */
decision 
/* CIF TextExtension (1050,650) Right */
/* CIF Line (1050,700),(900,700) */
shipOrders(shId)!Order
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,700),(600,700),(600,850) */
/* CIF TextPosition (750,800) */
(= SPEED):
/* CIF Task (500,850) */
task 
/* CIF TextExtension (750,850) Right */
/* CIF Line (750,900),(700,900) */
errcode := call OrderSpeed(shId, shipOrders(shId)!FA)
/* CIF End TextExtension */
;
/* CIF Line (600,950),(600,975),(1625,975),(1625,1525),(800,1525),(800,1600) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,700),(450,700),(450,1100) */
/* CIF TextPosition (475,1050) */
(= TURN):
/* CIF Task (350,1100) */
task 
/* CIF TextExtension (600,1100) Right */
/* CIF Line (600,1150),(550,1150) */
errcode := call OrderTurn(shId, shipOrders(shId)!HC)
/* CIF End TextExtension */
;
/* CIF Line (450,1200),(450,1225),(1625,1225),(1625,1525),(800,1525),(800,1600) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,700),(300,700),(300,1350) */
/* CIF TextPosition (325,1300) */
(= FIRE):
/* CIF Task (200,1350) */
task 
/* CIF TextExtension (450,1350) Right */
/* CIF Line (450,1400),(400,1400) */
errcode := call OrderFire(shId, shipOrders(shId)!WN, shipOrders(shId)!SSL)
/* CIF End TextExtension */
;
/* CIF Line (300,1450),(300,1525),(800,1525),(800,1600) */
/* CIF End Decision */
enddecision;
/* CIF Decision (700,1600) */
decision errcode;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,1650),(1050,1650),(1050,1750) */
/* CIF TextPosition (1075,1675) */
(= EC_OK):
/* CIF Task (950,1750) */
task 
/* CIF TextExtension (1200,1750) Right */
/* CIF Line (1200,1800),(1150,1800) */
shipOrders(shId)!IsOrderPass := true
/* CIF End TextExtension */
;
/* CIF Line (1050,1850),(1050,1875),(800,1875),(800,1950) */
/* CIF Answer Left */
/* CIF Line (700,1650),(300,1650),(300,1750) */
/* CIF TextPosition (325,1675) */
else:
/* CIF Output (200,1750) Right */
output messageError
/* CIF TextExtension (450,1750) Right */
/* CIF Line (450,1800),(400,1800) */
(call Err2Str)
/* CIF End TextExtension */
;
/* CIF Line (300,1850),(300,1875),(800,1875),(800,1950) */
/* CIF End Decision */
enddecision;
/* CIF NextState (700,1950) */
nextstate -;
/* CIF End Label */
endconnection SI2;
/* CIF CurrentPage 4 */
/* CIF Label (750,400),(100,100) */
connection SI3:
/* CIF Line (800,500),(800,550) */
/* CIF Extendedtask (700,550) */
task {
/* CIF TextExtension (950,550) Right */
/* CIF Line (950,600),(900,600) */
errcode := call SendResposeOnOrders;
/* CIF End TextExtension */
};
/* CIF Line (800,650),(800,700) */
/* CIF Extendedtask (700,700) */
task {
/* CIF TextExtension (950,700) Right */
/* CIF Line (950,750),(900,750) */
call ChangeCoordinate;
call CollisionShip;
call UpdateShots;
/* CIF End TextExtension */
};
/* CIF Line (800,800),(800,850) */
/* CIF Output (700,850) Right */
output messageLog
/* CIF TextExtension (950,850) Right */
/* CIF Line (950,900),(900,900) */
('Check all strategies for Lose and Victory')
/* CIF End TextExtension */
;
/* CIF Line (800,950),(800,1000) */
/* CIF Extendedtask (700,1000) */
task {
/* CIF TextExtension (950,1000) Right */
/* CIF Line (950,1050),(900,1050) */
errcode := call NullingSI;
errcode := call CheckStrategies;
/* CIF End TextExtension */
};
/* CIF Line (800,1100),(800,1150) */
/* CIF Task (700,1150) */
task 
/* CIF TextExtension (950,1150) Right */
/* CIF Line (950,1200),(900,1200) */
errname := EN_OK
/* CIF End TextExtension */
;
/* CIF Line (800,1250),(800,1350) */
/* CIF Return (750,1350),(100,100) */
return EC_OK;
/* CIF End Label */
endconnection SI3;
/* CIF End ProcedureDiagram */
endprocedure SimIteration;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\NullingSI.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure NullingSI
;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF Text (500,100) */
dcl i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (850,300) */
start ;
/* CIF Line (950,400),(950,450) */
/* CIF Task (850,450) */
task i := 1;
/* CIF Line (950,550),(950,600) */
/* CIF Label Invisible */
grst15:
/* CIF Decision (850,600) */
decision 
/* CIF TextExtension (1100,600) Right */
/* CIF Line (1100,650),(1050,650) */
i <= AmountStrategy
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,650),(300,650),(300,800) */
/* CIF TextPosition (275,675) */
(false):
/* CIF Task (200,800) */
task 
/* CIF TextExtension (450,800) Right */
/* CIF Line (450,850),(400,850) */
errname := EN_OK
/* CIF End TextExtension */
;
/* CIF Line (300,900),(300,950) */
/* CIF Return (250,950),(100,100) */
return EC_OK;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,700),(950,800) */
/* CIF TextPosition (975,725) */
(true):
/* CIF Extendedtask (850,800) */
task {
/* CIF TextExtension (1100,800) Right */
/* CIF Line (1100,850),(1050,850) */
strASI(i) := false;
i := i + 1;
/* CIF End TextExtension */
};
/* CIF Line (950,900),(950,925),(1475,925),(1475,575),(950,575),(950,600) */
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst15;
/* CIF End ProcedureDiagram */
endprocedure NullingSI;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\IsASIComplete.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure IsASIComplete
;
returns Boolean;
/* CIF DefaultSize (200,100) */
/* CIF Text (450,100) */
dcl i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,300) */
start ;
/* CIF Line (800,400),(800,450) */
/* CIF Task (700,450) */
task i := 1;
/* CIF Line (800,550),(800,600) */
/* CIF Label Invisible */
grst16:
/* CIF Decision (700,600) */
decision 
/* CIF TextExtension (950,600) Right */
/* CIF Line (950,650),(900,650) */
i <= AmountStrategy AND gASI(i) = true
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,650),(250,650),(250,750) */
/* CIF TextPosition (275,675) */
(false):
/* CIF Return (200,750),(100,100) */
return true;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,700),(800,850) */
/* CIF TextPosition (825,725) */
(true):
/* CIF Decision (700,850) */
decision 
/* CIF TextExtension (950,850) Right */
/* CIF Line (950,900),(900,900) */
strASI(i) = true
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,900),(250,900),(250,1050) */
/* CIF TextPosition (275,925) */
(false):
/* CIF Return (200,1050),(100,100) */
return false;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,950),(800,1050) */
/* CIF TextPosition (825,975) */
(true):
/* CIF Task (700,1050) */
task i := i + 1;
/* CIF Line (800,1150),(800,1175),(1625,1175),(1625,575),(800,575),(800,600) */
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst16;
/* CIF End ProcedureDiagram */
endprocedure IsASIComplete;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\CheckStrategies.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure CheckStrategies
;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (450,100) */
dcl i, j, n, ns Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,300) */
start ;
/* CIF Line (900,400),(900,450) */
/* CIF Extendedtask (800,450) */
task {
/* CIF TextExtension (1050,450) Right */
/* CIF Line (1050,500),(1000,500) */
i := 1;
n := length(gShips);
/* CIF End TextExtension */
};
/* CIF Line (900,550),(900,600) */
/* CIF Label Invisible */
grst17:
/* CIF Decision (800,600) */
decision 
/* CIF TextExtension (1050,600) Right */
/* CIF Line (1050,650),(1000,650) */
i <= n
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,650),(300,650),(300,800) */
/* CIF TextPosition (275,675) */
(false):
/* CIF Extendedtask (200,800) */
task {
/* CIF TextExtension (450,800) Right */
/* CIF Line (450,850),(400,850) */
i := 1;
j := 0;
ns := 0;
/* CIF End TextExtension */
};
/* CIF Line (300,900),(300,975),(900,975),(900,1000) */
/* CIF Label Invisible */
grst18:
/* CIF Decision (800,1000) */
decision 
/* CIF TextExtension (1050,1000) Right */
/* CIF Line (1050,1050),(1000,1050) */
i <= AmountStrategy
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,1050),(600,1050),(600,1150) */
/* CIF TextPosition (700,1000) */
(false):
/* CIF Join (550,1150),(100,100) */
join CS1;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,1100),(900,1300) */
/* CIF TextPosition (925,1125) */
(true):
/* CIF Decision (800,1300) */
decision 
/* CIF TextExtension (1050,1300) Right */
/* CIF Line (1050,1350),(1000,1350) */
gASI(i) = true
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,1400),(900,1500) */
/* CIF TextPosition (925,1425) */
(true):
/* CIF Decision (800,1500) */
decision 
/* CIF TextExtension (1050,1500) Right */
/* CIF Line (1050,1550),(1000,1550) */
strASI(i) = false
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,1550),(600,1550),(600,1700) */
/* CIF TextPosition (675,1500) */
(false):
/* CIF Extendedtask (500,1700) */
task {j := j + 1;
ns := i;};
/* CIF Line (600,1800),(600,2000) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,1600),(900,1700) */
/* CIF TextPosition (925,1625) */
(true):
/* CIF Output (800,1700) Right */
output StrategyLose
/* CIF TextExtension (1050,1700) Right */
/* CIF Line (1050,1750),(1000,1750) */
( i )
/* CIF End TextExtension */
;
/* CIF Line (900,1800),(900,1850) */
/* CIF Task (800,1850) */
task 
/* CIF TextExtension (1050,1850) Right */
/* CIF Line (1050,1900),(1000,1900) */
gASI(i) := false
/* CIF End TextExtension */
;
/* CIF Line (900,1950),(900,1975),(600,1975),(600,2000) */
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,1350),(425,1350),(425,1975),(600,1975),(600,2000) */
/* CIF TextPosition (700,1300) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Task (500,2000) */
task i := i + 1;
/* CIF Line (600,2100),(600,2125),(300,2125),(300,975),(900,975),(900,1000) */
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst18;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,700),(900,800) */
/* CIF TextPosition (925,725) */
(true):
/* CIF Extendedtask (800,800) */
task {
/* CIF TextExtension (1050,800) Right */
/* CIF Line (1050,850),(1000,850) */
strASI(gShips(i)!StrategyId) := true;
i := i + 1;
/* CIF End TextExtension */
};
/* CIF Line (900,900),(900,925),(1600,925),(1600,575),(900,575),(900,600) */
/* CIF Join Invisible */
join grst17;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 2 */
/* CIF Label (1100,300),(100,100) */
connection CS1:
/* CIF Line (1150,400),(1150,450) */
/* CIF Decision (1050,450) */
decision 
/* CIF TextExtension (1300,450) Right */
/* CIF Line (1300,500),(1250,500) */
j = 0
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1050,500),(550,500),(550,600) */
/* CIF TextPosition (1000,450) */
(false):
/* CIF Decision (450,600) */
decision 
/* CIF TextExtension (700,600) Right */
/* CIF Line (700,650),(650,650) */
( j = 1 ) AND
  ( gShots = empty )
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (550,700),(550,800) */
/* CIF TextPosition (575,725) */
(true):
/* CIF Task (450,800) */
task victory := true;
/* CIF Line (550,900),(550,950) */
/* CIF Output (450,950) Right */
output StrategyVictory
/* CIF TextExtension (700,950) Right */
/* CIF Line (700,1000),(650,1000) */
( ns )
/* CIF End TextExtension */
;
/* CIF Line (550,1050),(550,1150) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (450,650),(350,650),(350,1125),(550,1125),(550,1150) */
/* CIF TextPosition (375,600) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1150,550),(1150,600) */
/* CIF TextPosition (1175,550) */
(true):
/* CIF Task (1050,600) */
task 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
gShots := empty
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,800) */
/* CIF Task (1050,800) */
task victory := true;
/* CIF Line (1150,900),(1150,1125),(550,1125),(550,1150) */
/* CIF End Decision */
enddecision;
/* CIF Task (450,1150) */
task 
/* CIF TextExtension (700,1150) Right */
/* CIF Line (700,1200),(650,1200) */
errname := EN_OK
/* CIF End TextExtension */
;
/* CIF Line (550,1250),(550,1300) */
/* CIF Return (500,1300),(100,100) */
return EC_OK;
/* CIF End Label */
endconnection CS1;
/* CIF End ProcedureDiagram */
endprocedure CheckStrategies;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\NullingShipOrders.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure NullingShipOrders
;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF Text (600,100) */
dcl i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,250) */
start ;
/* CIF Line (800,350),(800,400) */
/* CIF Task (700,400) */
task i := 1;
/* CIF Line (800,500),(800,600) */
/* CIF Label Invisible */
grst19:
/* CIF Decision (700,600) */
decision 
/* CIF TextExtension (950,600) Right */
/* CIF Line (950,650),(900,650) */
i <= MAX_SHIP_ID
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,650),(200,650),(200,800) */
/* CIF TextPosition (175,675) */
(false):
/* CIF Task (100,800) */
task 
/* CIF TextExtension (350,800) Right */
/* CIF Line (350,850),(300,850) */
errname := EN_OK
/* CIF End TextExtension */
;
/* CIF Line (200,900),(200,950) */
/* CIF Return (150,950),(100,100) */
return EC_OK;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,700),(800,800) */
/* CIF TextPosition (825,725) */
(true):
/* CIF Extendedtask (700,800) */
task {
/* CIF TextExtension (950,800) Right */
/* CIF Line (950,850),(900,850) */
shipOrders(i)!IsOrder := false;
shipOrders(i)!IsOrderPass := false;
i := i + 1;
/* CIF End TextExtension */
};
/* CIF Line (800,900),(800,975),(1475,975),(1475,575),(800,575),(800,600) */
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst19;
/* CIF End ProcedureDiagram */
endprocedure NullingShipOrders;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SendResposeOnOrders.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SendResposeOnOrders
;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF Text (50,250) */
dcl i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (850,100) */
start ;
/* CIF Line (950,200),(950,250) */
/* CIF Task (850,250) */
task i := 1;
/* CIF Line (950,350),(950,450) */
/* CIF Label Invisible */
grst20:
/* CIF Decision (850,450) */
decision 
/* CIF TextExtension (1100,450) Right */
/* CIF Line (1100,500),(1050,500) */
i <= MAX_SHIP_ID
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,550),(950,750) */
/* CIF TextPosition (975,575) */
(true):
/* CIF Decision (850,750) */
decision 
/* CIF TextExtension (1100,750) Right */
/* CIF Line (1100,800),(1050,800) */
shipOrders(i)!IsOrder
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,800),(750,800),(750,900) */
/* CIF TextPosition (725,825) */
(true):
/* CIF Decision (650,900) */
decision 
/* CIF TextExtension (900,900) Right */
/* CIF Line (900,950),(850,950) */
shipOrders(i)!Order
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1000),(750,1100) */
/* CIF TextPosition (775,1025) */
(= SPEED):
/* CIF Decision (650,1100) */
decision 
/* CIF TextExtension (900,1100) Right */
/* CIF Line (900,1150),(850,1150) */
shipOrders(i)!IsOrderPass
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,1150),(200,1150),(200,1250) */
/* CIF TextPosition (175,1175) */
(false):
/* CIF Output (100,1250) Right */
output 
/* CIF TextExtension (400,1250) Right */
/* CIF Line (400,1300),(300,1300) */
OrderSpeedReject(i,
  shipOrders(i)!StrId)
/* CIF End TextExtension */
;
/* CIF Line (200,1350),(200,1375),(1575,1375),(1575,1125),(1700,1125),(1700,1150) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (850,1150),(875,1150),(875,1225),(1000,1225),(1000,1250) */
/* CIF TextPosition (825,1225) */
(true):
/* CIF Output (900,1250) Right */
output 
/* CIF TextExtension (1150,1250) Right */
/* CIF Line (1150,1300),(1100,1300) */
OrderSpeedResponse(i,
  shipOrders(i)!StrId)
/* CIF End TextExtension */
;
/* CIF Line (1000,1350),(1000,1375),(1575,1375),(1575,1125),(1700,1125),(1700,1150) */
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,950),(425,950),(425,1075),(50,1075),(50,1450),(750,1450),
    (750,1500) */
/* CIF TextPosition (775,1425) */
(= TURN):
/* CIF Decision (650,1500) */
decision 
/* CIF TextExtension (900,1500) Right */
/* CIF Line (900,1550),(850,1550) */
shipOrders(i)!IsOrderPass
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,1550),(200,1550),(200,1650) */
/* CIF TextPosition (175,1575) */
(false):
/* CIF Output (100,1650) Right */
output 
/* CIF TextExtension (350,1650) Right */
/* CIF Line (350,1700),(300,1700) */
OrderTurnReject(i,
  shipOrders(i)!StrId)
/* CIF End TextExtension */
;
/* CIF Line (200,1750),(200,1775),(1575,1775),(1575,1125),(1700,1125),(1700,1150) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (850,1550),(875,1550),(875,1625),(1000,1625),(1000,1650) */
/* CIF TextPosition (825,1625) */
(true):
/* CIF Output (900,1650) Right */
output 
/* CIF TextExtension (1150,1650) Right */
/* CIF Line (1150,1700),(1100,1700) */
OrderTurnResponse(i,
  shipOrders(i)!StrId)
/* CIF End TextExtension */
;
/* CIF Line (1000,1750),(1000,1775),(1575,1775),(1575,1125),(1700,1125),(1700,1150) */
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,950),(425,950),(425,1075),(50,1075),(50,1850),(750,1850),
    (750,1900) */
/* CIF TextPosition (775,1825) */
(= FIRE):
/* CIF Decision (650,1900) */
decision 
/* CIF TextExtension (900,1900) Right */
/* CIF Line (900,1950),(850,1950) */
shipOrders(i)!IsOrderPass
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,1950),(200,1950),(200,2100) */
/* CIF TextPosition (175,1975) */
(false):
/* CIF Output (100,2100) Right */
output 
/* CIF TextExtension (350,2100) Right */
/* CIF Line (350,2150),(300,2150) */
OrderFireReject(i,
  shipOrders(i)!StrId)
/* CIF End TextExtension */
;
/* CIF Line (200,2200),(200,2225),(1575,2225),(1575,1125),(1700,1125),(1700,1150) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (850,1950),(875,1950),(875,2075),(1000,2075),(1000,2100) */
/* CIF TextPosition (800,2050) */
(true):
/* CIF Output (900,2100) Right */
output 
/* CIF TextExtension (1150,2100) Right */
/* CIF Line (1150,2150),(1100,2150) */
OrderFireResponse(i,
  shipOrders(i)!StrId)
/* CIF End TextExtension */
;
/* CIF Line (1000,2200),(1000,2225),(1575,2225),(1575,1125),(1700,1125),(1700,1150) */
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,850),(950,875),(1700,875),(1700,1150) */
/* CIF TextPosition (1600,900) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Task (1600,1150) */
task i := i + 1;
/* CIF Line (1700,1250),(1700,1275),(1850,1275),(1850,425),(950,425),(950,450) */
/* CIF Answer Left */
/* CIF Line (850,500),(150,500),(150,750) */
/* CIF TextPosition (125,525) */
else:
/* CIF Task (50,750) */
task 
/* CIF TextExtension (300,750) Right */
/* CIF Line (300,800),(250,800) */
errname := EN_OK
/* CIF End TextExtension */
;
/* CIF Line (150,850),(150,900) */
/* CIF Return (100,900),(100,100) */
return EC_OK;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst20;
/* CIF End ProcedureDiagram */
endprocedure SendResposeOnOrders;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\OrderFire.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure OrderFire
;fpar
shipid tShipId,
NameWeaponry tNameWeaponry,
listshot tStringShotsList;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (950,100) */
dcl
i Integer,
countershot Integer,
leng Integer,
ShotParam tShotParameters,
CurCoor tCoordinates,
bool Boolean;
/* CIF End Text */
/* CIF Procedure (50,400),(500,100) */
/* CIF TextPosition (100,425) */
procedure GetCurrentCoordinate referenced;
/* CIF Procedure (50,550),(500,100) */
/* CIF TextPosition (187,575) */
procedure GetProperty referenced;
/* CIF Procedure (50,700),(500,100) */
/* CIF TextPosition (150,725) */
procedure GetNumberShip referenced;
/* CIF Procedure (50,850),(500,100) */
/* CIF TextPosition (187,875) */
procedure GetAmmunition referenced;
/* CIF Procedure (50,1000),(500,100) */
/* CIF TextPosition (187,1025) */
procedure GetLenghtShot referenced;
/* CIF Procedure (50,1150),(500,100) */
/* CIF TextPosition (125,1175) */
procedure GetFinishCoordinate referenced;
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (650,450) */
start ;
/* CIF Line (750,550),(750,600) */
/* CIF Extendedtask (650,600) */
task {
/* CIF TextExtension (900,600) Right */
/* CIF Line (900,650),(850,650) */
countershot:=length(listshot);
leng:=length(gShips);
i:=1;
bool:=call GetProperty(shipid);
errcode:=call GetNumberShip(leng,shipid);
call GetLenghtShot(countershot,leng);
/* CIF End TextExtension */
};
/* CIF Line (750,700),(750,1050) */
/* CIF Decision (650,1050) */
decision 
/* CIF TextExtension (900,1050) Right */
/* CIF Line (900,1100),(850,1100) */
bool=true
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1150),(750,1250) */
/* CIF TextPosition (775,1175) */
(true):
/* CIF Decision (650,1250) */
decision 
/* CIF TextExtension (900,1250) Right */
/* CIF Line (900,1300),(850,1300) */
errcode=EC_OK
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1350),(750,1525),(1200,1525),(1200,1550) */
/* CIF TextPosition (1225,1550) */
(true):
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,1300),(625,1300),(625,1575),(450,1575),(450,1900) */
/* CIF TextPosition (650,1600) */
(false):
/* CIF Task (350,1900) */
task 
/* CIF TextExtension (600,1900) Right */
/* CIF Line (600,1950),(550,1950) */
 errname:=EN_SHIP_NOT_FOUND
/* CIF End TextExtension */
;
/* CIF Line (450,2000),(450,2050) */
/* CIF Return (400,2050),(100,100) */
return  EC_FAULT;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,1100),(625,1100),(625,1575),(150,1575),(150,1600) */
/* CIF TextPosition (650,1400) */
(false):
/* CIF Task (50,1600) */
task 
/* CIF TextExtension (300,1600) Right */
/* CIF Line (300,1650),(250,1650) */
errname:= EN_ERROR_PROPERTY
/* CIF End TextExtension */
;
/* CIF Line (150,1700),(150,1750) */
/* CIF Return (100,1750),(100,100) */
return  EC_FAULT;
/* CIF End Decision */
enddecision;
/* CIF Label (1700,1350),(100,100) */
L3:
/* CIF Line (1750,1450),(1750,1475),(1200,1475),(1200,1550) */
/* CIF Extendedtask (1100,1550) */
task {
/* CIF TextExtension (1350,1550) Right */
/* CIF Line (1350,1600),(1300,1600) */
bool:=call GetAmmunition(leng);
/* CIF End TextExtension */
};
/* CIF Line (1200,1650),(1200,1700) */
/* CIF Decision (1100,1700) */
decision 
/* CIF TextExtension (1350,1700) Right */
/* CIF Line (1350,1750),(1300,1750) */
bool=true
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1200,1800),(1200,1950) */
/* CIF TextPosition (1225,1825) */
(true):
/* CIF Join (1150,1950),(100,100) */
join L2;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (1300,1750),(1325,1750),(1325,1925),(1450,1925),(1450,1950) */
/* CIF TextPosition (1375,1850) */
(false):
/* CIF Task (1350,1950) */
task 
/* CIF TextExtension (1600,1950) Right */
/* CIF Line (1600,2000),(1550,2000) */
errname:=EN_OK
/* CIF End TextExtension */
;
/* CIF Line (1450,2050),(1450,2100) */
/* CIF Return (1400,2100),(100,100) */
return EC_OK;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 2 */
/* CIF Label (800,400),(100,100) */
connection L2:
/* CIF Line (850,500),(850,950) */
/* CIF Decision (750,950) */
decision 
/* CIF TextExtension (1000,950) Right */
/* CIF Line (1000,1000),(950,1000) */
i<=countershot
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1000),(300,1000),(300,1050) */
/* CIF TextPosition (275,975) */
(false):
/* CIF Task (200,1050) */
task 
/* CIF TextExtension (450,1050) Right */
/* CIF Line (450,1100),(400,1100) */
errname:=EN_OK
/* CIF End TextExtension */
;
/* CIF Line (300,1150),(300,1200) */
/* CIF Return (250,1200),(100,100) */
return EC_OK;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1050),(850,1150) */
/* CIF TextPosition (875,1075) */
(true):
/* CIF Extendedtask (750,1150) */
task {
/* CIF TextExtension (1000,1150) Right */
/* CIF Line (1000,1200),(950,1200) */
errcode:= call GetCurrentCoordinate(shipid,CurCoor );
/* CIF End TextExtension */
};
/* CIF Line (850,1250),(850,1300) */
/* CIF Decision (750,1300) */
decision 
/* CIF TextExtension (1000,1300) Right */
/* CIF Line (1000,1350),(950,1350) */
errcode=EC_OK
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1400),(850,1550) */
/* CIF TextPosition (875,1425) */
(true):
/* CIF Extendedtask (750,1550) */
task {
/* CIF TextExtension (1000,1550) Right */
/* CIF Line (1000,1600),(950,1600) */
ShotParam!TypeWeaponry:=NameWeaponry;
ShotParam!CurrentCoordinates:=CurCoor;
ShotParam!FinishCoordinates:=call GetFinishCoordinate(
CurCoor, listshot(i));

/* CIF End TextExtension */
};
/* CIF Line (850,1650),(850,1750) */
/* CIF Extendedtask (750,1750) */
task {
/* CIF TextExtension (1000,1750) Right */
/* CIF Line (1000,1800),(950,1800) */
gShots:=gShots//mkstring(ShotParam);
i:=i+1;
/* CIF End TextExtension */
};
/* CIF Line (850,1850),(850,1900) */
/* CIF Output (750,1900) Right */
output messageLog
/* CIF TextExtension (1000,1900) Right */
/* CIF Line (1000,1950),(950,1950) */
('gShots')
/* CIF End TextExtension */
;
/* CIF Line (850,2000),(850,2025),(1150,2025),(1150,2100) */
/* CIF Join (1100,2100),(100,100) */
join L3;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1350),(150,1350),(150,1650) */
/* CIF TextPosition (125,1375) */
(false):
/* CIF Task (50,1650) */
task 
/* CIF TextExtension (400,2100) Right */
/* CIF Line (400,2150),(375,2150),(375,1700),(250,1700) */
errname:=EN_SHIP_NOT_FOUND
/* CIF End TextExtension */
;
/* CIF Line (150,1750),(150,2100) */
/* CIF Return (100,2100),(100,100) */
return EC_FAULT;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection L2;
/* CIF End ProcedureDiagram */
endprocedure OrderFire;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\GetCurrentCoordinate.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure GetCurrentCoordinate
;fpar
shipid tShipId,
in/out  CurCoor tCoordinates;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF Text (1350,100) */
dcl
i Integer,
leng  Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (600,350) */
start ;
/* CIF Line (700,450),(700,650) */
/* CIF Task (600,650) */
task i:=1;
/* CIF Line (700,750),(700,800) */
/* CIF Task (600,800) */
task 
/* CIF TextExtension (850,800) Right */
/* CIF Line (850,850),(800,850) */
leng:=length(gShips)
/* CIF End TextExtension */
;
/* CIF Line (700,900),(700,950) */
/* CIF Label Invisible */
grst21:
/* CIF Decision (600,950) */
decision 
/* CIF TextExtension (850,1050) Right */
/* CIF Line (850,1100),(825,1100),(825,1000),(800,1000) */
i<=leng
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,1050),(700,1200) */
/* CIF TextPosition (725,1075) */
(true):
/* CIF Decision (600,1200) */
decision 
/* CIF TextExtension (850,1200) Right */
/* CIF Line (850,1250),(800,1250) */
shipid=gShips(i)!ShipId 
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,1300),(700,1450) */
/* CIF TextPosition (725,1325) */
(false):
/* CIF Task (600,1450) */
task i:=i+1;
/* CIF Line (700,1550),(700,1575),(1450,1575),(1450,925),(700,925),(700,950) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,1250),(300,1250),(300,1600) */
/* CIF TextPosition (275,1275) */
(true):
/* CIF Task (200,1600) */
task 
/* CIF TextExtension (550,1600) Right */
/* CIF Line (550,1650),(400,1650) */
CurCoor:=gShips(i)!Coordinates
/* CIF End TextExtension */
;
/* CIF Line (300,1700),(300,1750) */
/* CIF Task (200,1750) */
task 
/* CIF TextExtension (450,1750) Right */
/* CIF Line (450,1800),(400,1800) */
errname := EN_OK
/* CIF End TextExtension */
;
/* CIF Line (300,1850),(300,1900) */
/* CIF Return (250,1900),(100,100) */
return EC_OK;
/* CIF End Decision */
enddecision;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,1000),(1725,1000),(1725,1675),(1300,1675),(1300,1700) */
/* CIF TextPosition (1750,1550) */
(false):
/* CIF Task (1200,1700) */
task 
/* CIF TextExtension (1500,1700) Right */
/* CIF Line (1500,1750),(1400,1750) */
errname := EN_SHIP_NOT_FOUND
/* CIF End TextExtension */
;
/* CIF Line (1300,1800),(1300,1850) */
/* CIF Return (1250,1850),(100,100) */
return  EC_FAULT;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst21;
/* CIF End ProcedureDiagram */
endprocedure GetCurrentCoordinate;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\GetProperty.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 100 Grid (50,50) AutoNumbered */
procedure GetProperty
;fpar
shipid tShipId;
returns Boolean;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (1350,450) */
dcl
leng Integer,
i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,100) */
start ;
/* CIF Line (800,200),(800,300) */
/* CIF Task (700,300) */
task 
/* CIF TextExtension (950,300) Right */
/* CIF Line (950,350),(900,350) */
i:=1

/* CIF End TextExtension */
;
/* CIF Line (800,400),(800,450) */
/* CIF Task (700,450) */
task 
/* CIF TextExtension (950,450) Right */
/* CIF Line (950,500),(900,500) */
leng:=length(gShips)
/* CIF End TextExtension */
;
/* CIF Line (800,550),(800,700) */
/* CIF Label Invisible */
grst22:
/* CIF Decision (700,700) */
decision 
/* CIF TextExtension (950,700) Right */
/* CIF Line (950,750),(900,750) */
i<=leng
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,800),(800,850) */
/* CIF TextPosition (825,825) */
(true):
/* CIF Decision (700,850) */
decision 
/* CIF TextExtension (950,850) Right */
/* CIF Line (950,900),(900,900) */
shipid = gShips(i)!ShipId 
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,950),(800,1100) */
/* CIF TextPosition (825,975) */
(true):
/* CIF Decision (700,1100) */
decision 
/* CIF TextExtension (950,1100) Right */
/* CIF Line (950,1150),(900,1150) */
 NameWeaponry
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1200),(800,1225),(350,1225),(350,1400) */
/* CIF TextPosition (325,1250) */
(MISSILE):
/* CIF Decision (250,1400) */
decision 
/* CIF TextExtension (500,1400) Right */
/* CIF Line (500,1450),(450,1450) */
gShips(i)!TypeShip
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (350,1500),(350,1525),(200,1525),(200,1750) */
/* CIF TextPosition (0,1900) */
(DESTROYER ,REPAIR_BOAT
):
/* CIF Return (150,1750),(100,100) */
return false;
/* CIF Answer */
/* CIF Line (350,1500),(350,1525),(500,1525),(500,2000) */
/* CIF TextPosition (525,1550) */
else:
/* CIF Return (450,2000),(100,100) */
return true;
/* CIF End Decision */
enddecision;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1200),(800,1225),(1350,1225),(1350,1400) */
/* CIF TextPosition (1375,1250) */
( REPAIR):
/* CIF Join (1300,1400),(100,100) */
join L3;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1200),(800,1225),(1600,1225),(1600,1400) */
/* CIF TextPosition (1625,1250) */
(  SHELL):
/* CIF Join (1550,1400),(100,100) */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1200),(800,1575),(1350,1575),(1350,1600) */
/* CIF TextPosition (825,1300) */
(TORPEDO):
/* CIF Decision (1250,1600) */
decision 
/* CIF TextExtension (1500,1600) Right */
/* CIF Line (1500,1650),(1450,1650) */
gShips(i)!TypeShip
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1350,1700),(1350,1725),(1000,1725),(1000,2050) */
/* CIF TextPosition (1225,1775) */
(MISSILE_CUTTER,REPAIR_BOAT
):
/* CIF Return (950,2050),(100,100) */
return false;
/* CIF Answer */
/* CIF Line (1350,1700),(1350,1725),(1550,1725),(1550,2050) */
/* CIF TextPosition (1575,1750) */
else:
/* CIF Return (1500,2050),(100,100) */
return true;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,900),(925,900),(925,1075),(1750,1075),(1750,1100) */
/* CIF TextPosition (1525,1025) */
(false):
/* CIF Task (1650,1100) */
task i:=i+1;
/* CIF Line (1750,1200),(1750,1225),(1875,1225),(1875,675),(800,675),(800,700) */
/* CIF End Decision */
enddecision;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,800),(800,825),(250,825),(250,950) */
/* CIF TextPosition (225,850) */
(false):
/* CIF Return (200,950),(100,100) */
return false;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst22;
/* CIF CurrentPage 2 */
/* CIF Label (500,450),(100,100) */
connection L2:
/* CIF Line (550,550),(550,600) */
/* CIF Decision (450,600) */
decision 
/* CIF TextExtension (700,600) Right */
/* CIF Line (700,650),(650,650) */
gShips(i)!TypeShip
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (550,700),(550,725),(300,725),(300,1200) */
/* CIF TextPosition (125,850) */
(MISSILE_CUTTER,REPAIR_BOAT
):
/* CIF Return (250,1200),(100,100) */
return false;
/* CIF Answer */
/* CIF Line (550,700),(550,725),(800,725),(800,1200) */
/* CIF TextPosition (825,750) */
else:
/* CIF Return (750,1200),(100,100) */
return true;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection L2;
/* CIF Label (750,1350),(100,100) */
connection L3:
/* CIF Line (800,1450),(800,1550) */
/* CIF Decision (700,1550) */
decision 
/* CIF TextExtension (950,1550) Right */
/* CIF Line (950,1600),(900,1600) */
gShips(i)!TypeShip
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1650),(800,1675),(650,1675),(650,1900) */
/* CIF TextPosition (525,1725) */
(REPAIR_BOAT):
/* CIF Return (600,1900),(100,100) */
return true;
/* CIF Answer */
/* CIF Line (800,1650),(800,1675),(900,1675),(900,1900) */
/* CIF TextPosition (925,1700) */
else:
/* CIF Return (850,1900),(100,100) */
return false;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection L3;
/* CIF End ProcedureDiagram */
endprocedure GetProperty;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\GetNumberShip.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure GetNumberShip
;fpar
in/out Number Integer,
shipid tShipId;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF Text (1100,100) */
dcl 
i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (650,450) */
start ;
/* CIF Line (750,550),(750,600) */
/* CIF Task (650,600) */
task i:=1;
/* CIF Line (750,700),(750,750) */
/* CIF Task (650,750) */
task 
/* CIF TextExtension (900,750) Right */
/* CIF Line (900,800),(850,800) */
leng:=length(gShips)
/* CIF End TextExtension */
;
/* CIF Line (750,850),(750,900) */
/* CIF Label Invisible */
grst23:
/* CIF Decision (650,900) */
decision 
/* CIF TextExtension (900,900) Right */
/* CIF Line (900,950),(850,950) */
i<=leng
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1000),(750,1150) */
/* CIF TextPosition (775,1025) */
(true):
/* CIF Decision (650,1150) */
decision 
/* CIF TextExtension (900,1150) Right */
/* CIF Line (900,1200),(850,1200) */
shipid=gShips(i)!ShipId 
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1250),(750,1400) */
/* CIF TextPosition (775,1275) */
(false):
/* CIF Task (650,1400) */
task i:=i+1;
/* CIF Line (750,1500),(750,1525),(1500,1525),(1500,875),(750,875),(750,900) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,1200),(450,1200),(450,1600) */
/* CIF TextPosition (425,1225) */
(true):
/* CIF Task (350,1600) */
task 
/* CIF TextExtension (600,1600) Right */
/* CIF Line (600,1650),(550,1650) */
Number:=i
/* CIF End TextExtension */
;
/* CIF Line (450,1700),(450,1800) */
/* CIF Return (400,1800),(100,100) */
return EC_OK;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,950),(250,950),(250,2000) */
/* CIF TextPosition (225,975) */
(false):
/* CIF Task (150,2000) */
task 
/* CIF TextExtension (400,2000) Right */
/* CIF Line (400,2050),(350,2050) */
errname:= EN_SHIP_NOT_FOUND
/* CIF End TextExtension */
;
/* CIF Line (250,2100),(250,2150) */
/* CIF Return (200,2150),(100,100) */
return  EC_FAULT;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst23;
/* CIF End ProcedureDiagram */
endprocedure GetNumberShip;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\GetAmmunition.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure GetAmmunition
;fpar
NumberShip Integer;
returns Boolean;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (550,400) */
start ;
/* CIF Line (650,500),(650,550) */
/* CIF Decision (550,550) */
decision 
/* CIF TextExtension (800,550) Right */
/* CIF Line (800,600),(750,600) */
gShips(NumberShip)!Ammunition(NameWeaponry)>0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (650,650),(650,700) */
/* CIF TextPosition (725,650) */
(true):
/* CIF Task (550,700) */
task 
/* CIF TextExtension (850,700) Right */
/* CIF Line (850,750),(750,750) */
gShips(NumberShip)!Ammunition(NameWeaponry):=
gShips(NumberShip)!Ammunition(NameWeaponry)-1
/* CIF End TextExtension */
;
/* CIF Line (650,800),(650,1000) */
/* CIF Return (600,1000),(100,100) */
return true;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (550,600),(250,600),(250,1000) */
/* CIF TextPosition (225,625) */
(false):
/* CIF Return (200,1000),(100,100) */
return false;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure GetAmmunition;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\GetLenghtShot.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure GetLenghtShot
;fpar
in/out lenght Integer,
number Integer;


/* CIF DefaultSize (200,100) */
/* CIF Text (1300,100) */
dcl
shipname  tNameShip;

/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (500,400) */
start ;
/* CIF Line (600,500),(600,550) */
/* CIF Task (500,550) */
task 
/* CIF TextExtension (750,550) Right */
/* CIF Line (750,600),(700,600) */
shipname:=gShips(number)!TypeShip
/* CIF End TextExtension */
;
/* CIF Line (600,650),(600,700) */
/* CIF Decision (500,700) */
decision 
/* CIF TextExtension (750,700) Right */
/* CIF Line (750,750),(700,750) */
lenght > gShipsCharacter(shipname)!MaxLaunchUnit(NameWeaponry) 
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (600,800),(600,1000) */
/* CIF TextPosition (625,825) */
(true):
/* CIF Task (500,1000) */
task 
/* CIF TextExtension (750,1000) Right */
/* CIF Line (750,1050),(700,1050) */
lenght:=gShipsCharacter(shipname)!MaxLaunchUnit(NameWeaponry)
/* CIF End TextExtension */
;
/* CIF Line (600,1100),(600,1125),(150,1125),(150,1500) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (500,750),(150,750),(150,1500) */
/* CIF TextPosition (125,775) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Return (100,1500),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure GetLenghtShot;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\GetFinishCoordinate.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure GetFinishCoordinate
;fpar
  CurrentCoordinate tCoordinates,
  FinishCoordinate tCoordinates;
returns tCoordinates;
/* CIF DefaultSize (200,100) */
/* CIF Text (1100,150) */
dcl
  Range, cX, cY, fX, fY Integer,
  Coor tCoordinates;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,200) */
start ;
/* CIF Line (800,300),(800,350) */
/* CIF Extendedtask (700,350) */
task {
/* CIF TextExtension (950,350) Right */
/* CIF Line (950,400),(900,400) */
cX := CurrentCoordinate!x;
cY := CurrentCoordinate!y;
fX := FinishCoordinate!x;
fY := FinishCoordinate!y;
/* CIF End TextExtension */
};
/* CIF Line (800,450),(800,550) */
/* CIF Task (700,550) */
task 
/* CIF TextExtension (950,550) Right */
/* CIF Line (950,600),(900,600) */
Range :=  call getDistance(cX, cY, fX, fY)
/* CIF End TextExtension */
;
/* CIF Line (800,650),(800,750) */
/* CIF Decision (700,750) */
decision 
/* CIF TextExtension (950,750) Right */
/* CIF Line (950,800),(900,800) */
Range>gWeaponryCharacter(NameWeaponry)!Range
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,850),(800,875),(1250,875),(1250,1000) */
/* CIF TextPosition (1275,900) */
(false):
/* CIF Task (1150,1000) */
task 
/* CIF TextExtension (1400,1000) Right */
/* CIF Line (1400,1050),(1350,1050) */
Coor:=FinishCoordinate
/* CIF End TextExtension */
;
/* CIF Line (1250,1100),(1250,1500) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,850),(800,875),(150,875),(150,1250) */
/* CIF TextPosition (125,900) */
(true):
/* CIF Extendedtask (50,1250) */
task {
/* CIF TextExtension (350,1250) Right */
/* CIF Line (350,1300),(250,1300) */
Range := call sdl_sqrt((fX-cX)*(fX-cX) + (fY-cY)*(fY-cY));

Coor!x := cX + fix(float(gWeaponryCharacter(NameWeaponry)!Range*(fX - cX))/float(Range));
Coor!y := cY + fix(float(gWeaponryCharacter(NameWeaponry)!Range*(fY - cY))/float(Range));
/* CIF End TextExtension */
};
/* CIF Line (150,1350),(150,1475),(1250,1475),(1250,1500) */
/* CIF End Decision */
enddecision;
/* CIF Return (1200,1500),(100,100) */
return Coor;
/* CIF End ProcedureDiagram */
endprocedure GetFinishCoordinate;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\OrderTurn.spd' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 100 Grid (50,50) AutoNumbered */
procedure OrderTurn
;fpar
Shipid tShipId,
Heading tHeadingChange;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (1000,50) */
dcl
head tHeading,
i Integer,
leng Integer,
number Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (650,400) */
start ;
/* CIF Line (750,500),(750,550) */
/* CIF Extendedtask (650,550) */
task {
/* CIF TextExtension (900,550) Right */
/* CIF Line (900,600),(850,600) */
i:=1;
leng:=length(gShips);
/* CIF End TextExtension */
};
/* CIF Line (750,650),(750,700) */
/* CIF Label Invisible */
grst24:
/* CIF Decision (650,700) */
decision 
/* CIF TextExtension (900,700) Right */
/* CIF Line (900,750),(850,750) */
i<=leng
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,800),(750,825),(150,825),(150,1000) */
/* CIF TextPosition (125,850) */
(false):
/* CIF Task (50,1000) */
task 
/* CIF TextExtension (300,1000) Right */
/* CIF Line (300,1050),(250,1050) */
errname:=EN_SHIP_NOT_FOUND
/* CIF End TextExtension */
;
/* CIF Line (150,1100),(150,1150) */
/* CIF Return (100,1150),(100,100) */
return EC_FAULT;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,800),(750,1200) */
/* CIF TextPosition (775,825) */
(true):
/* CIF Decision (650,1200) */
decision 
/* CIF TextExtension (900,1200) Right */
/* CIF Line (900,1250),(850,1250) */
gShips(i)! ShipId=Shipid
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1300),(750,1325),(250,1325),(250,1450) */
/* CIF TextPosition (325,1275) */
(true):
/* CIF Task (150,1450) */
task 
/* CIF TextExtension (400,1450) Right */
/* CIF Line (400,1500),(350,1500) */
head:=gShips(i)!Heading
/* CIF End TextExtension */
;
/* CIF Line (250,1550),(250,1600) */
/* CIF Extendedtask (150,1600) */
task {
/* CIF TextExtension (400,1600) Right */
/* CIF Line (400,1650),(350,1650) */
number:=h2i(head);
/* CIF End TextExtension */
};
/* CIF Line (250,1700),(250,1725),(700,1725),(700,1750) */
/* CIF Decision (600,1750) */
decision 
/* CIF TextExtension (850,1750) Right */
/* CIF Line (850,1800),(800,1800) */
Heading=LEFT
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,1800),(300,1800),(300,1950) */
/* CIF TextPosition (275,1875) */
(false):
/* CIF Task (200,1950) */
task 
/* CIF TextExtension (450,1950) Right */
/* CIF Line (450,2000),(400,2000) */
number:=number+1
/* CIF End TextExtension */
;
/* CIF Line (300,2050),(300,2075),(800,2075),(800,2150) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,1850),(700,1875),(1000,1875),(1000,1950) */
/* CIF TextPosition (1025,1900) */
(true):
/* CIF Task (900,1950) */
task 
/* CIF TextExtension (1150,1950) Right */
/* CIF Line (1150,2000),(1100,2000) */
number:=number-1
/* CIF End TextExtension */
;
/* CIF Line (1000,2050),(1000,2075),(800,2075),(800,2150) */
/* CIF End Decision */
enddecision;
/* CIF Join (750,2150),(100,100) */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1300),(750,1325),(1300,1325),(1300,1450) */
/* CIF TextPosition (1325,1325) */
(false):
/* CIF Task (1200,1450) */
task i:=i+1;
/* CIF Line (1300,1550),(1300,1575),(1450,1575),(1450,675),(750,675),(750,700) */
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst24;
/* CIF CurrentPage 2 */
/* CIF Label (700,450),(100,100) */
connection L2:
/* CIF Line (750,550),(750,600) */
/* CIF Decision (650,600) */
decision 
/* CIF TextExtension (900,600) Right */
/* CIF Line (900,650),(850,650) */
number<0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,700),(750,725),(300,725),(300,750) */
/* CIF TextPosition (500,675) */
(true):
/* CIF Extendedtask (200,750) */
task {
/* CIF TextExtension (450,750) Right */
/* CIF Line (450,800),(400,800) */
number:=7;
/* CIF End TextExtension */
};
/* CIF Line (300,850),(300,1625),(750,1625),(750,1650) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,700),(750,950) */
/* CIF TextPosition (775,725) */
(false):
/* CIF Decision (650,950) */
decision 
/* CIF TextExtension (900,950) Right */
/* CIF Line (900,1000),(850,1000) */
number>7
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1050),(750,1075),(550,1075),(550,1200) */
/* CIF TextPosition (525,1100) */
(true):
/* CIF Task (450,1200) */
task number:=0;
/* CIF Line (550,1300),(550,1625),(750,1625),(750,1650) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1050),(750,1650) */
/* CIF TextPosition (775,1075) */
(false):
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Task (650,1650) */
task 
/* CIF TextExtension (900,1650) Right */
/* CIF Line (900,1700),(850,1700) */
head:=i2h(number)
/* CIF End TextExtension */
;
/* CIF Line (750,1750),(750,1800) */
/* CIF Extendedtask (650,1800) */
task {
/* CIF TextExtension (900,1800) Right */
/* CIF Line (900,1850),(850,1850) */
gShips(i)!Heading:=head;
/* CIF End TextExtension */
};
/* CIF Line (750,1900),(750,1950) */
/* CIF Task (650,1950) */
task 
/* CIF TextExtension (900,1950) Right */
/* CIF Line (900,2000),(850,2000) */
errname:=EN_OK
/* CIF End TextExtension */
;
/* CIF Line (750,2050),(750,2150) */
/* CIF Return (700,2150),(100,100) */
return EC_OK;
/* CIF End Label */
endconnection L2;
/* CIF End ProcedureDiagram */
endprocedure OrderTurn;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\OrderSpeed.spd' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 100 Grid (50,50) AutoNumbered */
procedure OrderSpeed
;fpar
shipid tShipId,
Acceleration tFactorAcceleration;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (1500,100) */
dcl
speed Integer,
i Integer,
leng Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (850,200) */
start ;
/* CIF Line (950,300),(950,350) */
/* CIF Task (850,350) */
task 
/* CIF TextExtension (1100,350) Right */
/* CIF Line (1100,400),(1050,400) */
i:=1
/* CIF End TextExtension */
;
/* CIF Line (950,450),(950,500) */
/* CIF Task (850,500) */
task 
/* CIF TextExtension (1100,500) Right */
/* CIF Line (1100,550),(1050,550) */
leng:=length(gShips)
/* CIF End TextExtension */
;
/* CIF Line (950,600),(950,750) */
/* CIF Label Invisible */
grst25:
/* CIF Decision (850,750) */
decision i<=leng;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,850),(950,950) */
/* CIF TextPosition (975,875) */
(true):
/* CIF Decision (850,950) */
decision 
/* CIF TextExtension (1100,950) Right */
/* CIF Line (1100,1000),(1050,1000) */
gShips(i)!ShipId=shipid
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,1050),(950,1075),(1300,1075),(1300,1400) */
/* CIF TextPosition (1325,1100) */
(false):
/* CIF Task (1200,1400) */
task i:=i+1;
/* CIF Line (1300,1500),(1300,1525),(1700,1525),(1700,725),(950,725),(950,750) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,1050),(950,1075),(700,1075),(700,1550) */
/* CIF TextPosition (675,1100) */
(true):
/* CIF Task (600,1550) */
task 
/* CIF TextExtension (900,1550) Right */
/* CIF Line (900,1600),(800,1600) */
speed :=gShips(i)!Speed+fix(Acceleration*float( 
gShipsCharacter(gShips(i)!TypeShip)! MaxAcceleration ))

/* CIF End TextExtension */
;
/* CIF Line (700,1650),(700,1700) */
/* CIF Decision (600,1700) */
decision 
/* CIF TextExtension (900,1700) Right */
/* CIF Line (900,1750),(800,1750) */
speed>gShipsCharacter(gShips(i)!TypeShip)! MaxSpeed
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,1800),(700,1850) */
/* CIF TextPosition (725,1825) */
(true):
/* CIF Task (600,1850) */
task 
/* CIF TextExtension (900,1850) Right */
/* CIF Line (900,1900),(800,1900) */
gShips(i)!Speed:=gShipsCharacter(gShips(i)!TypeShip)! MaxSpeed
/* CIF End TextExtension */
;
/* CIF Line (700,1950),(700,2000) */
/* CIF Task (600,2000) */
task 
/* CIF TextExtension (900,2000) Right */
/* CIF Line (900,2050),(800,2050) */
errname:=EN_OK
/* CIF End TextExtension */
;
/* CIF Line (700,2100),(700,2125),(1300,2125),(1300,2150) */
/* CIF Return (1250,2150),(100,100) */
return EC_OK;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,1800),(700,1825),(150,1825),(150,1950) */
/* CIF TextPosition (125,1850) */
(false):
/* CIF Decision (50,1950) */
decision 
/* CIF TextExtension (350,1950) Right */
/* CIF Line (350,2000),(250,2000) */
speed<0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,2050),(150,2100) */
/* CIF TextPosition (175,2075) */
(false):
/* CIF Join (100,2100),(100,100) */
join L3;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (250,2000),(275,2000),(275,2125),(500,2125),(500,2150) */
/* CIF TextPosition (300,2150) */
(true):
/* CIF Join (450,2150),(100,100) */
join L2;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,850),(950,875),(250,875),(250,1400) */
/* CIF TextPosition (225,900) */
(false):
/* CIF Task (150,1400) */
task 
/* CIF TextExtension (450,1400) Right */
/* CIF Line (450,1450),(350,1450) */
errname:= EN_SHIP_NOT_FOUND
/* CIF End TextExtension */
;
/* CIF Line (250,1500),(250,1550) */
/* CIF Return (200,1550),(100,100) */
return EC_FAULT;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst25;
/* CIF CurrentPage 2 */
/* CIF Label (350,450),(100,100) */
connection L2:
/* CIF Line (400,550),(400,600) */
/* CIF Task (300,600) */
task 
/* CIF TextExtension (550,600) Right */
/* CIF Line (550,650),(500,650) */
gShips(i)!Speed:=0
/* CIF End TextExtension */
;
/* CIF Line (400,700),(400,800) */
/* CIF Task (300,800) */
task 
/* CIF TextExtension (600,800) Right */
/* CIF Line (600,850),(500,850) */
errname:=EN_OK
/* CIF End TextExtension */
;
/* CIF Line (400,900),(400,1050) */
/* CIF Return (350,1050),(100,100) */
return EC_OK;
/* CIF End Label */
endconnection L2;
/* CIF Label (1100,450),(100,100) */
connection L3:
/* CIF Line (1150,550),(1150,600) */
/* CIF Task (1050,600) */
task 
/* CIF TextExtension (1300,600) Right */
/* CIF Line (1300,650),(1250,650) */
gShips(i)!Speed:=speed
/* CIF End TextExtension */
;
/* CIF Line (1150,700),(1150,800) */
/* CIF Task (1050,800) */
task 
/* CIF TextExtension (1350,800) Right */
/* CIF Line (1350,850),(1250,850) */
errname:=EN_OK
/* CIF End TextExtension */
;
/* CIF Line (1150,900),(1150,1050) */
/* CIF Return (1100,1050),(100,100) */
return EC_OK;
/* CIF End Label */
endconnection L3;
/* CIF End ProcedureDiagram */
endprocedure OrderSpeed;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\ChangeCoordinate.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure ChangeCoordinate;
/* CIF DefaultSize (200,100) */
/* CIF Text (300,100) */
dcl
  i, j, len, speed Integer,
  St   tStringShipParameters;
/* CIF End Text */
/* CIF Procedure (100,300),(400,100) */
/* CIF TextPosition (175,325) */
procedure ReadHeading referenced;
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,250) */
start ;
/* CIF Line (900,350),(900,400) */
/* CIF Extendedtask (800,400) */
task {
/* CIF TextExtension (1050,400) Right */
/* CIF Line (1050,450),(1000,450) */
len := length( gShips );
i := 1;
/* CIF End TextExtension */
};
/* CIF Line (900,500),(900,550) */
/* CIF Label Invisible */
grst26:
/* CIF Decision (800,550) */
decision i <= len;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,600),(500,600),(500,700) */
/* CIF TextPosition (475,550) */
(false):
/* CIF Return (450,700),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,650),(900,750) */
/* CIF TextPosition (925,675) */
(true):
/* CIF Task (800,750) */
task j := 1;
/* CIF Line (900,850),(900,900) */
/* CIF Decision (800,900) */
decision 
/* CIF TextExtension (1050,900) Right */
/* CIF Line (1050,950),(1000,950) */
gShips(i)!Heading
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,950),(200,950),(200,1050) */
/* CIF TextPosition (325,900) */
(NORTH, EAST, SOUTH, WEST):
/* CIF Task (100,1050) */
task 
/* CIF TextExtension (350,1050) Right */
/* CIF Line (350,1100),(300,1100) */
speed := gShips(i)!Speed
/* CIF End TextExtension */
;
/* CIF Line (200,1150),(200,1175),(900,1175),(900,1200) */
/* CIF Answer */
/* CIF Line (900,1000),(900,1050) */
/* CIF TextPosition (925,1000) */
else:
/* CIF Task (800,1050) */
task 
/* CIF TextExtension (1050,1050) Right */
/* CIF Line (1050,1100),(1000,1100) */
speed := fix( float( gShips(i)!Speed )/sqrt2 )
/* CIF End TextExtension */
;
/* CIF Line (900,1150),(900,1200) */
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Label Invisible */
grst27:
/* CIF Decision (800,1200) */
decision 
/* CIF TextExtension (1050,1200) Right */
/* CIF Line (1050,1250),(1000,1250) */
j <= speed
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,1300),(900,1350),(1775,1350),(1775,375),(1600,375),(1600,400) */
/* CIF TextPosition (925,1300) */
(false):
/* CIF Label Invisible */
grst28:
/* CIF Task (1500,400) */
task i := i + 1;
/* CIF Line (1600,500),(1600,525),(900,525),(900,550) */
/* CIF Join Invisible */
join grst26;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,1250),(600,1250),(600,1400) */
/* CIF TextPosition (575,1275) */
(true):
/* CIF ProcedureCall (500,1400) */
call 
/* CIF TextExtension (750,1400) Right */
/* CIF Line (750,1450),(700,1450) */
ReadHeading( gShips(i) )
/* CIF End TextExtension */
;
/* CIF Line (600,1500),(600,1550) */
/* CIF Decision (500,1550) */
decision 
/* CIF TextExtension (750,1550) Right */
/* CIF Line (750,1600),(700,1600) */
gShips(i)!Resource = 0
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (500,1600),(350,1600),(350,1700) */
/* CIF TextPosition (325,1625) */
(false):
/* CIF Task (250,1700) */
task j := j + 1;
/* CIF Line (350,1800),(350,1825),(200,1825),(200,1175),(900,1175),(900,1200) */
/* CIF Join Invisible */
join grst27;
/* CIF Answer InvisibleBrackets */
/* CIF Line (600,1650),(600,1700) */
/* CIF TextPosition (625,1650) */
(true):
/* CIF Output (500,1700) Right */
output 
/* CIF TextExtension (750,1700) Right */
/* CIF Line (750,1750),(700,1750) */
DestroyShip( gShips(i)!ShipId,
  gShips(i)!StrategyId, gShips(i)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (600,1800),(600,1850) */
/* CIF Extendedtask (500,1850) */
task {
/* CIF TextExtension (750,1850) Right */
/* CIF Line (750,1900),(700,1900) */
St := substring( gShips, i+1, len-i );
gShips := substring( gShips, 1, i-1 );
gShips := gShips // St;
len := len - 1;
/* CIF End TextExtension */
};
/* CIF Line (600,1950),(600,2050),(1775,2050),(1775,375),(1600,375),(1600,400) */
/* CIF Join Invisible */
join grst28;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure ChangeCoordinate;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\ReadHeading.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure ReadHeading
;fpar
  in/out ship tShipParameters;
/* CIF DefaultSize (200,100) */
/* CIF Text (50,250) */
dcl
  CoorXY tCoordinates,
  Deep, PointDeep, PointDeep2 Integer,
  Res Integer;
/* CIF End Text */
/* CIF Procedure (50,450),(400,100) */
/* CIF TextPosition (150,475) */
procedure StepCoor referenced;
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,150) */
start ;
/* CIF Line (900,250),(900,300) */
/* CIF ProcedureCall (800,300) */
call StepCoor;
/* CIF Line (900,400),(900,450) */
/* CIF Extendedtask (800,450) */
task {
/* CIF TextExtension (1050,450) Right */
/* CIF Line (1050,500),(1000,500) */
Deep := d2i( gShipsCharacter( ship!TypeShip )!MaxDeep );
PointDeep := call getDeepXY( CoorXY!x, CoorXY!y );
PointDeep2 := call getDeepXY(
  ship!Coordinates!x, ship!Coordinates!y );
/* CIF End TextExtension */
};
/* CIF Line (900,550),(900,650) */
/* CIF Decision (800,650) */
decision 
/* CIF TextExtension (1050,650) Right */
/* CIF Line (1050,700),(1000,700) */
( Deep <= PointDeep ) AND ( PointDeep2 /= d2i( LAND ) )
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,700),(150,700),(150,750) */
/* CIF TextPosition (425,650) */
(true):
/* CIF Extendedtask (50,750) */
task {
/* CIF TextExtension (300,750) Right */
/* CIF Line (300,800),(250,800) */
ship!Coordinates!y := CoorXY!y; 
ship!Coordinates!x := CoorXY!x;
/* CIF End TextExtension */
};
/* CIF Line (150,850),(150,900) */
/* CIF Return (100,900),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,750),(900,1000) */
/* CIF TextPosition (925,775) */
(false):
/* CIF Decision (800,1000) */
decision 
/* CIF TextExtension (1050,1000) Right */
/* CIF Line (1050,1050),(1000,1050) */
( Deep > PointDeep2 ) OR ( PointDeep2 = d2i( LAND ) )
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,1050),(150,1050),(150,1150) */
/* CIF TextPosition (425,1000) */
(true):
/* CIF Extendedtask (50,1150) */
task {
/* CIF TextExtension (300,1150) Right */
/* CIF Line (300,1200),(250,1200) */
ship!Speed := 0;
speed := 0;
/* CIF End TextExtension */
};
/* CIF Line (150,1250),(150,1925),(900,1925),(900,1950) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,1100),(900,1150) */
/* CIF TextPosition (925,1100) */
(false):
/* CIF Task (800,1150) */
task 
/* CIF TextExtension (1050,1150) Right */
/* CIF Line (1050,1200),(1000,1200) */
Res := ship!Resource -
  gShipsCharacter( ship!TypeShip )!MaxResource/
  gShipsCharacter( ship!TypeShip )!MaxSpeed*
  ship!Speed/2
/* CIF End TextExtension */
;
/* CIF Line (900,1250),(900,1350) */
/* CIF Decision (800,1350) */
decision 
/* CIF TextExtension (1050,1350) Right */
/* CIF Line (1050,1400),(1000,1400) */
Res < 0
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,1400),(350,1400),(350,1500) */
/* CIF TextPosition (325,1425) */
(true):
/* CIF Task (250,1500) */
task 
/* CIF TextExtension (500,1500) Right */
/* CIF Line (500,1550),(450,1550) */
ship!Resource := 0
/* CIF End TextExtension */
;
/* CIF Line (350,1600),(350,1625),(900,1625),(900,1650) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,1450),(900,1500) */
/* CIF TextPosition (925,1450) */
(false):
/* CIF Task (800,1500) */
task 
/* CIF TextExtension (1050,1500) Right */
/* CIF Line (1050,1550),(1000,1550) */
ship!Resource := Res
/* CIF End TextExtension */
;
/* CIF Line (900,1600),(900,1650) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (800,1650) */
task {
/* CIF TextExtension (1050,1650) Right */
/* CIF Line (1050,1700),(1000,1700) */
ship!Speed := 0;
speed := 0;
/* CIF End TextExtension */
};
/* CIF Line (900,1750),(900,1800) */
/* CIF Extendedtask (800,1800) */
task {
/* CIF TextExtension (1050,1800) Right */
/* CIF Line (1050,1850),(1000,1850) */
ship!Coordinates!y := CoorXY!y; 
ship!Coordinates!x := CoorXY!x;
/* CIF End TextExtension */
};
/* CIF Line (900,1900),(900,1950) */
/* CIF End Decision */
enddecision;
/* CIF Return (850,1950),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure ReadHeading;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\StepCoor.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure StepCoor;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (800,100) */
start ;
/* CIF Line (900,200),(900,300) */
/* CIF Task (800,300) */
task 
/* CIF TextExtension (1050,300) Right */
/* CIF Line (1050,350),(1000,350) */
CoorXY := ship!Coordinates
/* CIF End TextExtension */
;
/* CIF Line (900,400),(900,450) */
/* CIF Decision (800,450) */
decision 
/* CIF TextExtension (1050,450) Right */
/* CIF Line (1050,500),(1000,500) */
ship!Heading
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,550),(900,650),(200,650),(200,700) */
/* CIF TextPosition (475,600) */
(NORTH):
/* CIF Decision (100,700) */
decision 
/* CIF TextExtension (350,700) Right */
/* CIF Line (350,750),(300,750) */
CoorXY!y = MaxYCoordinate
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (200,800),(200,900) */
/* CIF TextPosition (225,825) */
(false):
/* CIF Task (100,900) */
task 
/* CIF TextExtension (350,900) Right */
/* CIF Line (350,950),(300,950) */
CoorXY!y := CoorXY!y + 1
/* CIF End TextExtension */
;
/* CIF Line (200,1000),(200,1050) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (100,750),(75,750),(75,1025),(200,1025),(200,1050) */
/* CIF TextPosition (50,700) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (150,1050),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,550),(900,650),(1250,650),(1250,700) */
/* CIF TextPosition (1025,600) */
(SOUTH):
/* CIF Decision (1150,700) */
decision 
/* CIF TextExtension (1400,700) Right */
/* CIF Line (1400,750),(1350,750) */
CoorXY!y = 0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1250,800),(1250,900) */
/* CIF TextPosition (1275,825) */
(false):
/* CIF Task (1150,900) */
task 
/* CIF TextExtension (1400,900) Right */
/* CIF Line (1400,950),(1350,950) */
CoorXY!y := CoorXY!y - 1
/* CIF End TextExtension */
;
/* CIF Line (1250,1000),(1250,1050) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1150,750),(1125,750),(1125,1025),(1250,1025),(1250,1050) */
/* CIF TextPosition (1100,700) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (1200,1050),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,550),(900,1225),(200,1225),(200,1250) */
/* CIF TextPosition (450,1175) */
(WEST):
/* CIF Decision (100,1250) */
decision 
/* CIF TextExtension (350,1250) Right */
/* CIF Line (350,1300),(300,1300) */
CoorXY!x = 0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (200,1350),(200,1450) */
/* CIF TextPosition (225,1375) */
(false):
/* CIF Task (100,1450) */
task 
/* CIF TextExtension (350,1450) Right */
/* CIF Line (350,1500),(300,1500) */
CoorXY!x := CoorXY!x - 1
/* CIF End TextExtension */
;
/* CIF Line (200,1550),(200,1600) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (100,1300),(75,1300),(75,1575),(200,1575),(200,1600) */
/* CIF TextPosition (50,1250) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (150,1600),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,550),(900,1225),(1250,1225),(1250,1250) */
/* CIF TextPosition (1025,1175) */
(EAST):
/* CIF Decision (1150,1250) */
decision 
/* CIF TextExtension (1400,1250) Right */
/* CIF Line (1400,1300),(1350,1300) */
CoorXY!x = MaxXCoordinate
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1250,1350),(1250,1450) */
/* CIF TextPosition (1275,1375) */
(false):
/* CIF Task (1150,1450) */
task 
/* CIF TextExtension (1400,1450) Right */
/* CIF Line (1400,1500),(1350,1500) */
CoorXY!x := CoorXY!x + 1
/* CIF End TextExtension */
;
/* CIF Line (1250,1550),(1250,1600) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1150,1300),(1125,1300),(1125,1575),(1250,1575),(1250,1600) */
/* CIF TextPosition (1100,1250) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (1200,1600),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,550),(900,1825),(200,1825),(200,1850) */
/* CIF TextPosition (325,1775) */
( SOUTH_WEST    ):
/* CIF Join (150,1850),(100,100) */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,550),(900,1825),(1250,1825),(1250,1850) */
/* CIF TextPosition (1000,1775) */
( NORTH_EAST):
/* CIF Join (1200,1850),(100,100) */
join L1;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,550),(900,2075),(200,2075),(200,2100) */
/* CIF TextPosition (525,2025) */
( SOUTH_EAST):
/* CIF Join (150,2100),(100,100) */
join L4;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,550),(900,2075),(1250,2075),(1250,2100) */
/* CIF TextPosition (1000,2025) */
( NORTH_WEST):
/* CIF Join (1200,2100),(100,100) */
join L3;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 2 */
/* CIF Label (150,300),(100,100) */
connection L1:
/* CIF Line (200,400),(200,450) */
/* CIF Decision (100,450) */
decision 
/* CIF TextExtension (350,450) Right */
/* CIF Line (350,500),(300,500) */
( CoorXY!x = MaxXCoordinate ) OR
  ( CoorXY!y = MaxYCoordinate )
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (200,550),(200,650) */
/* CIF TextPosition (225,575) */
(false):
/* CIF Extendedtask (100,650) */
task {
/* CIF TextExtension (350,650) Right */
/* CIF Line (350,700),(300,700) */
CoorXY!x := CoorXY!x + 1;
CoorXY!y := CoorXY!y + 1;
/* CIF End TextExtension */
};
/* CIF Line (200,750),(200,800) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (100,500),(75,500),(75,775),(200,775),(200,800) */
/* CIF TextPosition (50,450) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (150,800),(100,100) */
return ;
/* CIF End Label */
endconnection L1;
/* CIF Label (1100,300),(100,100) */
connection L2:
/* CIF Line (1150,400),(1150,450) */
/* CIF Decision (1050,450) */
decision 
/* CIF TextExtension (1300,450) Right */
/* CIF Line (1300,500),(1250,500) */
( CoorXY!x = 0 ) OR
  ( CoorXY!y = 0 )
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1150,550),(1150,650) */
/* CIF TextPosition (1175,575) */
(false):
/* CIF Extendedtask (1050,650) */
task {
/* CIF TextExtension (1300,650) Right */
/* CIF Line (1300,700),(1250,700) */
CoorXY!x := CoorXY!x - 1;
CoorXY!y := CoorXY!y - 1;
/* CIF End TextExtension */
};
/* CIF Line (1150,750),(1150,800) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1050,500),(1025,500),(1025,775),(1150,775),(1150,800) */
/* CIF TextPosition (1000,450) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (1100,800),(100,100) */
return ;
/* CIF End Label */
endconnection L2;
/* CIF Label (150,1050),(100,100) */
connection L3:
/* CIF Line (200,1150),(200,1200) */
/* CIF Decision (100,1200) */
decision 
/* CIF TextExtension (350,1200) Right */
/* CIF Line (350,1250),(300,1250) */
( CoorXY!x = 0 ) OR
  ( CoorXY!y = MaxYCoordinate )
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (200,1300),(200,1400) */
/* CIF TextPosition (225,1325) */
(false):
/* CIF Extendedtask (100,1400) */
task {
/* CIF TextExtension (350,1400) Right */
/* CIF Line (350,1450),(300,1450) */
CoorXY!x := CoorXY!x - 1;
CoorXY!y := CoorXY!y + 1;
/* CIF End TextExtension */
};
/* CIF Line (200,1500),(200,1550) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (100,1250),(75,1250),(75,1525),(200,1525),(200,1550) */
/* CIF TextPosition (100,1200) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (150,1550),(100,100) */
return ;
/* CIF End Label */
endconnection L3;
/* CIF Label (1100,1050),(100,100) */
connection L4:
/* CIF Line (1150,1150),(1150,1200) */
/* CIF Decision (1050,1200) */
decision 
/* CIF TextExtension (1300,1200) Right */
/* CIF Line (1300,1250),(1250,1250) */
( CoorXY!x = MaxXCoordinate ) OR
  ( CoorXY!y = 0 )
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1150,1300),(1150,1400) */
/* CIF TextPosition (1175,1325) */
(false):
/* CIF Extendedtask (1050,1400) */
task {
/* CIF TextExtension (1300,1400) Right */
/* CIF Line (1300,1450),(1250,1450) */
CoorXY!x := CoorXY!x + 1;
CoorXY!y := CoorXY!y - 1;
/* CIF End TextExtension */
};
/* CIF Line (1150,1500),(1150,1550) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1050,1250),(1025,1250),(1025,1525),(1150,1525),(1150,1550) */
/* CIF TextPosition (1050,1200) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (1100,1550),(100,100) */
return ;
/* CIF End Label */
endconnection L4;
/* CIF End ProcedureDiagram */
endprocedure StepCoor;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\UpdateShots.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure UpdateShots;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (50,250) */
dcl
  St  tStringShotParameters,
  St1 tStringShipParameters,
  distance Integer,
  i, j, Res Integer,
  lenshot, lenship Integer;
/* CIF End Text */
/* CIF Procedure (300,100),(400,100) */
/* CIF TextPosition (400,125) */
procedure SpeedCoor referenced;
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (900,200) */
start ;
/* CIF Line (1000,300),(1000,350) */
/* CIF Extendedtask (900,350) */
task {
/* CIF TextExtension (1150,350) Right */
/* CIF Line (1150,400),(1100,400) */
i := 1;
Res := 0;
lenshot := length( gShots );
/* CIF End TextExtension */
};
/* CIF Line (1000,450),(1000,550) */
/* CIF Label (1650,350),(100,100) */
L2:
/* CIF Line (1700,450),(1700,525),(1000,525),(1000,550) */
/* CIF Decision (900,550) */
decision 
/* CIF TextExtension (1150,550) Right */
/* CIF Line (1150,600),(1100,600) */
i <= lenshot
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,600),(450,600),(450,650) */
/* CIF TextPosition (850,550) */
(false):
/* CIF Return (400,650),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,650),(1000,750) */
/* CIF TextPosition (1025,675) */
(true):
/* CIF Decision (900,750) */
decision 
/* CIF TextExtension (1150,750) Right */
/* CIF Line (1150,800),(1100,800) */
gShots(i)!CurrentCoordinates =
  gShots( i )!FinishCoordinates
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,800),(200,800),(200,900) */
/* CIF TextPosition (175,825) */
(true):
/* CIF Extendedtask (100,900) */
task {
/* CIF TextExtension (350,900) Right */
/* CIF Line (350,950),(300,950) */
St := substring( gShots, 1, i-1 );
gShots := St //
  substring( gShots, i+1, lenshot-i);
lenshot := length( gShots );
/* CIF End TextExtension */
};
/* CIF Line (200,1000),(200,1025),(50,1025),(50,525),(1000,525),(1000,550) */
/* CIF Join Invisible */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,850),(1000,900) */
/* CIF TextPosition (1025,850) */
(false):
/* CIF Task (900,900) */
task 
/* CIF TextExtension (1150,900) Right */
/* CIF Line (1150,950),(1100,950) */
distance := call getDistance(
  gShots(i)!CurrentCoordinates!x,
  gShots(i)!CurrentCoordinates!y,
  gShots(i)!FinishCoordinates!x,
  gShots(i)!FinishCoordinates!y )
/* CIF End TextExtension */
;
/* CIF Line (1000,1000),(1000,1150) */
/* CIF Decision (900,1150) */
decision 
/* CIF TextExtension (1150,1150) Right */
/* CIF Line (1150,1200),(1100,1200) */
gWeaponryCharacter( gShots(i)!TypeWeaponry )!
  Speed >= distance
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,1200),(450,1200),(450,1300) */
/* CIF TextPosition (850,1150) */
(false):
/* CIF ProcedureCall (350,1300) */
call SpeedCoor(i);
/* CIF Line (450,1400),(450,1450) */
/* CIF Task (350,1450) */
task i := i + 1;
/* CIF Line (450,1550),(450,1575),(50,1575),(50,525),(1000,525),(1000,550) */
/* CIF Join Invisible */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,1250),(1000,1300) */
/* CIF TextPosition (1025,1250) */
(true):
/* CIF Task (900,1300) */
task 
/* CIF TextExtension (1150,1300) Right */
/* CIF Line (1150,1350),(1100,1350) */
lenship := length( gShips )
/* CIF End TextExtension */
;
/* CIF Line (1000,1400),(1000,1450) */
/* CIF Task (900,1450) */
task j := 1;
/* CIF Line (1000,1550),(1000,1600) */
/* CIF Label Invisible */
grst29:
/* CIF Decision (900,1600) */
decision 
/* CIF TextExtension (1150,1600) Right */
/* CIF Line (1150,1650),(1100,1650) */
j <= lenship
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,1700),(1000,1800) */
/* CIF TextPosition (1025,1725) */
(true):
/* CIF Decision (900,1800) */
decision 
/* CIF TextExtension (1150,1800) Right */
/* CIF Line (1150,1850),(1100,1850) */
gShips( j )!Coordinates =
  gShots( i )!FinishCoordinates
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,1850),(700,1850),(700,2000) */
/* CIF TextPosition (675,1875) */
(true):
/* CIF Join (650,2000),(100,100) */
join L1;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,1900),(1000,2000) */
/* CIF TextPosition (1025,1925) */
(false):
/* CIF Task (900,2000) */
task j := j + 1;
/* CIF Line (1000,2100),(1000,2125),(1600,2125),(1600,1575),(1000,1575),(1000,1600) */
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,1650),(450,1650),(450,2000) */
/* CIF TextPosition (425,1675) */
(false):
/* CIF Join (400,2000),(100,100) */
join L3;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst29;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 2 */
/* CIF Label (1050,100),(100,100) */
connection L1:
/* CIF Line (1100,200),(1100,250) */
/* CIF Decision (1000,250) */
decision 
/* CIF TextExtension (1250,250) Right */
/* CIF Line (1250,300),(1200,300) */
gShots( i )!TypeWeaponry = REPAIR
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1000,300),(250,300),(250,400) */
/* CIF TextPosition (625,250) */
(true):
/* CIF Task (150,400) */
task 
/* CIF TextExtension (400,400) Right */
/* CIF Line (400,450),(350,450) */
Res := gShips( j )!Resource +
  gWeaponryCharacter( gShots(i)!
  TypeWeaponry )!Power
/* CIF End TextExtension */
;
/* CIF Line (250,500),(250,600) */
/* CIF Decision (150,600) */
decision 
/* CIF TextExtension (400,600) Right */
/* CIF Line (400,650),(350,650) */
Res > gShipsCharacter(
  gShips( j )!TypeShip )!
  MaxResource
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,700),(250,800) */
/* CIF TextPosition (275,725) */
(true):
/* CIF Task (150,800) */
task 
/* CIF TextExtension (400,800) Right */
/* CIF Line (400,850),(350,850) */
Res := gShipsCharacter(
  gShips( j )!
  TypeShip )!MaxResource
/* CIF End TextExtension */
;
/* CIF Line (250,900),(250,975),(1100,975),(1100,1000) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (150,650),(75,650),(75,975),(1100,975),(1100,1000) */
/* CIF TextPosition (100,600) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1100,350),(1100,400) */
/* CIF TextPosition (1150,350) */
(false):
/* CIF Task (1000,400) */
task 
/* CIF TextExtension (1250,400) Right */
/* CIF Line (1250,450),(1200,450) */
Res := gShips(j)! Resource -
  gWeaponryCharacter( gShots(i)!
  TypeWeaponry )!Power

/* CIF End TextExtension */
;
/* CIF Line (1100,500),(1100,600) */
/* CIF Decision (1000,600) */
decision 
/* CIF TextExtension (1250,600) Right */
/* CIF Line (1250,650),(1200,650) */
Res < 0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1100,700),(1100,800) */
/* CIF TextPosition (1125,725) */
(true):
/* CIF Task (1000,800) */
task Res := 0;
/* CIF Line (1100,900),(1100,1000) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1000,650),(900,650),(900,975),(1100,975),(1100,1000) */
/* CIF TextPosition (925,600) */
(false):
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Decision (1000,1000) */
decision 
/* CIF TextExtension (1250,1000) Right */
/* CIF Line (1250,1050),(1200,1050) */
Res = 0
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1000,1050),(400,1050),(400,1200) */
/* CIF TextPosition (375,1075) */
(false):
/* CIF Task (300,1200) */
task 
/* CIF TextExtension (550,1200) Right */
/* CIF Line (550,1250),(500,1250) */
gShips( j )!Resource := Res
/* CIF End TextExtension */
;
/* CIF Line (400,1300),(400,1475),(1100,1475),(1100,1500) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1100,1100),(1100,1200) */
/* CIF TextPosition (1125,1125) */
(true):
/* CIF Output (1000,1200) Right */
output 
/* CIF TextExtension (1250,1200) Right */
/* CIF Line (1250,1250),(1200,1250) */
DestroyShip( gShips( j )!ShipId,
  gShips( j )!StrategyId, gShips( j )!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (1100,1300),(1100,1350) */
/* CIF Extendedtask (1000,1350) */
task {
/* CIF TextExtension (1250,1350) Right */
/* CIF Line (1250,1400),(1200,1400) */
St1 := substring( gShips, 1, j-1 );
gShips := St1 //
  substring( gShips, j+1, lenship-j );
/* CIF End TextExtension */
};
/* CIF Line (1100,1450),(1100,1500) */
/* CIF End Decision */
enddecision;
/* CIF Label (100,1200),(100,100) */
L3:
/* CIF Line (150,1300),(150,1475),(1100,1475),(1100,1500) */
/* CIF Extendedtask (1000,1500) */
task {
/* CIF TextExtension (1250,1500) Right */
/* CIF Line (1250,1550),(1200,1550) */
gShots(i)!CurrentCoordinates :=
  gShots( i )!FinishCoordinates;
i := i + 1;
/* CIF End TextExtension */
};
/* CIF Line (1100,1600),(1100,1700) */
/* CIF Join (1050,1700),(100,100) */
join L2;
/* CIF End Label */
endconnection L1;
/* CIF End ProcedureDiagram */
endprocedure UpdateShots;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SpeedCoor.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SpeedCoor
;fpar
  shotNo Integer; 
/* CIF DefaultSize (200,100) */
/* CIF Text (50,250) */
dcl
  Dis Integer,
  sqr Integer,
  cX,fX,cY,fY Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (450,250) */
start ;
/* CIF Line (550,350),(550,400) */
/* CIF Extendedtask (450,400) */
task {
/* CIF TextExtension (700,400) Right */
/* CIF Line (700,450),(650,450) */
cX := gShots( shotNo )!CurrentCoordinates!x;
fX := gShots( shotNo )!FinishCoordinates!x;
cY := gShots( shotNo )!CurrentCoordinates!y;
fY := gShots( shotNo )!FinishCoordinates!y;

Dis := gWeaponryCharacter( gShots( shotNo )!TypeWeaponry )!Speed;
sqr := call sdl_sqrt( ( fX-cX )*( fX-cX ) + ( fY-cY )*( fY-cY ) );
cX := cX + fix( float(Dis*( fX-cX ))/float( sqr ) );
cY := cY + fix( float(Dis*( fY-cY ))/float( sqr ) );

gShots( shotNo )!CurrentCoordinates!x := cX;
gShots( shotNo )!CurrentCoordinates!y := cY;
/* CIF End TextExtension */
};
/* CIF Line (550,500),(550,900) */
/* CIF Return (500,900),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure SpeedCoor;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\CollisionShip.spd' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 100 Grid (50,50) AutoNumbered */
procedure CollisionShip;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (1450,100) */
dcl
St tStringShipParameters,
lengship Integer,
b Boolean,
i Integer,
j Integer;
/* CIF End Text */
/* CIF Procedure (50,350),(350,100) */
/* CIF TextPosition (131,375) */
procedure Collision referenced;
/* CIF Procedure (50,500),(350,100) */
/* CIF TextPosition (125,525) */
procedure Heading referenced;
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,150) */
start ;
/* CIF Line (800,250),(800,450) */
/* CIF Label Invisible */
grst30:
/* CIF Extendedtask (700,450) */
task {
/* CIF TextExtension (950,450) Right */
/* CIF Line (950,500),(900,500) */
i:=1;
j:=1;
b:=true;
/* CIF End TextExtension */
};
/* CIF Line (800,550),(800,600) */
/* CIF Task (700,600) */
task 
/* CIF TextExtension (950,600) Right */
/* CIF Line (950,650),(900,650) */
lengship:=length(gShips)
/* CIF End TextExtension */
;
/* CIF Line (800,700),(800,750) */
/* CIF Label (500,500),(100,100) */
L4:
/* CIF Line (550,600),(550,725),(800,725),(800,750) */
/* CIF Decision (700,750) */
decision 
/* CIF TextExtension (450,750) Right */
/* CIF Line (450,800),(425,800),(425,875),(675,875),(675,800),(700,800) */
i<=lengship-1
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,800),(1300,800),(1300,850) */
/* CIF TextPosition (950,750) */
(false):
/* CIF Decision (1200,850) */
decision 
/* CIF TextExtension (1500,850) Right */
/* CIF Line (1500,900),(1400,900) */
b=true
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1200,900),(1175,900),(1175,825),(1750,825),(1750,425),(800,425),
    (800,450) */
/* CIF TextPosition (1525,750) */
(false):
/* CIF Answer InvisibleBrackets */
/* CIF Line (1300,950),(1300,1000) */
/* CIF TextPosition (1325,975) */
(true):
/* CIF Return (1250,1000),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst30;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,850),(800,1000) */
/* CIF TextPosition (825,875) */
(true):
/* CIF Extendedtask (700,1000) */
task {
/* CIF TextExtension (950,1000) Right */
/* CIF Line (950,1050),(900,1050) */
j:=i+1;
/* CIF End TextExtension */
};
/* CIF Line (800,1100),(800,1150) */
/* CIF Label (450,1050),(100,100) */
L3:
/* CIF Line (500,1150),(500,1175),(625,1175),(625,1125),(800,1125),(800,1150) */
/* CIF Decision (700,1150) */
decision 
/* CIF TextExtension (950,1150) Right */
/* CIF Line (950,1200),(900,1200) */
j<=lengship
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1250),(800,1275),(300,1275),(300,1350) */
/* CIF TextPosition (425,1200) */
(false):
/* CIF Task (200,1350) */
task 
/* CIF TextExtension (450,1350) Right */
/* CIF Line (450,1400),(400,1400) */
i:=i+1
/* CIF End TextExtension */
;
/* CIF Line (300,1450),(300,1475),(75,1475),(75,725),(800,725),(800,750) */
/* CIF Join Invisible */
join L4;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1250),(800,1275),(1350,1275),(1350,1350) */
/* CIF TextPosition (1375,1300) */
(true):
/* CIF Decision (1250,1350) */
decision 
/* CIF TextExtension (1500,1350) Right */
/* CIF Line (1500,1400),(1450,1400) */
gShips(i)!Coordinates=
gShips(j)!Coordinates
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1350,1450),(1350,1475),(1450,1475),(1450,1600) */
/* CIF TextPosition (1475,1500) */
(false):
/* CIF Task (1350,1600) */
task 
/* CIF TextExtension (1600,1600) Right */
/* CIF Line (1600,1650),(1550,1650) */
j:=j+1
/* CIF End TextExtension */
;
/* CIF Line (1450,1700),(1450,1725),(1850,1725),(1850,1125),(800,1125),(800,1150) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1350,1450),(1350,1475),(550,1475),(550,1750) */
/* CIF TextPosition (525,1500) */
(true):
/* CIF Task (450,1750) */
task 
/* CIF TextExtension (700,1750) Right */
/* CIF Line (700,1800),(650,1800) */
b:=false
/* CIF End TextExtension */
;
/* CIF Line (550,1850),(550,1900) */
/* CIF ProcedureCall (450,1900) */
call 
/* CIF TextExtension (700,1900) Right */
/* CIF Line (700,1950),(650,1950) */
Collision(i,j)
/* CIF End TextExtension */
;
/* CIF Line (550,2000),(550,2100) */
/* CIF Join (500,2100),(100,100) */
join L1;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join L3;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 2 */
/* CIF Label (200,250),(100,100) */
connection L1:
/* CIF Line (250,350),(250,400) */
/* CIF Decision (150,400) */
decision 
/* CIF TextExtension (400,400) Right */
/* CIF Line (400,450),(350,450) */
gShips(i)!Resource=0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,500),(250,525),(375,525),(375,375),(1050,375),(1050,400) */
/* CIF TextPosition (400,550) */
(true):
/* CIF Output (950,400) Right */
output 
/* CIF TextExtension (1200,400) Right */
/* CIF Line (1200,450),(1150,450) */
 DestroyShip(gShips(i)!ShipId,
gShips(i)!StrategyId,gShips(i)!TypeShip)
/* CIF End TextExtension */
;
/* CIF Line (1050,500),(1050,550) */
/* CIF Task (950,550) */
task 
/* CIF TextExtension (1200,550) Right */
/* CIF Line (1200,600),(1150,600) */
St:=substring(gShips,1,i-1)
/* CIF End TextExtension */
;
/* CIF Line (1050,650),(1050,700) */
/* CIF Task (950,700) */
task 
/* CIF TextExtension (1200,700) Right */
/* CIF Line (1200,750),(1150,750) */
gShips:=St//substring(gShips,i+1,
lengship-i)
/* CIF End TextExtension */
;
/* CIF Line (1050,800),(1050,850) */
/* CIF Task (950,850) */
task 
/* CIF TextExtension (1200,850) Right */
/* CIF Line (1200,900),(1150,900) */
lengship:=lengship-1
/* CIF End TextExtension */
;
/* CIF Line (1050,950),(1050,1000) */
/* CIF Join (1000,1000),(100,100) */
join L4;
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,500),(250,650) */
/* CIF TextPosition (275,525) */
(false):
/* CIF ProcedureCall (150,650) */
call 
/* CIF TextExtension (550,650) Right */
/* CIF Line (550,700),(350,700) */
Heading(i)
/* CIF End TextExtension */
;
/* CIF Line (250,750),(250,1300) */
/* CIF Decision (150,1300) */
decision 
/* CIF TextExtension (400,1300) Right */
/* CIF Line (400,1350),(350,1350) */
gShips(j)!Resource=0
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (350,1350),(375,1350),(375,1425),(750,1425),(750,1375),(1050,1375),
    (1050,1400) */
/* CIF TextPosition (400,1450) */
(true):
/* CIF Output (950,1400) Right */
output 
/* CIF TextExtension (1200,1400) Right */
/* CIF Line (1200,1450),(1150,1450) */
 DestroyShip(gShips(j)!ShipId,
gShips(j)!StrategyId,gShips(j)!TypeShip)
/* CIF End TextExtension */
;
/* CIF Line (1050,1500),(1050,1550) */
/* CIF Task (950,1550) */
task 
/* CIF TextExtension (1200,1550) Right */
/* CIF Line (1200,1600),(1150,1600) */
St:=substring(gShips,1,j-1)
/* CIF End TextExtension */
;
/* CIF Line (1050,1650),(1050,1700) */
/* CIF Task (950,1700) */
task 
/* CIF TextExtension (1200,1700) Right */
/* CIF Line (1200,1750),(1150,1750) */
gShips:=St//substring(gShips,j+1,
lengship-j)
/* CIF End TextExtension */
;
/* CIF Line (1050,1800),(1050,1850) */
/* CIF Task (950,1850) */
task 
/* CIF TextExtension (1200,1850) Right */
/* CIF Line (1200,1900),(1150,1900) */
lengship:=lengship-1
/* CIF End TextExtension */
;
/* CIF Line (1050,1950),(1050,2000) */
/* CIF Task (950,2000) */
task 
/* CIF TextExtension (1200,2000) Right */
/* CIF Line (1200,2050),(1150,2050) */
j:=j-1
/* CIF End TextExtension */
;
/* CIF Line (1050,2100),(1050,2125),(250,2125),(250,2150) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,1400),(250,1600) */
/* CIF TextPosition (275,1425) */
(false):
/* CIF ProcedureCall (150,1600) */
call 
/* CIF TextExtension (400,1600) Right */
/* CIF Line (400,1650),(350,1650) */
Heading(j)
/* CIF End TextExtension */
;
/* CIF Line (250,1700),(250,2150) */
/* CIF End Decision */
enddecision;
/* CIF Join (200,2150),(100,100) */
join L2;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection L1;
/* CIF CurrentPage 3 */
/* CIF Label (650,200),(100,100) */
connection L2:
/* CIF Line (700,300),(700,700) */
/* CIF Extendedtask (600,700) */
task {
/* CIF TextExtension (850,700) Right */
/* CIF Line (850,750),(800,750) */
j:=j+1;
/* CIF End TextExtension */
};
/* CIF Line (700,800),(700,850) */
/* CIF Join (650,850),(100,100) */
join L3;
/* CIF End Label */
endconnection L2;
/* CIF End ProcedureDiagram */
endprocedure CollisionShip;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 4 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\Collision.spd' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 4 Scale 100 Grid (50,50) AutoNumbered */
procedure Collision
;fpar
i Integer,
j Integer;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (1550,450) */
dcl 
h1 Integer,
h2 Integer,
Res Integer;
/* CIF End Text */
/* CIF Text (50,1100) */
synonym
diff0 Integer =0,
diff1 Integer =1,
diff2 Integer =2,
diff3 Integer =3,
diff4 Integer =4,
diff5 Integer =5,
diff6 Integer =6,
diff7 Integer =7;
/* CIF End Text */
/* CIF Procedure (50,400),(400,100) */
/* CIF TextPosition (150,425) */
procedure abs referenced;
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,200) */
start ;
/* CIF Line (800,300),(800,350) */
/* CIF Task (700,350) */
task 
/* CIF TextExtension (950,350) Right */
/* CIF Line (950,400),(900,400) */
 h1:=h2i(gShips(i)!Heading)
/* CIF End TextExtension */
;
/* CIF Line (800,450),(800,500) */
/* CIF Task (700,500) */
task 
/* CIF TextExtension (950,500) Right */
/* CIF Line (950,550),(900,550) */
 h2:=h2i(gShips(j)!Heading)

/* CIF End TextExtension */
;
/* CIF Line (800,600),(800,650) */
/* CIF Decision (700,650) */
decision 
/* CIF TextExtension (950,650) Right */
/* CIF Line (950,700),(900,700) */
call abs(h1-h2)
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,750),(800,775),(150,775),(150,850) */
/* CIF TextPosition (175,725) */
(=diff0):
/* CIF Join (100,850),(100,100) */
join L5;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,700),(925,700),(925,825),(1100,825),(1100,850) */
/* CIF TextPosition (1050,775) */
(=diff1,=diff7):
/* CIF Task (1000,850) */
task 
/* CIF TextExtension (1250,850) Right */
/* CIF Line (1250,900),(1200,900) */
Res:=gShips(i)! Resource-(call
abs(fix(float(gShips(i)!Speed-gShips(j)!Speed)*(sqrt2/
2))))*ns2i(gShips(j)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (1100,950),(1100,1000) */
/* CIF Decision (1000,1000) */
decision 
/* CIF TextExtension (1250,1000) Right */
/* CIF Line (1250,1050),(1200,1050) */
Res<0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1100,1100),(1100,1125),(1350,1125),(1350,1200) */
/* CIF TextPosition (1375,1150) */
(true):
/* CIF Task (1250,1200) */
task 
/* CIF TextExtension (1500,1200) Right */
/* CIF Line (1500,1250),(1450,1250) */
gShips(i)!Resource:=0
/* CIF End TextExtension */
;
/* CIF Line (1350,1300),(1350,1325),(1225,1325),(1225,1525),(1150,1525),(1150,1550) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1100,1100),(1100,1350) */
/* CIF TextPosition (1125,1125) */
(false):
/* CIF Task (1000,1350) */
task 
/* CIF TextExtension (1250,1350) Right */
/* CIF Line (1250,1400),(1200,1400) */
gShips(i)!Resource:=Res
/* CIF End TextExtension */
;
/* CIF Line (1100,1450),(1100,1475),(1150,1475),(1150,1550) */
/* CIF End Decision */
enddecision;
/* CIF Task (1050,1550) */
task 
/* CIF TextExtension (1300,1550) Right */
/* CIF Line (1300,1600),(1250,1600) */
Res:=gShips(j)! Resource-(call
abs(fix(float(gShips(i)!Speed-gShips(j)!Speed)*(sqrt2/
2))))*ns2i(gShips(i)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (1150,1650),(1150,1800) */
/* CIF Join (1100,1800),(100,100) */
join L1;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,750),(800,1000) */
/* CIF TextPosition (700,900) */
(=diff3,=diff5):
/* CIF Join (750,1000),(100,100) */
join L4;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,750),(800,825),(550,825),(550,1600) */
/* CIF TextPosition (625,1550) */
(=diff2,=diff6):
/* CIF Join (500,1600),(100,100) */
join L3;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,700),(900,1650) */
/* CIF TextPosition (900,1125) */
(=diff4):
/* CIF Join (850,1650),(100,100) */
join L2;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 2 */
/* CIF Label (1000,50),(100,100) */
connection L2:
/* CIF Line (1050,150),(1050,200) */
/* CIF Task (950,200) */
task 
/* CIF TextExtension (1250,200) Right */
/* CIF Line (1250,250),(1150,250) */
Res:=gShips(i)! Resource-
(gShips(i)!Speed+gShips(j)!Speed)*
ns2i(gShips(j)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (1050,300),(1050,400) */
/* CIF Decision (950,400) */
decision 
/* CIF TextExtension (1200,400) Right */
/* CIF Line (1200,450),(1150,450) */
Res<0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1050,500),(1050,525),(1300,525),(1300,600) */
/* CIF TextPosition (1325,550) */
(true):
/* CIF Task (1200,600) */
task 
/* CIF TextExtension (1450,600) Right */
/* CIF Line (1450,650),(1400,650) */
gShips(i)!Resource:=0
/* CIF End TextExtension */
;
/* CIF Line (1300,700),(1300,725),(1175,725),(1175,925),(1050,925),(1050,950) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1050,500),(1050,750) */
/* CIF TextPosition (1075,525) */
(false):
/* CIF Task (950,750) */
task 
/* CIF TextExtension (1200,750) Right */
/* CIF Line (1200,800),(1150,800) */
gShips(i)!Resource:=Res
/* CIF End TextExtension */
;
/* CIF Line (1050,850),(1050,950) */
/* CIF End Decision */
enddecision;
/* CIF Task (950,950) */
task 
/* CIF TextExtension (1200,950) Right */
/* CIF Line (1200,1000),(1150,1000) */
Res:=gShips(j)! Resource-
(gShips(i)!Speed+gShips(j)!Speed)*
ns2i(gShips(i)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (1050,1050),(1050,1100) */
/* CIF Join (1000,1100),(100,100) */
join L1;
/* CIF End Label */
endconnection L2;
/* CIF Label (100,300),(100,100) */
connection L1:
/* CIF Line (150,400),(150,450) */
/* CIF Decision (50,450) */
decision 
/* CIF TextExtension (300,450) Right */
/* CIF Line (300,500),(250,500) */
Res<0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,550),(150,575),(400,575),(400,650) */
/* CIF TextPosition (425,600) */
(true):
/* CIF Task (300,650) */
task 
/* CIF TextExtension (550,650) Right */
/* CIF Line (550,700),(500,700) */
gShips(j)!Resource:=0
/* CIF End TextExtension */
;
/* CIF Line (400,750),(400,1025),(150,1025),(150,1050) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,550),(150,800) */
/* CIF TextPosition (175,575) */
(false):
/* CIF Task (50,800) */
task 
/* CIF TextExtension (500,800) Right */
/* CIF Line (500,850),(250,850) */
gShips(j)!Resource:=Res
/* CIF End TextExtension */
;
/* CIF Line (150,900),(150,1050) */
/* CIF End Decision */
enddecision;
/* CIF Return (100,1050),(100,100) */
return ;
/* CIF End Label */
endconnection L1;
/* CIF Label (400,1100),(100,100) */
connection L3:
/* CIF Line (450,1200),(450,1250) */
/* CIF Task (350,1250) */
task 
/* CIF TextExtension (650,1250) Right */
/* CIF Line (650,1300),(550,1300) */
Res:=gShips(i)! Resource-
(gShips(i)!Speed+gShips(j)!Speed)*
ns2i(gShips(j)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (450,1350),(450,1450) */
/* CIF Decision (350,1450) */
decision 
/* CIF TextExtension (600,1450) Right */
/* CIF Line (600,1500),(550,1500) */
Res<0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (450,1550),(450,1575),(700,1575),(700,1650) */
/* CIF TextPosition (725,1600) */
(true):
/* CIF Task (600,1650) */
task 
/* CIF TextExtension (850,1650) Right */
/* CIF Line (850,1700),(800,1700) */
gShips(i)!Resource:=0
/* CIF End TextExtension */
;
/* CIF Line (700,1750),(700,1775),(575,1775),(575,1975),(450,1975),(450,2000) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (450,1550),(450,1800) */
/* CIF TextPosition (475,1575) */
(false):
/* CIF Task (350,1800) */
task 
/* CIF TextExtension (600,1800) Right */
/* CIF Line (600,1850),(550,1850) */
gShips(i)!Resource:=Res
/* CIF End TextExtension */
;
/* CIF Line (450,1900),(450,2000) */
/* CIF End Decision */
enddecision;
/* CIF Task (350,2000) */
task 
/* CIF TextExtension (600,2000) Right */
/* CIF Line (600,2050),(550,2050) */
Res:=gShips(j)! Resource-
(gShips(i)!Speed+gShips(j)!Speed)*
ns2i(gShips(i)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (450,2100),(450,2150) */
/* CIF Join (400,2150),(100,100) */
join L1;
/* CIF End Label */
endconnection L3;
/* CIF CurrentPage 3 */
/* CIF Label (650,100),(100,100) */
connection L4:
/* CIF Line (700,200),(700,300) */
/* CIF Task (600,300) */
task 
/* CIF TextExtension (850,300) Right */
/* CIF Line (850,350),(800,350) */
Res:=gShips(i)! Resource-(call
abs(fix(float(gShips(i)!Speed+gShips(j)!Speed)*(sqrt2/
0.5))))*ns2i(gShips(j)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (700,400),(700,450) */
/* CIF Decision (600,450) */
decision 
/* CIF TextExtension (850,450) Right */
/* CIF Line (850,500),(800,500) */
Res<0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,550),(700,575),(950,575),(950,650) */
/* CIF TextPosition (975,600) */
(true):
/* CIF Task (850,650) */
task 
/* CIF TextExtension (1100,650) Right */
/* CIF Line (1100,700),(1050,700) */
gShips(i)!Resource:=0
/* CIF End TextExtension */
;
/* CIF Line (950,750),(950,775),(825,775),(825,975),(750,975),(750,1000) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,550),(700,800) */
/* CIF TextPosition (725,575) */
(false):
/* CIF Task (600,800) */
task 
/* CIF TextExtension (850,800) Right */
/* CIF Line (850,850),(800,850) */
gShips(i)!Resource:=Res
/* CIF End TextExtension */
;
/* CIF Line (700,900),(700,925),(750,925),(750,1000) */
/* CIF End Decision */
enddecision;
/* CIF Task (650,1000) */
task 
/* CIF TextExtension (900,1000) Right */
/* CIF Line (900,1050),(850,1050) */
Res:=gShips(j)! Resource-(call
abs(fix(float(gShips(i)!Speed+gShips(j)!Speed)*(sqrt2/
0.5))))*ns2i(gShips(i)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (750,1100),(750,1150) */
/* CIF Join (700,1150),(100,100) */
join L1;
/* CIF End Label */
endconnection L4;
/* CIF CurrentPage 4 */
/* CIF Label (600,100),(100,100) */
connection L5:
/* CIF Line (650,200),(650,250) */
/* CIF Task (550,250) */
task 
/* CIF TextExtension (800,250) Right */
/* CIF Line (800,300),(750,300) */
Res:=gShips(i)!Resource-
(call abs(gShips(i)!Speed-gShips(j)!Speed))*
ns2i(gShips(j)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (650,350),(650,400) */
/* CIF Decision (550,400) */
decision 
/* CIF TextExtension (800,400) Right */
/* CIF Line (800,450),(750,450) */
Res<0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (650,500),(650,525),(900,525),(900,600) */
/* CIF TextPosition (925,550) */
(true):
/* CIF Task (800,600) */
task 
/* CIF TextExtension (1050,600) Right */
/* CIF Line (1050,650),(1000,650) */
gShips(i)!Resource:=0
/* CIF End TextExtension */
;
/* CIF Line (900,700),(900,725),(775,725),(775,875),(650,875),(650,900) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (650,500),(650,750) */
/* CIF TextPosition (675,525) */
(false):
/* CIF Task (550,750) */
task 
/* CIF TextExtension (800,750) Right */
/* CIF Line (800,800),(750,800) */
gShips(i)!Resource:=Res
/* CIF End TextExtension */
;
/* CIF Line (650,850),(650,900) */
/* CIF End Decision */
enddecision;
/* CIF Task (550,900) */
task 
/* CIF TextExtension (800,900) Right */
/* CIF Line (800,950),(750,950) */
Res:=gShips(j)! Resource-
(call abs(gShips(i)!Speed-gShips(j)!Speed))*
ns2i(gShips(i)!TypeShip )
/* CIF End TextExtension */
;
/* CIF Line (650,1000),(650,1050) */
/* CIF Decision (550,1050) */
decision 
/* CIF TextExtension (800,1050) Right */
/* CIF Line (800,1100),(750,1100) */
Res<0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (650,1150),(650,1175),(900,1175),(900,1250) */
/* CIF TextPosition (925,1200) */
(true):
/* CIF Task (800,1250) */
task 
/* CIF TextExtension (1100,1200) Right */
/* CIF Line (1100,1250),(1075,1250),(1075,1300),(1000,1300) */
gShips(j)!Resource:=0
/* CIF End TextExtension */
;
/* CIF Line (900,1350),(900,1525),(650,1525),(650,1550) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (650,1150),(650,1350) */
/* CIF TextPosition (675,1175) */
(false):
/* CIF Task (550,1350) */
task 
/* CIF TextExtension (1100,1350) Right */
/* CIF Line (1100,1400),(750,1400) */
gShips(j)!Resource:=Res
/* CIF End TextExtension */
;
/* CIF Line (650,1450),(650,1550) */
/* CIF End Decision */
enddecision;
/* CIF Decision (550,1550) */
decision 
/* CIF TextExtension (800,1550) Right */
/* CIF Line (800,1600),(750,1600) */
gShips(i)!Speed>= gShips(i)!Speed
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (650,1650),(650,1675),(250,1675),(250,1800) */
/* CIF TextPosition (225,1700) */
(true):
/* CIF ProcedureCall (150,1800) */
call 
/* CIF TextExtension (400,1800) Right */
/* CIF Line (400,1850),(350,1850) */
Heading(i)
/* CIF End TextExtension */
;
/* CIF Line (250,1900),(250,1925),(800,1925),(800,2100) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (650,1650),(650,1675),(1100,1675),(1100,1800) */
/* CIF TextPosition (1125,1700) */
(false):
/* CIF ProcedureCall (1000,1800) */
call 
/* CIF TextExtension (1250,1800) Right */
/* CIF Line (1250,1850),(1200,1850) */
Heading(j)
/* CIF End TextExtension */
;
/* CIF Line (1100,1900),(1100,1925),(800,1925),(800,2100) */
/* CIF End Decision */
enddecision;
/* CIF Return (750,2100),(100,100) */
return ;
/* CIF End Label */
endconnection L5;
/* CIF End ProcedureDiagram */
endprocedure Collision;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\abs.spd' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
procedure abs
;fpar 
i Integer;
returns Integer;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (650,300) */
start ;
/* CIF Line (750,400),(750,450) */
/* CIF Decision (650,450) */
decision 
/* CIF TextExtension (900,450) Right */
/* CIF Line (900,500),(850,500) */
i>=0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,550),(750,575),(450,575),(450,600) */
/* CIF TextPosition (525,500) */
(true):
/* CIF Return (400,600),(100,100) */
return i;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,550),(750,575),(1350,575),(1350,600) */
/* CIF TextPosition (1250,525) */
(false):
/* CIF Return (1300,600),(100,100) */
return -i;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure abs;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\Heading.spd' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 100 Grid (50,50) AutoNumbered */
procedure Heading
;fpar
i Integer;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (550,50) */
start ;
/* CIF Line (650,150),(650,175),(850,175),(850,200) */
/* CIF Decision (750,200) */
decision 
/* CIF TextExtension (1050,200) Right */
/* CIF Line (1050,250),(950,250) */
gShips(i)!Heading
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,300),(850,325),(250,325),(250,500) */
/* CIF TextPosition (550,250) */
(NORTH):
/* CIF Decision (150,500) */
decision 
/* CIF TextExtension (400,500) Right */
/* CIF Line (400,550),(350,550) */
gShips(i)!Coordinates!y=0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,600),(250,650) */
/* CIF TextPosition (275,625) */
(false):
/* CIF Task (150,650) */
task 
/* CIF TextExtension (400,650) Right */
/* CIF Line (400,700),(350,700) */
gShips(i)!Coordinates!y:=
gShips(i)!Coordinates!y-
1
/* CIF End TextExtension */
;
/* CIF Line (250,750),(250,850) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,600),(250,625),(100,625),(100,825),(250,825),(250,850) */
/* CIF TextPosition (100,675) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Join (200,850),(100,100) */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,300),(850,325),(1150,325),(1150,500) */
/* CIF TextPosition (1175,350) */
(NORTH_EAST):
/* CIF Decision (1050,500) */
decision 
/* CIF TextExtension (1300,500) Right */
/* CIF Line (1300,550),(1250,550) */
gShips(i)!Coordinates!y=0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1150,600),(1150,650) */
/* CIF TextPosition (1175,625) */
(false):
/* CIF Task (1050,650) */
task 
/* CIF TextExtension (1300,650) Right */
/* CIF Line (1300,700),(1250,700) */
gShips(i)!Coordinates!y:=
gShips(i)!Coordinates!y-1
/* CIF End TextExtension */
;
/* CIF Line (1150,750),(1150,800) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1150,600),(1150,625),(1000,625),(1000,775),(1150,775),(1150,800) */
/* CIF TextPosition (975,650) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Decision (1050,800) */
decision 
/* CIF TextExtension (1300,800) Right */
/* CIF Line (1300,850),(1250,850) */
gShips(i)!Coordinates!x=0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1150,900),(1150,950) */
/* CIF TextPosition (1175,925) */
(false):
/* CIF Task (1050,950) */
task 
/* CIF TextExtension (1300,950) Right */
/* CIF Line (1300,1000),(1250,1000) */
gShips(i)!Coordinates!x:=
gShips(i)!Coordinates!x-1
/* CIF End TextExtension */
;
/* CIF Line (1150,1050),(1150,1150) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1150,900),(1150,925),(1000,925),(1000,1125),(1150,1125),(1150,1150) */
/* CIF TextPosition (975,950) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Join (1100,1150),(100,100) */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,300),(850,975),(250,975),(250,1000) */
/* CIF TextPosition (575,925) */
(EAST):
/* CIF Decision (150,1000) */
decision 
/* CIF TextExtension (450,1000) Right */
/* CIF Line (450,1050),(350,1050) */
gShips(i)!Coordinates!y=0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,1100),(250,1150) */
/* CIF TextPosition (275,1125) */
(false):
/* CIF Task (150,1150) */
task 
/* CIF TextExtension (450,1150) Right */
/* CIF Line (450,1200),(350,1200) */
gShips(i)!Coordinates!x:=
gShips(i)!Coordinates!x-
1
/* CIF End TextExtension */
;
/* CIF Line (250,1250),(250,1300) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,1100),(250,1125),(100,1125),(100,1275),(250,1275),(250,1300) */
/* CIF TextPosition (75,1150) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Join (200,1300),(100,100) */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,300),(850,1275),(1650,1275),(1650,1300) */
/* CIF TextPosition (1675,1300) */
(NORTH_WEST):
/* CIF Join (1600,1300),(100,100) */
join L3;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,300),(850,1425),(400,1425),(400,1450) */
/* CIF TextPosition (375,1450) */
(SOUTH):
/* CIF Decision (300,1450) */
decision 
/* CIF TextExtension (600,1450) Right */
/* CIF Line (600,1500),(500,1500) */
gShips(i)!Coordinates!y=
MaxYCoordinate
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (400,1550),(400,1600) */
/* CIF TextPosition (425,1575) */
(false):
/* CIF Task (300,1600) */
task 
/* CIF TextExtension (600,1600) Right */
/* CIF Line (600,1650),(500,1650) */
gShips(i)!Coordinates!y:=
gShips(i)!Coordinates!y+
1
/* CIF End TextExtension */
;
/* CIF Line (400,1700),(400,2150) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (400,1550),(400,1575),(275,1575),(275,2125),(400,2125),(400,2150) */
/* CIF TextPosition (250,1600) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Join (350,2150),(100,100) */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,300),(850,1425),(1200,1425),(1200,1450) */
/* CIF TextPosition (1225,1375) */
(SOUTH_EAST):
/* CIF Decision (1100,1450) */
decision 
/* CIF TextExtension (1350,1450) Right */
/* CIF Line (1350,1500),(1300,1500) */
gShips(i)!Coordinates!y=
MaxYCoordinate
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1200,1550),(1200,1600) */
/* CIF TextPosition (1225,1575) */
(false):
/* CIF Task (1100,1600) */
task 
/* CIF TextExtension (1350,1600) Right */
/* CIF Line (1350,1650),(1300,1650) */
gShips(i)!Coordinates!y:=
gShips(i)!Coordinates!y+1
/* CIF End TextExtension */
;
/* CIF Line (1200,1700),(1200,1750) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1200,1550),(1200,1575),(1050,1575),(1050,1725),(1200,1725),(1200,1750) */
/* CIF TextPosition (1025,1600) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Decision (1100,1750) */
decision 
/* CIF TextExtension (1350,1750) Right */
/* CIF Line (1350,1800),(1300,1800) */
gShips(i)!Coordinates!x=0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1200,1850),(1200,1900) */
/* CIF TextPosition (1225,1875) */
(false):
/* CIF Task (1100,1900) */
task 
/* CIF TextExtension (1350,1900) Right */
/* CIF Line (1350,1950),(1300,1950) */
gShips(i)!Coordinates!x:=
gShips(i)!Coordinates!x-1
/* CIF End TextExtension */
;
/* CIF Line (1200,2000),(1200,2100) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1200,1850),(1200,1875),(1050,1875),(1050,2075),(1200,2075),(1200,2100) */
/* CIF TextPosition (1025,1900) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Join (1150,2100),(100,100) */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,300),(850,1800),(150,1800),(150,1850) */
/* CIF TextPosition (125,1750) */
(    WEST):
/* CIF Decision (50,1850) */
decision 
/* CIF TextExtension (300,1850) Right */
/* CIF Line (300,1900),(250,1900) */
gShips(i)!Coordinates!x=
MaxXCoordinate
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,1950),(150,2000) */
/* CIF TextPosition (175,1975) */
(false):
/* CIF Task (50,2000) */
task 
/* CIF TextExtension (300,2000) Right */
/* CIF Line (300,2050),(250,2050) */
gShips(i)!Coordinates!x:=
gShips(i)!Coordinates!x+
1
/* CIF End TextExtension */
;
/* CIF Line (150,2100),(150,2150) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (150,1950),(150,1975),(25,1975),(25,2125),(150,2125),(150,2150) */
/* CIF TextPosition (75,1950) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Join (100,2150),(100,100) */
join L2;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,300),(850,2125),(900,2125),(900,2150) */
/* CIF TextPosition (925,2050) */
(SOUTH_WEST):
/* CIF Join (850,2150),(100,100) */
join L4;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 2 */
/* CIF Label (450,250),(100,100) */
connection L3:
/* CIF Line (500,350),(500,400) */
/* CIF Decision (400,400) */
decision 
/* CIF TextExtension (650,400) Right */
/* CIF Line (650,450),(600,450) */
gShips(i)!Coordinates!y=0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,500),(500,550) */
/* CIF TextPosition (550,500) */
(false):
/* CIF Task (400,550) */
task 
/* CIF TextExtension (650,550) Right */
/* CIF Line (650,600),(600,600) */
gShips(i)!Coordinates!y:=
gShips(i)!Coordinates!y-1
/* CIF End TextExtension */
;
/* CIF Line (500,650),(500,700) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,500),(500,525),(275,525),(275,675),(500,675),(500,700) */
/* CIF TextPosition (250,550) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Decision (400,700) */
decision 
/* CIF TextExtension (650,700) Right */
/* CIF Line (650,750),(600,750) */
gShips(i)!Coordinates!x=MaxXCoordinate
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,800),(500,900) */
/* CIF TextPosition (525,825) */
(false):
/* CIF Task (400,900) */
task 
/* CIF TextExtension (650,900) Right */
/* CIF Line (650,950),(600,950) */
gShips(i)!Coordinates!x:=
gShips(i)!Coordinates!x+1
/* CIF End TextExtension */
;
/* CIF Line (500,1000),(500,1100) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,800),(500,825),(275,825),(275,1075),(500,1075),(500,1100) */
/* CIF TextPosition (250,850) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Join (450,1100),(100,100) */
join L2;
/* CIF End Label */
endconnection L3;
/* CIF Label (1200,1150),(100,100) */
connection L4:
/* CIF Line (1250,1250),(1250,1300) */
/* CIF Decision (1150,1300) */
decision 
/* CIF TextExtension (1400,1300) Right */
/* CIF Line (1400,1350),(1350,1350) */
gShips(i)!Coordinates!y=
MaxYCoordinate
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1250,1400),(1250,1450) */
/* CIF TextPosition (1275,1425) */
(false):
/* CIF Task (1150,1450) */
task 
/* CIF TextExtension (1400,1450) Right */
/* CIF Line (1400,1500),(1350,1500) */
gShips(i)!Coordinates!y:=
gShips(i)!Coordinates!y+1
/* CIF End TextExtension */
;
/* CIF Line (1250,1550),(1250,1600) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1250,1400),(1250,1425),(1075,1425),(1075,1575),(1250,1575),(1250,1600) */
/* CIF TextPosition (1050,1450) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Decision (1150,1600) */
decision 
/* CIF TextExtension (1400,1600) Right */
/* CIF Line (1400,1650),(1350,1650) */
gShips(i)!Coordinates!x=
MaxXCoordinate
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1250,1700),(1250,1850) */
/* CIF TextPosition (1275,1725) */
(false):
/* CIF Task (1150,1850) */
task 
/* CIF TextExtension (1400,1850) Right */
/* CIF Line (1400,1900),(1350,1900) */
gShips(i)!Coordinates!x:=
gShips(i)!Coordinates!x+1
/* CIF End TextExtension */
;
/* CIF Line (1250,1950),(1250,2100) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1250,1700),(1250,1725),(1075,1725),(1075,2075),(1250,2075),(1250,2100) */
/* CIF TextPosition (1050,1750) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Join (1200,2100),(100,100) */
join L2;
/* CIF End Label */
endconnection L4;
/* CIF Label (450,1400),(100,100) */
connection L2:
/* CIF Line (500,1500),(500,1550) */
/* CIF Return (450,1550),(100,100) */
return ;
/* CIF End Label */
endconnection L2;
/* CIF End ProcedureDiagram */
endprocedure Heading;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\SetSI.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SetSI
;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF Text (400,100) */
dcl i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,250) */
start ;
/* CIF Line (800,350),(800,400) */
/* CIF Task (700,400) */
task i := 1;
/* CIF Line (800,500),(800,550) */
/* CIF Label Invisible */
grst31:
/* CIF Decision (700,550) */
decision 
/* CIF TextExtension (950,550) Right */
/* CIF Line (950,600),(900,600) */
i <= AmountStrategy
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,600),(200,600),(200,750) */
/* CIF TextPosition (175,625) */
(false):
/* CIF Task (100,750) */
task 
/* CIF TextExtension (350,750) Right */
/* CIF Line (350,800),(300,800) */
errname := EN_OK
/* CIF End TextExtension */
;
/* CIF Line (200,850),(200,900) */
/* CIF Return (150,900),(100,100) */
return EC_OK;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,650),(800,750) */
/* CIF TextPosition (825,675) */
(true):
/* CIF Extendedtask (700,750) */
task {
/* CIF TextExtension (950,750) Right */
/* CIF Line (950,800),(900,800) */
gASI( i ) := true;
i := i + 1;
/* CIF End TextExtension */
};
/* CIF Line (800,850),(800,875),(1325,875),(1325,525),(800,525),(800,550) */
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst31;
/* CIF End ProcedureDiagram */
endprocedure SetSI;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\KillStrategy.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure KillStrategy
;
returns tErrorCode;
/* CIF DefaultSize (200,100) */
/* CIF Text (400,100) */
dcl i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (900,300) */
start ;
/* CIF Line (1000,400),(1000,450) */
/* CIF Task (900,450) */
task i := 1;
/* CIF Line (1000,550),(1000,600) */
/* CIF Label Invisible */
grst32:
/* CIF Decision (900,600) */
decision 
/* CIF TextExtension (1150,600) Right */
/* CIF Line (1150,650),(1100,650) */
i <= AmountStrategy
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,650),(300,650),(300,800) */
/* CIF TextPosition (275,675) */
(false):
/* CIF Task (200,800) */
task 
/* CIF TextExtension (450,800) Right */
/* CIF Line (450,850),(400,850) */
errname := EN_OK
/* CIF End TextExtension */
;
/* CIF Line (300,900),(300,950) */
/* CIF Return (250,950),(100,100) */
return EC_OK;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,700),(1000,800) */
/* CIF TextPosition (1025,725) */
(true):
/* CIF Decision (900,800) */
decision gASI( i );
/* CIF Answer InvisibleBrackets */
/* CIF Line (1000,900),(1000,1000) */
/* CIF TextPosition (1025,925) */
(true):
/* CIF Output (900,1000) Right */
output StrategyLose
/* CIF TextExtension (1150,1000) Right */
/* CIF Line (1150,1050),(1100,1050) */
( i )
/* CIF End TextExtension */
;
/* CIF Line (1000,1100),(1000,1150) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (900,850),(800,850),(800,1125),(1000,1125),(1000,1150) */
/* CIF TextPosition (825,800) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (900,1150) */
task {
/* CIF TextExtension (1150,1150) Right */
/* CIF Line (1150,1200),(1100,1200) */
gASI( i ) := false;
i := i + 1;
/* CIF End TextExtension */
};
/* CIF Line (1000,1250),(1000,1275),(1525,1275),(1525,575),(1000,575),(1000,600) */
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst32;
/* CIF End ProcedureDiagram */
endprocedure KillStrategy;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\IsWeaponry.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure IsWeaponry
;
returns Boolean;
/* CIF DefaultSize (200,100) */
/* CIF Text (400,100) */
dcl i, n Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (650,250) */
start ;
/* CIF Line (750,350),(750,400) */
/* CIF Extendedtask (650,400) */
task {
/* CIF TextExtension (900,400) Right */
/* CIF Line (900,450),(850,450) */
i := 1;
n := length( gShips );
/* CIF End TextExtension */
};
/* CIF Line (750,500),(750,550) */
/* CIF Label Invisible */
grst33:
/* CIF Decision (650,550) */
decision i <= n;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (850,600),(1150,600),(1150,700) */
/* CIF TextPosition (1000,550) */
(false):
/* CIF Decision (1050,700) */
decision 
/* CIF TextExtension (1300,700) Right */
/* CIF Line (1300,750),(1250,750) */
gShots = empty
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1050,750),(900,750),(900,900) */
/* CIF TextPosition (1025,700) */
(true):
/* CIF Return (850,900),(100,100) */
return false;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1150,800),(1150,900) */
/* CIF TextPosition (1175,825) */
(false):
/* CIF Return (1100,900),(100,100) */
return true;
/* CIF End Decision */
enddecision;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,650),(750,1050) */
/* CIF TextPosition (775,675) */
(true):
/* CIF Decision (650,1050) */
decision 
/* CIF TextExtension (900,1050) Right */
/* CIF Line (900,1100),(850,1100) */
( gShips(i)!Ammunition( MISSILE ) = 0 ) AND
  ( gShips(i)!Ammunition( TORPEDO ) = 0 ) AND
  ( gShips(i)!Ammunition( SHELL ) = 0 )
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,1100),(500,1100),(500,1250) */
/* CIF TextPosition (575,1050) */
(true):
/* CIF Task (400,1250) */
task i := i + 1;
/* CIF Line (500,1350),(500,1375),(325,1375),(325,525),(750,525),(750,550) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,1150),(750,1250) */
/* CIF TextPosition (775,1175) */
(false):
/* CIF Return (700,1250),(100,100) */
return true;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst33;
/* CIF End ProcedureDiagram */
endprocedure IsWeaponry;
/* CIF ProcessDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 4 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\DataSender.spr' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 100 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 4 Scale 100 Grid (50,50) AutoNumbered */
process DataSender;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (50,950) */

procedure PushFixedShipPart;
fpar
  ShipID Integer,
  StrategyID Integer,
  TypeShip Integer,
  Speed Integer,
  Heading Integer,
  Resource Integer,
  CoordinatesX Integer,
  CoordinatesY Integer,
  MissleAmount Integer,
  TorpedoAmount Integer,
  ShellAmount Integer,
  RepairAmount Integer;
external;

procedure PushVariableShipPart;
fpar
  Visible Integer;
external;

procedure PushShipsDummy;
returns Integer;
external;
/* CIF End Text */
/* CIF Text (700,950) */


procedure PushShot;
  fpar
    TypeWeaponry Integer,
    CurrentCoordinatesX Integer,
    CurrentCoordinatesY Integer,
    TargetCoordinatesX Integer,
    TargetCoordinatesY Integer;
external;

procedure PushShotsDummy;
returns Integer;
external;
/* CIF End Text */
/* CIF Text (1300,950) */


procedure InitConnection;
returns Integer;
external;

procedure PushParam;
fpar
  Param Integer;
external;

procedure PushMap;
returns Integer;
external;

procedure SendData;
returns Integer;
external;
/* CIF End Text */
/* CIF Text (700,1700) */


synonym rcNoError Integer = 0;
synonym rcCommonFault Integer = (-1);

/* CIF End Text */
/* CIF CurrentPage 2 */
/* CIF Text (1300,100) */
imported
  gShips tStringShipParameters,
  gShots tStringShotParameters;
dcl
  impShips tStringShipParameters,
  impShots tStringShotParameters;
dcl
  tmpRes Integer;

/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF Procedure (50,250),(300,100) */
/* CIF TextPosition (100,275) */
procedure PushShips referenced;
/* CIF Procedure (50,450),(300,100) */
/* CIF TextPosition (100,475) */
procedure PushShots referenced;
/* CIF CurrentPage 2 */
/* CIF Start (800,200) */
start ;
/* CIF Line (900,300),(900,350) */
/* CIF NextState (800,350) */
nextstate Listening;
/* CIF State (800,350) */
state Listening;
/* CIF Line (900,450),(900,475),(400,475),(400,550) */
/* CIF Input (300,550) Right */
input InitSocket;
/* CIF Line (400,650),(400,750) */
/* CIF Join (350,750),(100,100) */
join toInitSocket;
/* CIF Line (900,450),(900,475),(1400,475),(1400,550) */
/* CIF Input (1300,550) Right */
input SendData;
/* CIF Line (1400,650),(1400,750) */
/* CIF Join (1350,750),(100,100) */
join toSendingData;
/* CIF End State */
endstate;
/* CIF Label (350,1000),(100,100) */
connection fromInitSocket:
/* CIF Line (400,1100),(400,1225),(900,1225),(900,1450) */
/* CIF NextState (800,1450) */
nextstate -;
/* CIF End Label */
endconnection fromInitSocket;
/* CIF Label (1350,1000),(100,100) */
connection fromSendingData:
/* CIF Line (1400,1100),(1400,1225),(900,1225),(900,1450) */
/* CIF Join Invisible */
join fromInitSocket;
/* CIF End Label */
endconnection fromSendingData;
/* CIF CurrentPage 1 */
/* CIF CurrentPage 3 */
/* CIF Label (250,300),(100,100) */
connection toSendingData:
/* CIF Line (300,400),(300,450) */
/* CIF Extendedtask (50,450),(500,100) */
task {impShips := import(gShips);
impShots := import(gShots);};
/* CIF Line (300,550),(300,750) */
/* CIF Extendedtask (200,750) */
task {
/* CIF TextExtension (450,750) Right */
/* CIF Line (450,800),(400,800) */
tmpRes := call PushShips;
/* CIF End TextExtension */
};
/* CIF Line (300,850),(300,950) */
/* CIF Decision (200,950) */
decision tmpRes;
/* CIF Answer InvisibleBrackets */
/* CIF Line (300,1050),(300,1300) */
/* CIF TextPosition (325,1075) */
(=rcNoError):
/* CIF Extendedtask (200,1300) */
task {
/* CIF TextExtension (450,1300) Right */
/* CIF Line (450,1350),(400,1350) */
tmpRes := call PushShots;
/* CIF End TextExtension */
};
/* CIF Line (300,1400),(300,1500) */
/* CIF Decision (200,1500) */
decision tmpRes;
/* CIF Answer InvisibleBrackets */
/* CIF Line (300,1600),(300,1800) */
/* CIF TextPosition (325,1625) */
(=rcNoError):
/* CIF Output (200,1800) Right */
output 
/* CIF TextExtension (450,1800) Right */
/* CIF Line (450,1850),(400,1850) */
SendDataComplete(EC_OK)
/* CIF End TextExtension */
;
/* CIF Line (300,1900),(300,2150) */
/* CIF Label Invisible */
grst34:
/* CIF Join (250,2150),(100,100) */
join fromSendingData;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (400,1550),(1150,1550),(1150,1800) */
/* CIF TextPosition (425,1500) */
(=rcCommonFault):
/* CIF Label Invisible */
grst35:
/* CIF Output (1050,1800) Right */
output 
/* CIF TextExtension (1300,1800) Right */
/* CIF Line (1300,1850),(1250,1850) */
SendDataComplete(EC_FAULT)
/* CIF End TextExtension */
;
/* CIF Line (1150,1900),(1150,2025),(300,2025),(300,2150) */
/* CIF Join Invisible */
join grst34;
/* CIF End Decision */
enddecision;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (400,1000),(1150,1000),(1150,1800) */
/* CIF TextPosition (1200,1025) */
(=rcCommonFault):
/* CIF Join Invisible */
join grst35;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection toSendingData;
/* CIF CurrentPage 4 */
/* CIF Label (350,250),(100,100) */
connection toInitSocket:
/* CIF Line (400,350),(400,550) */
/* CIF Extendedtask (300,550) */
task {
/* CIF TextExtension (550,550) Right */
/* CIF Line (550,600),(500,600) */
tmpRes := call InitConnection;
/* CIF End TextExtension */
};
/* CIF Line (400,650),(400,700) */
/* CIF Decision (300,700) */
decision tmpRes;
/* CIF Answer InvisibleBrackets */
/* CIF Line (400,800),(400,850) */
/* CIF TextPosition (425,800) */
(=rcNoError):
/* CIF ProcedureCall (300,850) */
call PushParam
/* CIF TextExtension (550,850) Right */
/* CIF Line (550,900),(500,900) */
(AmountStrategy)
/* CIF End TextExtension */
;
/* CIF Line (400,950),(400,1050) */
/* CIF Extendedtask (300,1050) */
task {
/* CIF TextExtension (550,1050) Right */
/* CIF Line (550,1100),(500,1100) */
tmpRes := call SendData;
/* CIF End TextExtension */
};
/* CIF Line (400,1150),(400,1200) */
/* CIF Decision (300,1200) */
decision tmpRes;
/* CIF Answer InvisibleBrackets */
/* CIF Line (400,1300),(400,1450) */
/* CIF TextPosition (425,1325) */
(=rcNoError):
/* CIF Extendedtask (300,1450) */
task {
/* CIF TextExtension (550,1450) Right */
/* CIF Line (550,1500),(500,1500) */
tmpRes := call PushMap;
/* CIF End TextExtension */
};
/* CIF Line (400,1550),(400,1600) */
/* CIF Decision (300,1600) */
decision tmpRes;
/* CIF Answer InvisibleBrackets */
/* CIF Line (400,1700),(400,1950) */
/* CIF TextPosition (425,1725) */
(=rcNoError):
/* CIF Output (300,1950) Right */
output 
/* CIF TextExtension (550,1950) Right */
/* CIF Line (550,2000),(500,2000) */
InitSocketComplete(EC_OK)
/* CIF End TextExtension */
;
/* CIF Line (400,2050),(400,2100) */
/* CIF Label Invisible */
grst36:
/* CIF Join (350,2100),(100,100) */
join fromInitSocket;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (500,1650),(1150,1650),(1150,1950) */
/* CIF TextPosition (500,1600) */
(=rcCommonFault):
/* CIF Label Invisible */
grst37:
/* CIF Output (1050,1950) Right */
output 
/* CIF TextExtension (1300,1950) Right */
/* CIF Line (1300,2000),(1250,2000) */
InitSocketComplete(EC_FAULT)
/* CIF End TextExtension */
;
/* CIF Line (1150,2050),(1150,2075),(400,2075),(400,2100) */
/* CIF Join Invisible */
join grst36;
/* CIF End Decision */
enddecision;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (500,1250),(1150,1250),(1150,1950) */
/* CIF TextPosition (500,1200) */
(=rcCommonFault):
/* CIF Join Invisible */
join grst37;
/* CIF End Decision */
enddecision;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (500,750),(1150,750),(1150,1950) */
/* CIF TextPosition (1175,825) */
(=rcCommonFault):
/* CIF Join Invisible */
join grst37;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection toInitSocket;
/* CIF End ProcessDiagram */
endprocess DataSender;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\PushShips.spd' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
procedure PushShips
;
returns Integer;
/* CIF DefaultSize (200,100) */
/* CIF Text (1300,100) */
dcl i,k Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (600,150) */
start ;
/* CIF Line (700,250),(700,300) */
/* CIF Decision (550,300),(300,100) */
decision length(impShips);
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (850,350),(1100,350),(1100,500) */
/* CIF TextPosition (1125,375) */
(>0):
/* CIF Extendedtask (1000,500) */
task {
/* CIF TextExtension (1250,500) Right */
/* CIF Line (1250,550),(1200,550) */
for (i:=1, i <= length(impShips), i+1)
{
  call PushFixedShipPart(
    impShips(i)!ShipId,
    impShips(i)!StrategyId,
    ns2i(impShips(i)!TypeShip),
    impShips(i)!Speed,
    h2i(impShips(i)!Heading),
    impShips(i)!Resource,
    impShips(i)!Coordinates!x,
    impShips(i)!Coordinates!y,
    impShips(i)!Ammunition(MISSILE),
    impShips(i)!Ammunition(TORPEDO),
    impShips(i)!Ammunition(SHELL),
    impShips(i)!Ammunition(REPAIR)
  );
  for (k:=1, k <= AmountStrategy, k+1)
  {
    if (impShips(i)!VisibleToStrategy(k))
    {
       call PushVariableShipPart(1);
    } else
    {
       call PushVariableShipPart(0);
    }
  }
}
/* CIF End TextExtension */
};
/* CIF Line (1100,600),(1100,1550) */
/* CIF Extendedtask (1000,1550) */
task {
/* CIF TextExtension (1250,1550) Right */
/* CIF Line (1250,1600),(1200,1600) */
tmpRes := call SendData;
/* CIF End TextExtension */
};
/* CIF Line (1100,1650),(1100,1725),(700,1725),(700,1800) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (550,350),(250,350),(250,1550) */
/* CIF TextPosition (225,375) */
(=0):
/* CIF Extendedtask (150,1550) */
task {
/* CIF TextExtension (400,1550) Right */
/* CIF Line (400,1600),(350,1600) */
tmpRes := call PushShipsDummy;
/* CIF End TextExtension */
};
/* CIF Line (250,1650),(250,1725),(700,1725),(700,1800) */
/* CIF End Decision */
enddecision;
/* CIF Decision (600,1800) */
decision tmpRes;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,1850),(250,1850),(250,2050) */
/* CIF TextPosition (425,1875) */
(rcNoError):
/* CIF Return (200,2050),(100,100) */
return rcNoError;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,1850),(1100,1850),(1100,2050) */
/* CIF TextPosition (1125,1875) */
(rcCommonFault):
/* CIF Return (1050,2050),(100,100) */
return rcCommonFault;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure PushShips;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\Simulator\PushShots.spd' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
procedure PushShots
;
returns Integer;
/* CIF DefaultSize (200,100) */
/* CIF Text (1500,100) */
dcl i Integer;
dcl tmp Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (350,200) */
start ;
/* CIF Line (450,300),(450,350) */
/* CIF Decision (350,350) */
decision 
/* CIF TextExtension (300,350) Left */
/* CIF Line (300,400),(350,400) */
length(impShots)
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (450,450),(450,650) */
/* CIF TextPosition (475,450) */
(>0):
/* CIF Extendedtask (350,650) */
task {
/* CIF TextExtension (600,650) Right */
/* CIF Line (600,700),(550,700) */
for (i:=1, i<= length(impShots), i+1)
{
    call PushShot(
      nw2i(impShots(i)!TypeWeaponry),
      impShots(i)!CurrentCoordinates!x,
      impShots(i)!CurrentCoordinates!y,

      impShots(i)!FinishCoordinates!x,
      impShots(i)!FinishCoordinates!y
    );
}
/* CIF End TextExtension */
};
/* CIF Line (450,750),(450,1150) */
/* CIF Extendedtask (350,1150) */
task {
/* CIF TextExtension (600,1150) Right */
/* CIF Line (600,1200),(550,1200) */

tmp := call SendData;
/* CIF End TextExtension */
};
/* CIF Line (450,1250),(450,1650),(850,1650),(850,1700) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (550,400),(1200,400),(1200,1150) */
/* CIF TextPosition (1225,450) */
(=0):
/* CIF Extendedtask (1100,1150) */
task {
/* CIF TextExtension (1350,1150) Right */
/* CIF Line (1350,1200),(1300,1200) */

tmp := call PushShotsDummy;
/* CIF End TextExtension */
};
/* CIF Line (1200,1250),(1200,1650),(850,1650),(850,1700) */
/* CIF End Decision */
enddecision;
/* CIF Decision (750,1700) */
decision tmpRes;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1750),(450,1750),(450,1900) */
/* CIF TextPosition (475,1775) */
(rcNoError):
/* CIF Return (400,1900),(100,100) */
return rcNoError;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,1750),(1200,1750),(1200,1900) */
/* CIF TextPosition (1225,1775) */
(rcCommonFault):
/* CIF Return (1150,1900),(100,100) */
return rcCommonFault;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure PushShots;
/* CIF BlockDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1.sbk' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
block Strategy1;
/* CIF CurrentPage 1 */
/* CIF SignalRoute (150,600),(850,600) */
/* CIF TextPosition (421,554) */
/* CIF TextPosition (600,625) SignalList1 */
/* CIF TextPosition (175,625) SignalList2 */
signalroute chStSim from env to Main1 with (fromSimulator);
from Main1 to env with (toSimulator);
/* CIF SignalRoute (1150,600),(1750,600) */
/* CIF TextPosition (1229,550) */
/* CIF TextPosition (1525,625) SignalList1 */
signalroute chStMsg from Main1 to env with messageLog,
messageError;
/* CIF Process (850,500),(300,200) */
/* CIF TextPosition (875,575) */
process Main1 referenced;
/* CIF Connect */
/* CIF TextPosition (75,525) */
connect SimSt1Int and chStSim;
/* CIF Connect */
/* CIF TextPosition (1675,525) */
connect St1MsgInt and chStMsg;
/* CIF End BlockDiagram */
endblock Strategy1;
/* CIF ProcessDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\Main.spr' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 120 Grid (50,50) AutoNumbered */
process Main1;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (50,250) */
imported
    gWeaponryCharacter tArrayWeaponryCharacter,
    gShipsCharacter tArrayShipsCharacter;
/* CIF End Text */
/* CIF Text (900,250) */
synonym 
   FirstQuaterX Integer = 3*MaxXCoordinate/4,
   FirstQuaterY Integer = 3*MaxYCoordinate/4,
   SecondQuaterX Integer = 3*MaxXCoordinate/4,
   SecondQuaterY Integer = MaxYCoordinate/4,
   ThirdQuaterX Integer = MaxXCoordinate/4,
   ThirdQuaterY Integer = MaxYCoordinate/4,
   FourthQuaterX Integer = MaxXCoordinate/4,
   FourthQuaterY Integer = 3*MaxYCoordinate/4;
/* CIF End Text */
/* CIF Text (50,400) */
newtype tOrderType
 literals
    _RIGHT,
    _LEFT,
    _FIRE,
    _ACCEL;
endnewtype;
/* CIF End Text */
/* CIF Text (50,700) */
newtype tFire
  struct
    List tStringShotsList;
    Weapon tNameWeaponry; 
endnewtype;
/* CIF End Text */
/* CIF Text (50,950) */
newtype tCommand
  struct
    OrderType  tOrderType;
    isSet Boolean;
    Fire tFire;
    Accel tFactorAcceleration;
endnewtype;
/* CIF End Text */
/* CIF Text (50,1250) */
newtype tArrayCommand
  Array(tShipId,tCommand);
endnewtype;
/* CIF End Text */
/* CIF CurrentPage 2 */
/* CIF Text (50,400) */
dcl 
   WeaponryCharacter tArrayWeaponryCharacter,
   ShipsCharacter tArrayShipsCharacter;
/* CIF End Text */
/* CIF Text (50,800) */
dcl 
   MyCenter tCoordinates,
   Tick,NumMyShips, minSpeed Integer,
   flagFight Boolean := true,
   HeadingTarget tCoordinates,
   ShipsCurrentState tStringShipCurrentState,
   CommandToShip tArrayCommand,
   StrategyID tStrategyId;
/* CIF End Text */
/* CIF Text (50,1450) */
dcl
   EnemyCenter tCoordinates,
   NumVisibleShips Integer,
   EnemyShips tStringEnemyShip;
/* CIF End Text */
/* CIF Procedure (850,250),(300,100) */
/* CIF TextPosition (875,275) */
procedure StrategyStep referenced;
/* CIF Procedure (850,400),(350,100) */
/* CIF TextPosition (900,425) */
procedure EnemyCenter referenced;
/* CIF Procedure (850,550),(450,100) */
/* CIF TextPosition (900,575) */
procedure UpdateShipParams referenced;
/* CIF CurrentPage 3 */
/* CIF Start (700,100) */
start ;
/* CIF Line (800,200),(800,250) */
/* CIF NextState (700,250) */
nextstate Idle;
/* CIF State (700,250) */
state Idle;
/* CIF Line (800,350),(800,400) */
/* CIF Input (700,400) Right */
input InitData_
Complete;
/* CIF Line (800,500),(800,550) */
/* CIF Extendedtask (700,550) */
task {
/* CIF TextExtension (950,550) Right */
/* CIF Line (950,600),(900,600) */
WeaponryCharacter := import(gWeaponryCharacter);
ShipsCharacter := import(gShipsCharacter);
/* CIF End TextExtension */
};
/* CIF Line (800,650),(800,750) */
/* CIF NextState (700,750) */
nextstate InitComplete;
/* CIF End State */
endstate;
/* CIF State (700,750) */
state InitComplete;
/* CIF Line (800,850),(800,875),(550,875),(550,900) */
/* CIF Save (450,900) */
save VisibleShip;
/* CIF Line (800,850),(800,900) */
/* CIF Input (700,900) Right */
input 
/* CIF TextExtension (950,900) Right */
/* CIF Line (950,950),(900,950) */
ShipsCurrentState(StrategyID,
ShipsCurrentState)
/* CIF End TextExtension */
;
/* CIF Line (800,1000),(800,1050) */
/* CIF Label Invisible */
grst38:
/* CIF ProcedureCall (700,1050) */
call 
/* CIF TextExtension (950,1050) Right */
/* CIF Line (950,1100),(900,1100) */
UpdateShipParams
/* CIF End TextExtension */
;
/* CIF Line (800,1150),(800,1200) */
/* CIF NextState (700,1200) */
nextstate IdleVisShips;
/* CIF End State */
endstate;
/* CIF State (700,1200) */
state IdleVisShips;
/* CIF Line (800,1300),(800,1325),(650,1325),(650,1350) */
/* CIF Input (550,1350) Right */
input 
/* CIF TextExtension (500,1350) Left */
/* CIF Line (500,1400),(550,1400) */
StartSimulation(Tick)  
/* CIF End TextExtension */
;
/* CIF Line (650,1450),(650,1500) */
/* CIF ProcedureCall (550,1500) */
call 
/* CIF TextExtension (450,1500) Left */
/* CIF Line (450,1550),(550,1550) */
StrategyStep(
ShipsCurrentState)
/* CIF End TextExtension */
;
/* CIF Line (650,1600),(650,1650) */
/* CIF Output (550,1650) Right */
output 
/* CIF TextExtension (500,1650) Left */
/* CIF Line (500,1700),(550,1700) */
FinishSimulation(Tick, 
StrategyID)  
/* CIF End TextExtension */
;
/* CIF Line (650,1750),(650,1800) */
/* CIF NextState (550,1800) */
nextstate IdleRes;
/* CIF Line (800,1300),(800,1325),(950,1325),(950,1350) */
/* CIF Input (850,1350) Right */
input 
/* CIF TextExtension (1100,1350) Right */
/* CIF Line (1100,1400),(1050,1400) */
VisibleShip(StrategyID,EnemyShips)
/* CIF End TextExtension */
;
/* CIF Line (950,1450),(950,1500) */
/* CIF ProcedureCall (850,1500) */
call Enemy_
Center;
/* CIF Line (950,1600),(950,1650) */
/* CIF NextState (850,1650) */
nextstate -;
/* CIF End State */
endstate;
/* CIF State (550,1800) */
state IdleRes;
/* CIF Line (650,1900),(650,1925),(500,1925),(500,1950) */
/* CIF Input (400,1950) Right */
input 
/* CIF TextExtension (350,1950) Left */
/* CIF Line (350,2000),(400,2000) */
ShipsCurrentState(
StrategyID,
ShipsCurrentState)
/* CIF End TextExtension */
;
/* CIF Line (500,2050),(500,2200),(25,2200),(25,1025),(800,1025),(800,1050) */
/* CIF Join Invisible */
join grst38;
/* CIF Line (650,1900),(650,1925),(800,1925),(800,1950) */
/* CIF Input (700,1950) Right */
input 
/* CIF TextExtension (950,1950) Right */
/* CIF Line (950,2000),(900,2000) */
  OrderSpeedResponse, OrderSpeedReject, 
  OrderTurnResponse, OrderTurnReject, 
  OrderFireResponse, OrderFireReject, DestroyShip
/* CIF End TextExtension */
;
/* CIF Line (800,2050),(800,2100) */
/* CIF NextState (700,2100) */
nextstate -;
/* CIF End State */
endstate;
/* CIF State (1200,100) */
state *;
/* CIF Line (1300,200),(1300,250) */
/* CIF Input (1200,250) Right */
input 
/* CIF TextExtension (1450,250) Right */
/* CIF Line (1450,300),(1400,300) */
StrategyVictory(StrategyID),
StrategyLose(StrategyID)
/* CIF End TextExtension */
;
/* CIF Line (1300,350),(1300,400) */
/* CIF Stop (1250,400),(100,100) */
stop ;
/* CIF End State */
endstate;
/* CIF CurrentPage 1 */
/* CIF CurrentPage 2 */
/* CIF End ProcessDiagram */
endprocess Main1;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\UpdateShipParams.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure UpdateShipParams;
/* CIF DefaultSize (200,100) */
/* CIF Text (1300,100) */
dcl
  TempCenterX, TempCenterY Real,
   i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (250,200) */
start ;
/* CIF Line (350,300),(350,400) */
/* CIF Extendedtask (250,400) */
task {
/* CIF TextExtension (500,400) Right */
/* CIF Line (500,450),(450,450) */
NumVisibleShips := 0;
NumMyShips := length(ShipsCurrentState);
TempCenterX := 0;
TempCenterY := 0;
minSpeed := ShipsCharacter(ShipsCurrentState(1)!TypeShip)!MaxSpeed;
for (i:=1, i<=NumMyShips, i+1){
  CommandToShip(i)!isSet := false;
  CommandToShip(i)!Fire!List := empty;
  TempCenterX := TempCenterX + float(ShipsCurrentState(i)!Coordinates!x)/float(NumMyShips);
  TempCenterY := TempCenterY + float(ShipsCurrentState(i)!Coordinates!y)/float(NumMyShips);
  if (ShipsCharacter(ShipsCurrentState(i)!TypeShip)!MaxSpeed <= minSpeed) {
    minSpeed := ShipsCharacter(ShipsCurrentState(i)!TypeShip)!MaxSpeed;
  }
}
MyCenter!x := fix(TempCenterX);
MyCenter!y := fix(TempCenterY);
/* CIF End TextExtension */
};
/* CIF Line (350,500),(350,900) */
/* CIF Return (300,900),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure UpdateShipParams;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\EnemyCenter.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure EnemyCenter;
/* CIF DefaultSize (200,100) */
/* CIF Text (1250,150) */
dcl
  TempCenterX, TempCenterY Real,
   i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (100,250) */
start ;
/* CIF Line (200,350),(200,450) */
/* CIF Extendedtask (100,450) */
task {
/* CIF TextExtension (350,450) Right */
/* CIF Line (350,500),(300,500) */
TempCenterX := 0;
TempCenterY := 0;
NumVisibleShips := length(EnemyShips);
for (i:=1, i<=NumVisibleShips, i+1) {
  TempCenterX := TempCenterX + float(EnemyShips(i)!Coordinates!x)/float(NumVisibleShips);
  TempCenterY := TempCenterY + float(EnemyShips(i)!Coordinates!y)/float(NumVisibleShips);
}
 EnemyCenter!x := fix(TempCenterX);
 EnemyCenter!y := fix(TempCenterY);
/* CIF End TextExtension */
};
/* CIF Line (200,550),(200,600) */
/* CIF Return (150,600),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure EnemyCenter;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 4 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\StrategyStep.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 4 Scale 120 Grid (50,50) AutoNumbered */
procedure StrategyStep
; fpar
  in/out ShipsCurrState tStringShipCurrentState;

/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (50,300) */
newtype tTurnDirection inherits tHeadingChange
  adding literals
     STRAIGHT;
endnewtype;
/* CIF End Text */
/* CIF Text (50,500) */
newtype tCollision
   literals
     NO_COLLISION,
     LAND_COLLISION,
     ENEMY_SHIP_COLLISION,
     MY_SHIP_COLLISION;
endnewtype;
/* CIF End Text */
/* CIF Text (50,800) */
dcl
   index Integer := 1,
   CollisionType tCollision;
/* CIF End Text */
/* CIF Procedure (850,200),(350,100) */
/* CIF TextPosition (900,225) */
procedure EnemyFound referenced;
/* CIF Procedure (850,350),(400,100) */
/* CIF TextPosition (900,375) */
procedure EnemyNotFound referenced;
/* CIF Procedure (850,550),(300,100) */
/* CIF TextPosition (875,575) */
procedure NextPosition referenced;
/* CIF Procedure (850,750),(300,100) */
/* CIF TextPosition (875,775) */
procedure NextDirection referenced;
/* CIF Procedure (850,950),(450,100) */
/* CIF TextPosition (884,975) */
procedure NewHeadingChange referenced;
/* CIF Procedure (850,1150),(250,100) */
/* CIF TextPosition (875,1175) */
procedure isCollision referenced;
/* CIF Procedure (850,1300),(350,100) */
/* CIF TextPosition (900,1325) */
procedure SolveCollision referenced;
/* CIF Procedure (850,1450),(350,100) */
/* CIF TextPosition (900,1475) */
procedure NextShipState referenced;
/* CIF Procedure (850,1600),(300,100) */
/* CIF TextPosition (900,1625) */
procedure OutputOrder referenced;
/* CIF Procedure (850,1750),(450,100) */
/* CIF TextPosition (875,1775) */
procedure FindHeadingTarget referenced;
/* CIF Procedure (850,1950),(350,100) */
/* CIF TextPosition (900,1975) */
procedure FindStartPoint referenced;
/* CIF Procedure (850,2100) */
/* CIF TextPosition (875,2125) */
procedure OnLand referenced;
/* CIF CurrentPage 2 */
/* CIF ProcedureStart (750,300) */
start ;
/* CIF Line (850,400),(850,500) */
/* CIF Decision (750,500) */
decision 
/* CIF TextExtension (1200,500) Right */
/* CIF Line (1200,550),(950,550) */
NumVisibleShips = 0
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,550),(700,550),(700,700) */
/* CIF TextPosition (700,500) */
(false):
/* CIF Extendedtask (600,700) */
task {
/* CIF TextExtension (550,700) Left */
/* CIF Line (550,750),(600,750) */
if (flagFight =false)
flagFight := true;
/* CIF End TextExtension */
};
/* CIF Line (700,800),(700,850) */
/* CIF Join (650,850),(100,100) */
join Step1;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,550),(1050,550),(1050,700) */
/* CIF TextPosition (975,500) */
(true):
/* CIF Extendedtask (950,700) */
task {
/* CIF TextExtension (1200,700) Right */
/* CIF Line (1200,750),(1150,750) */
if (flagFight=true) {
  flagFight := false;
  call FindStartPoint;
}
/* CIF End TextExtension */
};
/* CIF Line (1050,800),(1050,1000) */
/* CIF Decision (950,1000) */
decision 
/* CIF TextExtension (1200,1000) Right */
/* CIF Line (1200,1050),(1150,1050) */
 ((MyCenter!x <=
   HeadingTarget!x + 5) AND
    (MyCenter!x >=
   HeadingTarget!x  - 5) AND 
    (MyCenter!y <=
   HeadingTarget!y + 5) AND 
    (MyCenter!y>=
   HeadingTarget!y  - 5)) 
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (950,1050),(900,1050),(900,1150) */
/* CIF TextPosition (900,1000) */
(true):
/* CIF ProcedureCall (800,1150) */
call 
/* CIF TextExtension (750,1150) Left */
/* CIF Line (750,1200),(800,1200) */
FindHeadingTarget
/* CIF End TextExtension */
;
/* CIF Line (900,1250),(900,1300),(1050,1300),(1050,1350) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1050,1100),(1050,1350) */
/* CIF TextPosition (1075,1100) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Join (1000,1350),(100,100) */
join Step2;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 1 */
/* CIF CurrentPage 3 */
/* CIF Label (750,250),(100,100) */
connection Step1:
/* CIF Line (800,350),(800,450) */
/* CIF Decision (700,450) */
decision 
/* CIF TextExtension (1000,450) Right */
/* CIF Line (1000,500),(900,500) */
(call getDeepXY(ShipsCurrState(index)!Coordinates!x,
ShipsCurrState(index)!Coordinates!y)) <
d2i(ShipsCharacter(ShipsCurrState(index)!_
TypeShip)!MaxDeep)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,500),(650,500),(650,650) */
/* CIF TextPosition (625,575) */
(true):
/* CIF ProcedureCall (550,650) */
call 
/* CIF TextExtension (500,650) Left */
/* CIF Line (500,700),(550,700) */
OnLand(
ShipsCurrState(index),
index)
/* CIF End TextExtension */
;
/* CIF Line (650,750),(650,775),(800,775),(800,850) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,500),(950,500),(950,650) */
/* CIF TextPosition (925,575) */
(false):
/* CIF ProcedureCall (850,650) */
call 
/* CIF TextExtension (1100,650) Right */
/* CIF Line (1100,700),(1050,700) */
EnemyFound(
ShipsCurrState(index),
index)
/* CIF End TextExtension */
;
/* CIF Line (950,750),(950,775),(800,775),(800,850) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,850) */
task {
/* CIF TextExtension (1000,850) Right */
/* CIF Line (1000,900),(900,900) */
CollisionType := 
call isCollision;
/* CIF End TextExtension */
};
/* CIF Line (800,950),(800,1000) */
/* CIF Decision (700,1000) */
decision 
/* CIF TextExtension (1000,1000) Right */
/* CIF Line (1000,1050),(900,1050) */
CollisionType
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1100),(800,1125),(650,1125),(650,1150) */
/* CIF TextPosition (525,1075) */
(NO_COLLISION):
/* CIF ProcedureCall (550,1150) */
call OutputOrder;
/* CIF Line (650,1250),(650,1275),(800,1275),(800,1300) */
/* CIF Answer */
/* CIF Line (800,1100),(800,1125),(950,1125),(950,1150) */
/* CIF TextPosition (875,1075) */
else:
/* CIF ProcedureCall (850,1150) */
call 
/* CIF TextExtension (1100,1150) Right */
/* CIF Line (1100,1200),(1050,1200) */
SolveCollision
/* CIF End TextExtension */
;
/* CIF Line (950,1250),(950,1275),(800,1275),(800,1300) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,1300) */
task {index := 
index + 1;};
/* CIF Line (800,1400),(800,1450) */
/* CIF Decision (700,1450) */
decision 
/* CIF TextExtension (950,1450) Right */
/* CIF Line (950,1500),(900,1500) */
index <=
NumMyShips
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1500),(125,1500),(125,425),(800,425),(800,450) */
/* CIF TextPosition (625,1450) */
(true):
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1550),(800,1600) */
/* CIF TextPosition (825,1550) */
(false):
/* CIF Return (750,1600),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join Step1;
/* CIF End Label */
endconnection Step1;
/* CIF CurrentPage 4 */
/* CIF Label (750,250),(100,100) */
connection Step2:
/* CIF Line (800,350),(800,450) */
/* CIF Decision (700,450) */
decision 
/* CIF TextExtension (1000,450) Right */
/* CIF Line (1000,500),(900,500) */
(call getDeepXY(ShipsCurrState(index)!Coordinates!x,
ShipsCurrState(index)!Coordinates!y)) <
d2i(ShipsCharacter(ShipsCurrState(index)!_
TypeShip)!MaxDeep)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,500),(650,500),(650,650) */
/* CIF TextPosition (575,575) */
(true):
/* CIF ProcedureCall (550,650) */
call 
/* CIF TextExtension (500,650) Left */
/* CIF Line (500,700),(550,700) */
OnLand(
ShipsCurrState(index),
index)
/* CIF End TextExtension */
;
/* CIF Line (650,750),(650,775),(800,775),(800,850) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,500),(950,500),(950,650) */
/* CIF TextPosition (925,575) */
(false):
/* CIF ProcedureCall (850,650) */
call 
/* CIF TextExtension (1100,650) Right */
/* CIF Line (1100,700),(1050,700) */
EnemyNotFound(
ShipsCurrState(index),
index)
/* CIF End TextExtension */
;
/* CIF Line (950,750),(950,775),(800,775),(800,850) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,850) */
task {
/* CIF TextExtension (1000,850) Right */
/* CIF Line (1000,900),(900,900) */
CollisionType := 
call isCollision;
/* CIF End TextExtension */
};
/* CIF Line (800,950),(800,1000) */
/* CIF Decision (700,1000) */
decision 
/* CIF TextExtension (1000,1000) Right */
/* CIF Line (1000,1050),(900,1050) */
CollisionType
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1100),(800,1125),(650,1125),(650,1150) */
/* CIF TextPosition (525,1075) */
(NO_COLLISION):
/* CIF ProcedureCall (550,1150) */
call OutputOrder;
/* CIF Line (650,1250),(650,1275),(800,1275),(800,1300) */
/* CIF Answer */
/* CIF Line (800,1100),(800,1125),(950,1125),(950,1150) */
/* CIF TextPosition (875,1075) */
else:
/* CIF ProcedureCall (850,1150) */
call 
/* CIF TextExtension (1100,1150) Right */
/* CIF Line (1100,1200),(1050,1200) */
SolveCollision
/* CIF End TextExtension */
;
/* CIF Line (950,1250),(950,1275),(800,1275),(800,1300) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,1300) */
task {index := 
index + 1;};
/* CIF Line (800,1400),(800,1450) */
/* CIF Decision (700,1450) */
decision 
/* CIF TextExtension (950,1450) Right */
/* CIF Line (950,1500),(900,1500) */
index <=
NumMyShips
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1500),(125,1500),(125,400),(800,400),(800,450) */
/* CIF TextPosition (625,1450) */
(true):
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1550),(800,1600) */
/* CIF TextPosition (825,1550) */
(false):
/* CIF Return (750,1600),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join Step2;
/* CIF End Label */
endconnection Step2;
/* CIF End ProcedureDiagram */
endprocedure StrategyStep;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\SolveCollision.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure SolveCollision;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (750,150) */
start ;
/* CIF Line (850,250),(850,350) */
/* CIF Decision (750,350) */
decision 
/* CIF TextExtension (1000,350) Right */
/* CIF Line (1000,400),(950,400) */
CollisionType
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,400),(700,400),(700,500) */
/* CIF TextPosition (350,350) */
(ENEMY_SHIP_COLLISION):
/* CIF Decision (600,500) */
decision 
/* CIF TextExtension (1000,500) Right */
/* CIF Line (1000,550),(800,550) */
((ShipsCurrState(index)!Ammunition(   
MISSILE) = 0) AND
(ShipsCurrState(index)!Ammunition(
TORPEDO) = 0) AND
(ShipsCurrState(index)!Ammunition(
SHELL) = 0) AND
(ShipsCurrState(index)!Ammunition(
REPAIR) = 0))
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,550),(500,550),(500,650) */
/* CIF TextPosition (500,500) */
(true):
/* CIF Return (450,650),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,600),(700,725),(850,725),(850,850) */
/* CIF TextPosition (725,625) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Answer */
/* CIF Line (850,450),(850,850) */
/* CIF TextPosition (875,450) */
else:
/* CIF End Decision */
enddecision;
/* CIF Decision (750,850) */
decision 
/* CIF TextExtension (1000,850) Right */
/* CIF Line (1000,900),(950,900) */
((CommandToShip(index)!isSet = true)AND
(CommandToShip(index)!OrderType = _ACCEL)AND
(CommandToShip(index)!Accel > 0))
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,950),(850,1050) */
/* CIF TextPosition (875,950) */
(true):
/* CIF Extendedtask (750,1050) */
task {
/* CIF TextExtension (1000,1050) Right */
/* CIF Line (1000,1100),(950,1100) */
CommandToShip(index)!isSet := false;
CollisionType := call isCollision;
/* CIF End TextExtension */
};
/* CIF Line (850,1150),(850,1200) */
/* CIF Decision (750,1200) */
decision 
/* CIF TextExtension (1000,1200) Right */
/* CIF Line (1000,1250),(950,1250) */
CollisionType = NO_COLLISION
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1250),(700,1250),(700,1350) */
/* CIF TextPosition (725,1200) */
(true):
/* CIF Return (650,1350),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1300),(850,1550) */
/* CIF TextPosition (875,1325) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,900),(600,900),(600,1500),(850,1500),(850,1550) */
/* CIF TextPosition (725,850) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Join (800,1550),(100,100) */
join Solv1;
/* CIF CurrentPage 2 */
/* CIF Label (900,150),(100,100) */
connection Solv1:
/* CIF Line (950,250),(950,300) */
/* CIF Extendedtask (850,300) */
task {
/* CIF TextExtension (1100,300) Right */
/* CIF Line (1100,350),(1050,350) */
CommandTo_
Ship(index)!OrderType := _RIGHT;
CommandToShip(index)!isSet := true;
CollisionType := call isCollision;
/* CIF End TextExtension */
};
/* CIF Line (950,400),(950,500) */
/* CIF Decision (850,500) */
decision 
/* CIF TextExtension (1100,500) Right */
/* CIF Line (1100,550),(1050,550) */
CollisionType = NO_COLLISION
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,550),(700,550),(700,600) */
/* CIF TextPosition (825,500) */
(true):
/* CIF Output (600,600) Right */
output 
/* CIF TextExtension (550,600) Left */
/* CIF Line (550,650),(600,650) */
OrderTurnRequest(
ShipsCurrState(index)!ShipId, 
StrategyID, RIGHT)  
/* CIF End TextExtension */
;
/* CIF Line (700,700),(700,750) */
/* CIF Return (650,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,600),(950,700) */
/* CIF TextPosition (975,625) */
(false):
/* CIF Extendedtask (850,700) */
task {
/* CIF TextExtension (1100,700) Right */
/* CIF Line (1100,750),(1050,750) */
CommandTo_
Ship(index)!OrderType := _LEFT;
CommandToShip(index)!isSet := true;
CollisionType := call isCollision;
/* CIF End TextExtension */
};
/* CIF Line (950,800),(950,950) */
/* CIF Decision (850,950) */
decision 
/* CIF TextExtension (1100,950) Right */
/* CIF Line (1100,1000),(1050,1000) */
CollisionType = NO_COLLISION
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,1000),(700,1000),(700,1050) */
/* CIF TextPosition (675,950) */
(true):
/* CIF Output (600,1050) Right */
output 
/* CIF TextExtension (550,1050) Left */
/* CIF Line (550,1100),(600,1100) */
OrderTurnRequest(
ShipsCurrState(index)!ShipId, 
StrategyID, LEFT)  
/* CIF End TextExtension */
;
/* CIF Line (700,1150),(700,1200) */
/* CIF Return (650,1200),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,1050),(950,1200) */
/* CIF TextPosition (975,1075) */
(false):
/* CIF Extendedtask (850,1200) */
task {
/* CIF TextExtension (1100,1200) Right */
/* CIF Line (1100,1250),(1050,1250) */
CommandTo_
Ship(index)!OrderType := _ACCEL;
CommandTo_
Ship(index)!Accel := -1;
CommandToShip(index)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (950,1300),(950,1400) */
/* CIF Output (850,1400) Right */
output 
/* CIF TextExtension (800,1400) Left */
/* CIF Line (800,1450),(850,1450) */
OrderSpeedRequest(
ShipsCurrState(index)!ShipId, 
StrategyID,-1)
/* CIF End TextExtension */
;
/* CIF Line (950,1500),(950,1550) */
/* CIF Return (900,1550),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection Solv1;
/* CIF End ProcedureDiagram */
endprocedure SolveCollision;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\isCollision.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure isCollision
; 
returns  tCollision;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (1050,100) */
dcl
  MyShipNextState, OtherShipNextState tShipCurrentState,
  NextPoint tCoordinates, 
  NextHead tHeading,
  IncX, IncY, i, Deep, maxDeep Integer, 
  flag  Real := 1,
  MyShipType tNameShip;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (750,100) */
start ;
/* CIF Line (850,200),(850,250) */
/* CIF Extendedtask (750,250) */
task {
/* CIF TextExtension (700,250) Left */
/* CIF Line (700,300),(750,300) */
MyShipNextState := 
call NextShipState(index);   
NextHead := 
MyShipNextState!Heading;
MyShipType :=
ShipsCurrState(index)!TypeShip;  
/* CIF End TextExtension */
};
/* CIF Line (850,350),(850,500) */
/* CIF Decision (750,500) */
decision NextHead;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,550),(250,550),(250,600) */
/* CIF TextPosition (275,550) */
(NORTH):
/* CIF Extendedtask (150,600) */
task {IncX:=0;
IncY:=1;};
/* CIF Line (250,700),(250,725),(850,725),(850,1250) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,550),(1450,550),(1450,600) */
/* CIF TextPosition (1475,550) */
(NORTH_WEST):
/* CIF Extendedtask (1350,600) */
task {
/* CIF TextExtension (1650,600) Right */
/* CIF Line (1650,650),(1550,650) */
IncX:=-1;
IncY:=1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1450,700),(1450,725),(850,725),(850,1250) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,550),(400,550),(400,750) */
/* CIF TextPosition (450,675) */
(EAST):
/* CIF Extendedtask (300,750) */
task {IncX:=1;
IncY:=0;};
/* CIF Line (400,850),(400,875),(850,875),(850,1250) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,550),(1300,550),(1300,750) */
/* CIF TextPosition (1425,750) */
(SOUTH_WEST):
/* CIF Extendedtask (1200,750) */
task {
/* CIF TextExtension (1650,750) Right */
/* CIF Line (1650,800),(1400,800) */
IncX:=-1;
IncY:=-1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1300,850),(1300,875),(850,875),(850,1250) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,550),(550,550),(550,900) */
/* CIF TextPosition (600,825) */
(WEST):
/* CIF Extendedtask (450,900) */
task {IncX:=-1;
IncY:=0;};
/* CIF Line (550,1000),(550,1025),(850,1025),(850,1250) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,550),(1150,550),(1150,900) */
/* CIF TextPosition (1300,900) */
(NORTH_EAST):
/* CIF Extendedtask (1050,900) */
task {
/* CIF TextExtension (1650,900) Right */
/* CIF Line (1650,950),(1250,950) */
IncX:=1;
IncY:=1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1150,1000),(1150,1025),(850,1025),(850,1250) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,550),(700,550),(700,1050) */
/* CIF TextPosition (725,975) */
(SOUTH):
/* CIF Extendedtask (600,1050) */
task {IncX:=0;
IncY:=-1;};
/* CIF Line (700,1150),(700,1175),(850,1175),(850,1250) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,550),(1000,550),(1000,1050) */
/* CIF TextPosition (1125,1050) */
(SOUTH_EAST):
/* CIF Extendedtask (900,1050) */
task {
/* CIF TextExtension (1650,1050) Right */
/* CIF Line (1650,1100),(1100,1100) */
IncX:=1;
IncY:=-1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1000,1150),(1000,1175),(850,1175),(850,1250) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (750,1250) */
task {
/* CIF TextExtension (1000,1250) Right */
/* CIF Line (1000,1300),(950,1300) */
NextPoint := ShipsCurrState(index)!Coordinates;
i := 1;
maxDeep := d2i(ShipsCharacter(MyShipType)!MaxDeep);
/* CIF End TextExtension */
};
/* CIF Line (850,1350),(850,1400) */
/* CIF Label Invisible */
grst39:
/* CIF Decision (750,1400) */
decision 
/* CIF TextExtension (1000,1400) Right */
/* CIF Line (1000,1450),(950,1450) */

 i<=fix(2*float(MyShipNextState!Speed)/flag)
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1500),(850,1550) */
/* CIF TextPosition (875,1500) */
(true):
/* CIF Decision (750,1550) */
decision 
/* CIF TextExtension (1000,1550) Right */
/* CIF Line (1000,1600),(950,1600) */
(NextPoint!x + IncX < 0) OR 
(NextPoint!y + IncY < 0) OR
(NextPoint!x + IncX > MaxXCoordinate) OR 
(NextPoint!y + IncY > MaxYCoordinate)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1600),(500,1600),(500,1650) */
/* CIF TextPosition (700,1550) */
(true):
/* CIF Label Invisible */
grst40:
/* CIF Join (450,1650),(100,100) */
join P1;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1650),(850,1750) */
/* CIF TextPosition (875,1675) */
(false):
/* CIF Extendedtask (750,1750) */
task {
/* CIF TextExtension (1000,1750) Right */
/* CIF Line (1000,1800),(950,1800) */
NextPoint!x := NextPoint!x + IncX;
NextPoint!y := NextPoint!y + IncY;
Deep := call getDeepXY(NextPoint!x,NextPoint!y);
/* CIF End TextExtension */
};
/* CIF Line (850,1850),(850,1900) */
/* CIF Decision (750,1900) */
decision 
/* CIF TextExtension (1000,1900) Right */
/* CIF Line (1000,1950),(950,1950) */
Deep < maxDeep
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1950),(500,1950),(500,2000) */
/* CIF TextPosition (700,1900) */
(true):
/* CIF Return (450,2000),(100,100) */
return LAND_COLLISION;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,2000),(850,2100) */
/* CIF TextPosition (875,2000) */
(false):
/* CIF Extendedtask (750,2100) */
task {i := i+1;};
/* CIF Line (850,2200),(850,2225),(400,2225),(400,1375),(850,1375),(850,1400) */
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst39;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1450),(500,1450),(500,1650) */
/* CIF TextPosition (700,1400) */
(false):
/* CIF Join Invisible */
join grst40;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 2 */
/* CIF Label (750,50),(100,100) */
connection P1:
/* CIF Line (800,150),(800,200) */
/* CIF Decision (700,200) */
decision 
/* CIF TextExtension (950,200) Right */
/* CIF Line (950,250),(900,250) */
NumVisibleShips = 0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,300),(800,350) */
/* CIF TextPosition (825,300) */
(false):
/* CIF Extendedtask (700,350) */
task {i := 1;};
/* CIF Line (800,450),(800,500) */
/* CIF Label Invisible */
grst41:
/* CIF Extendedtask (700,500) */
task {
/* CIF TextExtension (950,500) Right */
/* CIF Line (950,550),(900,550) */
NextPoint := call NextPosition(EnemyShips(i)!Coordinates,
EnemyShips(i)!Heading, EnemyShips(i)!Speed, 
EnemyShips(i)!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (800,600),(800,650) */
/* CIF Decision (700,650) */
decision 
/* CIF TextExtension (950,650) Right */
/* CIF Line (950,700),(900,700) */
NextPoint = MyShipNextState!Coordinates
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,700),(350,700),(350,750) */
/* CIF TextPosition (675,650) */
(true):
/* CIF Return (300,750),(100,100) */
return ENEMY_SHIP_COLLISION;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,750),(800,850) */
/* CIF TextPosition (825,775) */
(false):
/* CIF Extendedtask (700,850) */
task {i := i+1;};
/* CIF Line (800,950),(800,1000) */
/* CIF Decision (700,1000) */
decision 
/* CIF TextExtension (950,1000) Right */
/* CIF Line (950,1050),(900,1050) */
 i <= NumVisibleShips
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1050),(250,1050),(250,475),(800,475),(800,500) */
/* CIF TextPosition (650,1000) */
(true):
/* CIF Join Invisible */
join grst41;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1100),(800,1150) */
/* CIF TextPosition (825,1100) */
(false):
/* CIF Label Invisible */
grst42:
/* CIF Extendedtask (700,1150) */
task {i := 1;};
/* CIF Line (800,1250),(800,1300) */
/* CIF Label Invisible */
grst43:
/* CIF Decision (700,1300) */
decision index = i;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1400),(800,1450) */
/* CIF TextPosition (825,1400) */
(false):
/* CIF Extendedtask (700,1450) */
task {
/* CIF TextExtension (950,1450) Right */
/* CIF Line (950,1500),(900,1500) */
OtherShipNextState := 
call NextShipState(i);
/* CIF End TextExtension */
};
/* CIF Line (800,1550),(800,1600) */
/* CIF Decision (700,1600) */
decision 
/* CIF TextExtension (950,1600) Right */
/* CIF Line (950,1650),(900,1650) */
OtherShipNextState!Coordinates = 
MyShipNextState!Coordinates
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1650),(400,1650),(400,1700) */
/* CIF TextPosition (650,1600) */
(true):
/* CIF Return (350,1700),(100,100) */
return MY_SHIP_COLLISION;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1700),(800,1850) */
/* CIF TextPosition (825,1725) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1350),(325,1350),(325,1825),(800,1825),(800,1850) */
/* CIF TextPosition (650,1350) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,1850) */
task {i := i+1;};
/* CIF Line (800,1950),(800,2000) */
/* CIF Decision (700,2000) */
decision 
/* CIF TextExtension (950,2000) Right */
/* CIF Line (950,2050),(900,2050) */
 i <= NumMyShips
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,2050),(250,2050),(250,1275),(800,1275),(800,1300) */
/* CIF TextPosition (675,2000) */
(true):
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,2100),(800,2150) */
/* CIF TextPosition (825,2100) */
(false):
/* CIF Return (750,2150),(100,100) */
return NO_COLLISION;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst43;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,250),(175,250),(175,1125),(800,1125),(800,1150) */
/* CIF TextPosition (625,200) */
(true):
/* CIF Join Invisible */
join grst42;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection P1;
/* CIF End ProcedureDiagram */
endprocedure isCollision;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\NewHeading.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure NewHeadingChange
; fpar
    in OurShCurrState tShipCurrentState,
    TargetPoint tCoordinates;
 returns ReturnDirect tTurnDirection;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (100,350) */
newtype tCos
   Array(Integer, Real);
endnewtype;
/* CIF End Text */
/* CIF Text (100,550) */
 dcl
   NextHding tHeading,
   RightPoint, LeftPoint,  StraightPoint tCoordinates,
   i, indx  Integer,
   min Real,
   Cos tCos,
   CurrSpeed tSCMaxSpeed;
/* CIF End Text */
/* CIF Procedure (1000,350),(450,100) */
/* CIF TextPosition (1050,375) */
procedure CosBetweenVectors referenced;
/* CIF CurrentPage 2 */
/* CIF ProcedureStart (250,350) */
start ;
/* CIF Line (350,450),(350,550) */
/* CIF Extendedtask (250,550) */
task {
/* CIF TextExtension (500,550) Right */
/* CIF Line (500,600),(450,600) */
CurrSpeed := OurShCurrState!Speed;
if (CurrSpeed = 0) CurrSpeed :=  CurrSpeed+2;
NextHding := call NextDirection(
OurShCurrState!Heading,RIGHT);
RightPoint := call NextPosition(
OurShCurrState!Coordinates, NextHding, CurrSpeed, OurShCurrState!TypeShip);
 NextHding := call NextDirection(OurShCurrState!Heading,LEFT);
LeftPoint := call NextPosition(
OurShCurrState!Coordinates, NextHding, CurrSpeed, OurShCurrState!TypeShip);
StraightPoint :=call NextPosition
(OurShCurrState!Coordinates, OurShCurrState!Heading, CurrSpeed, OurShCurrState!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (350,650),(350,1000) */
/* CIF Extendedtask (250,1000) */
task {
/* CIF TextExtension (500,1000) Right */
/* CIF Line (500,1050),(450,1050) */
Cos(1) := call CosBetweenVectors(OurShCurrState!Coordinates, RightPoint, TargetPoint);
Cos(2) := call CosBetweenVectors(OurShCurrState!Coordinates, LeftPoint, TargetPoint);
Cos(3) := call CosBetweenVectors(OurShCurrState!Coordinates, StraightPoint, TargetPoint);
/* CIF End TextExtension */
};
/* CIF Line (350,1100),(350,1150) */
/* CIF Extendedtask (250,1150) */
task {
/* CIF TextExtension (500,1150) Right */
/* CIF Line (500,1200),(450,1200) */
min := Cos(1);
indx := 1;
for( i :=2, i<=3, i+1){
  if (Cos(i) > min) {
     min := Cos(i);
     indx := i;
  }
} 
/* CIF End TextExtension */
};
/* CIF Line (350,1250),(350,1450) */
/* CIF Extendedtask (250,1450) */
task {
/* CIF TextExtension (500,1450) Right */
/* CIF Line (500,1500),(450,1500) */
if (indx = 1) ReturnDirect:=RIGHT;
else {
if (indx = 2) ReturnDirect:=LEFT;
 else ReturnDirect:=STRAIGHT;
}
/* CIF End TextExtension */
};
/* CIF Line (350,1550),(350,1650) */
/* CIF Return (300,1650),(100,100) */
return ReturnDirect;
/* CIF CurrentPage 1 */
/* CIF End ProcedureDiagram */
endprocedure NewHeadingChange;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\CosBetweenVectors.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure CosBetweenVectors
; fpar
  in StartPoint, EndPoint1, EndPoint2 tCoordinates; 
returns Cos Real;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (400,300) */
start ;
/* CIF Line (500,400),(500,450) */
/* CIF Decision (400,450) */
decision 
/* CIF TextExtension (800,450) Right */
/* CIF Line (800,500),(600,500) */
(StartPoint = EndPoint1) OR (StartPoint = EndPoint2)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (400,500),(150,500),(150,550) */
/* CIF TextPosition (375,450) */
(true):
/* CIF Extendedtask (50,550) */
task {Cos := -2;};
/* CIF Line (150,650),(150,700) */
/* CIF Return (100,700),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,550),(500,600) */
/* CIF TextPosition (525,550) */
(false):
/* CIF Decision (400,600) */
decision 
/* CIF TextExtension (800,600) Right */
/* CIF Line (800,650),(600,650) */
( (EndPoint1!x - StartPoint!x = 0) AND (EndPoint2!x - StartPoint!x =0) AND 
   ((EndPoint1!y - StartPoint!y)*(EndPoint2!y - StartPoint!y) > 0) )
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,700),(500,750) */
/* CIF TextPosition (525,700) */
(false):
/* CIF Decision (400,750) */
decision 
/* CIF TextExtension (800,750) Right */
/* CIF Line (800,800),(600,800) */
( (EndPoint1!y - StartPoint!y = 0) AND (EndPoint2!y - StartPoint!y =0) AND 
   ((EndPoint1!x - StartPoint!x)*(EndPoint2!x - StartPoint!x) > 0) )
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,850),(500,900) */
/* CIF TextPosition (525,875) */
(false):
/* CIF Decision (400,900) */
decision 
/* CIF TextExtension (800,900) Right */
/* CIF Line (800,950),(600,950) */
( (EndPoint1!y - StartPoint!y /= 0) AND (EndPoint2!y - StartPoint!y /=0)) AND
( (EndPoint1!x - StartPoint!x /= 0) AND (EndPoint2!x - StartPoint!x /=0)) AND
 ( float(EndPoint1!x - StartPoint!x)/float(EndPoint2!x - StartPoint!x) = 
   float(EndPoint1!y - StartPoint!y)/float(EndPoint2!y - StartPoint!y) )AND
 ( ((EndPoint1!x - StartPoint!x)*(EndPoint2!x - StartPoint!x) > 0) AND
    ((EndPoint1!y - StartPoint!y)*(EndPoint2!y - StartPoint!y) > 0) )
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (400,950),(350,950),(350,1150) */
/* CIF TextPosition (325,975) */
(true):
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (600,950),(650,950),(650,1150) */
/* CIF TextPosition (675,975) */
(false):
/* CIF Extendedtask (550,1150) */
task {
/* CIF TextExtension (800,1150) Right */
/* CIF Line (800,1200),(750,1200) */
Cos := float((EndPoint1!x - StartPoint!x)*(EndPoint2!x - StartPoint!x) 
                   + (EndPoint1!y - StartPoint!y)*(EndPoint2!y - StartPoint!y))/
float((call getDistance(StartPoint!x, StartPoint!y, EndPoint1!x, EndPoint1!y))*
         (call getDistance(StartPoint!x, StartPoint!y, EndPoint2!x, EndPoint2!y)));
/* CIF End TextExtension */
};
/* CIF Line (650,1250),(650,1300) */
/* CIF Return (600,1300),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (400,800),(350,800),(350,1150) */
/* CIF TextPosition (325,825) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (400,650),(350,650),(350,1150) */
/* CIF TextPosition (325,675) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (250,1150) */
task {Cos := 2;};
/* CIF Line (350,1250),(350,1300) */
/* CIF Return (300,1300),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure CosBetweenVectors;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\NextDirection.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure NextDirection
; fpar
  CurrHding tHeading,
  Dir tHeadingChange;
  returns NewHeading tHeading;
/* CIF DefaultSize (200,100) */
/* CIF Text (1350,150) */
dcl
   Numbr Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,200) */
start ;
/* CIF Line (800,300),(800,400) */
/* CIF Extendedtask (700,400) */
task {
/* CIF TextExtension (950,400) Right */
/* CIF Line (950,450),(900,450) */
Numbr := h2i(CurrHding);
/* CIF End TextExtension */
};
/* CIF Line (800,500),(800,600) */
/* CIF Decision (700,600) */
decision Dir;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,650),(650,650),(650,750) */
/* CIF TextPosition (550,675) */
(RIGHT):
/* CIF Extendedtask (550,750) */
task {
/* CIF TextExtension (500,750) Left */
/* CIF Line (500,800),(550,800) */
Numbr := Numbr +1;
if (Numbr > 7) Numbr := 0;
/* CIF End TextExtension */
};
/* CIF Line (650,850),(650,875),(800,875),(800,950) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,650),(950,650),(950,750) */
/* CIF TextPosition (975,675) */
(LEFT):
/* CIF Extendedtask (850,750) */
task {
/* CIF TextExtension (1100,750) Right */
/* CIF Line (1100,800),(1050,800) */
Numbr := Numbr -1;
if (Numbr < 0) Numbr:= 7;
/* CIF End TextExtension */
};
/* CIF Line (950,850),(950,875),(800,875),(800,950) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,950) */
task {
/* CIF TextExtension (950,950) Right */
/* CIF Line (950,1000),(900,1000) */
NewHeading := i2h(Numbr);
/* CIF End TextExtension */
};
/* CIF Line (800,1050),(800,1150) */
/* CIF Return (750,1150),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure NextDirection;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\NextPosition.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure NextPosition
; fpar
  CurrPos tCoordinates,
  Direct tHeading,
  Speed tSCMaxSpeed,
  NameShip tNameShip;
  returns NextPos tCoordinates;
/* CIF DefaultSize (200,100) */
/* CIF Text (1300,100) */
dcl
  IncX, IncY, Deep, maxDeep Integer,
  flag Real := 1,
  i Integer := 1,
  onLand Boolean;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,150) */
start ;
/* CIF Line (800,250),(800,350) */
/* CIF Decision (700,350) */
decision Direct;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,400),(200,400),(200,450) */
/* CIF TextPosition (225,400) */
(NORTH):
/* CIF Extendedtask (100,450) */
task {IncX:=0;
IncY:=1;};
/* CIF Line (200,550),(200,575),(800,575),(800,1100) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,400),(1450,400),(1450,450) */
/* CIF TextPosition (1475,400) */
(NORTH_WEST):
/* CIF Extendedtask (1350,450) */
task {
/* CIF TextExtension (1600,450) Right */
/* CIF Line (1600,500),(1550,500) */
IncX:=-1;
IncY:=1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1450,550),(1450,575),(800,575),(800,1100) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,400),(350,400),(350,600) */
/* CIF TextPosition (375,525) */
(EAST):
/* CIF Extendedtask (250,600) */
task {IncX:=1;
IncY:=0;};
/* CIF Line (350,700),(350,725),(800,725),(800,1100) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,400),(1250,400),(1250,600) */
/* CIF TextPosition (1375,600) */
(SOUTH_WEST):
/* CIF Extendedtask (1150,600) */
task {
/* CIF TextExtension (1600,600) Right */
/* CIF Line (1600,650),(1350,650) */
IncX:=-1;
IncY:=-1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1250,700),(1250,725),(800,725),(800,1100) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,400),(500,400),(500,750) */
/* CIF TextPosition (525,675) */
(WEST):
/* CIF Extendedtask (400,750) */
task {IncX:=-1;
IncY:=0;};
/* CIF Line (500,850),(500,875),(800,875),(800,1100) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,400),(1100,400),(1100,750) */
/* CIF TextPosition (1225,750) */
(NORTH_EAST):
/* CIF Extendedtask (1000,750) */
task {
/* CIF TextExtension (1600,750) Right */
/* CIF Line (1600,800),(1200,800) */
IncX:=1;
IncY:=1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1100,850),(1100,875),(800,875),(800,1100) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,400),(650,400),(650,900) */
/* CIF TextPosition (675,825) */
(SOUTH):
/* CIF Extendedtask (550,900) */
task {IncX:=0;
IncY:=-1;};
/* CIF Line (650,1000),(650,1025),(800,1025),(800,1100) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,400),(950,400),(950,900) */
/* CIF TextPosition (1075,900) */
(SOUTH_EAST):
/* CIF Extendedtask (850,900) */
task {
/* CIF TextExtension (1600,900) Right */
/* CIF Line (1600,950),(1050,950) */
IncX:=1;
IncY:=-1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (950,1000),(950,1025),(800,1025),(800,1100) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,1100) */
task {
/* CIF TextExtension (950,1100) Right */
/* CIF Line (950,1150),(900,1150) */
onLand := false;
NextPos := CurrPos;
maxDeep := d2i(ShipsCharacter(NameShip)!MaxDeep);
Deep := call getDeepXY(NextPos!x,NextPos!y);
if (Deep < maxDeep) onLand := true;
/* CIF End TextExtension */
};
/* CIF Line (800,1200),(800,1350) */
/* CIF Label Invisible */
grst44:
/* CIF Decision (700,1350) */
decision 
/* CIF TextExtension (950,1350) Right */
/* CIF Line (950,1400),(900,1400) */
 i<=fix(float(Speed)/flag)
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1450),(800,1500) */
/* CIF TextPosition (825,1450) */
(true):
/* CIF Decision (700,1500) */
decision 
/* CIF TextExtension (950,1500) Right */
/* CIF Line (950,1550),(900,1550) */
(NextPos!x + IncX < 0) OR 
(NextPos!y + IncY < 0) OR
(NextPos!x + IncX > MaxXCoordinate) OR 
(NextPos!y + IncY > MaxYCoordinate) OR
( (Deep < maxDeep) AND (onLand = false) )
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1550),(500,1550),(500,1600) */
/* CIF TextPosition (650,1500) */
(true):
/* CIF Label Invisible */
grst45:
/* CIF Return (450,1600),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1600),(800,1700) */
/* CIF TextPosition (825,1625) */
(false):
/* CIF Extendedtask (700,1700) */
task {
/* CIF TextExtension (950,1700) Right */
/* CIF Line (950,1750),(900,1750) */
NextPos!x := NextPos!x + IncX;
NextPos!y := NextPos!y + IncY;
Deep := call getDeepXY(NextPos!x,NextPos!y);
/* CIF End TextExtension */
};
/* CIF Line (800,1800),(800,1850) */
/* CIF Extendedtask (700,1850) */
task {i := i+1;};
/* CIF Line (800,1950),(800,1975),(400,1975),(400,1325),(800,1325),(800,1350) */
/* CIF Join Invisible */
join grst44;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1400),(500,1400),(500,1600) */
/* CIF TextPosition (650,1350) */
(false):
/* CIF Join Invisible */
join grst45;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure NextPosition;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\NextShipState.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure NextShipState
;fpar
   in ShipIndex Integer;
returns ShipNextState tShipCurrentState;
/* CIF DefaultSize (200,100) */
/* CIF Text (1350,100) */
dcl
   OldSpeed tSCMaxSpeed,
   OldHeading tHeading,
   OldCoords tCoordinates,
   TypeShp tNameShip,
   TempSpeed Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (600,250) */
start ;
/* CIF Line (700,350),(700,400) */
/* CIF Extendedtask (600,400) */
task {
/* CIF TextExtension (900,400) Right */
/* CIF Line (900,450),(800,450) */
OldSpeed := ShipsCurrState(ShipIndex)!Speed;
OldHeading := ShipsCurrState(ShipIndex)!Heading;
OldCoords := ShipsCurrState(ShipIndex)!Coordinates;
TypeShp := ShipsCurrState(ShipIndex)!TypeShip;
/* CIF End TextExtension */
};
/* CIF Line (700,500),(700,600) */
/* CIF Decision (600,600) */
decision 
/* CIF TextExtension (900,600) Right */
/* CIF Line (900,650),(800,650) */
CommandToShip(ShipIndex)!isSet
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,700),(700,800) */
/* CIF TextPosition (725,725) */
(true):
/* CIF Decision (600,800) */
decision 
/* CIF TextExtension (1000,800) Right */
/* CIF Line (1000,850),(800,850) */
CommandToShip(ShipIndex)!OrderType
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,850),(850,850),(850,950) */
/* CIF TextPosition (850,900) */
(_ACCEL):
/* CIF Extendedtask (750,950) */
task {
/* CIF TextExtension (1000,950) Right */
/* CIF Line (1000,1000),(950,1000) */
TempSpeed := OldSpeed +
fix(float(ShipsCharacter(TypeShp)!_
MaxAcceleration)*Command_
ToShip(ShipIndex)!Accel);
if (TempSpeed < 0)  ShipNextState!Speed := 0;
if (TempSpeed > (ShipsCharacter(TypeShp)!MaxSpeed)) 
ShipNextState!Speed := ShipsCharacter(TypeShp)!MaxSpeed;
ShipNextState!Heading := OldHeading;
ShipNextState!Coordinates := call NextPosition
(OldCoords, OldHeading, ShipNextState!Speed, 
ShipNextState!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (850,1050),(850,2050) */
/* CIF Label Invisible */
grst46:
/* CIF Return (800,2050),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,900),(700,1350) */
/* CIF TextPosition (725,1300) */
(_RIGHT):
/* CIF Extendedtask (600,1350) */
task {
/* CIF TextExtension (1000,1350) Right */
/* CIF Line (1000,1400),(800,1400) */
ShipNextState!Speed := OldSpeed;
ShipNextState!Heading := call NextDirection(
OldHeading, RIGHT);
ShipNextState!Coordinates := call NextPosition(
OldCoords,ShipNextState!Heading, OldSpeed, 
ShipNextState!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (700,1450),(700,1475),(850,1475),(850,2050) */
/* CIF Join Invisible */
join grst46;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,850),(550,850),(550,1600) */
/* CIF TextPosition (575,1550) */
(_LEFT):
/* CIF Extendedtask (450,1600) */
task {
/* CIF TextExtension (1000,1600) Right */
/* CIF Line (1000,1650),(650,1650) */
ShipNextState!Speed := OldSpeed;
ShipNextState!Heading := call NextDirection(
OldHeading, LEFT);
ShipNextState!Coordinates := call NextPosition(
OldCoords,ShipNextState!Heading, OldSpeed, 
ShipNextState!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (550,1700),(550,1725),(850,1725),(850,2050) */
/* CIF Join Invisible */
join grst46;
/* CIF Answer Left */
/* CIF Line (600,850),(400,850),(400,1850) */
/* CIF TextPosition (425,1800) */
else:
/* CIF Label Invisible */
grst47:
/* CIF Extendedtask (300,1850) */
task {
/* CIF TextExtension (1000,1850) Right */
/* CIF Line (1000,1900),(500,1900) */
ShipNextState!Speed := OldSpeed;
ShipNextState!Heading := OldHeading;
ShipNextState!Coordinates := call NextPosition(
OldCoords,OldHeading, OldSpeed, ShipNextState!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (400,1950),(400,1975),(850,1975),(850,2050) */
/* CIF Join Invisible */
join grst46;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,650),(400,650),(400,1850) */
/* CIF TextPosition (550,600) */
(false):
/* CIF Join Invisible */
join grst47;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure NextShipState;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\EnemyNotFound.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure EnemyNotFound
; fpar
  in/out ShCurrSt tShipCurrentState,
  in k Integer;
/* CIF DefaultSize (200,100) */
/* CIF Text (1250,50) */
dcl
   ChangeDirection tTurnDirection,
   accel Integer,
   ShipName tNameShip,
   MaxAccel tSCMaxAcceleration,
   factorAccel tFactorAcceleration;
   
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (600,200) */
start ;
/* CIF Line (700,300),(700,400) */
/* CIF Extendedtask (600,400) */
task {
/* CIF TextExtension (900,400) Right */
/* CIF Line (900,450),(800,450) */
ChangeDirection := 
 call NewHeadingChange(ShCurrSt,HeadingTarget);
ShipName := ShCurrSt!TypeShip;
/* CIF End TextExtension */
};
/* CIF Line (700,500),(700,650) */
/* CIF Decision (600,650) */
decision 
/* CIF TextExtension (1100,650) Right */
/* CIF Line (1100,700),(800,700) */
ChangeDirection
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,700),(500,700),(500,800) */
/* CIF TextPosition (400,725) */
(RIGHT):
/* CIF Extendedtask (400,800) */
task {
/* CIF TextExtension (350,800) Left */
/* CIF Line (350,850),(400,850) */
CommandTo_
Ship(k)!_
OrderType := 
_RIGHT;
CommandTo_
Ship(k)!is_
Set := true;
/* CIF End TextExtension */
};
/* CIF Line (500,900),(500,950) */
/* CIF Return (450,950),(100,100) */
return ;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,700),(950,700),(950,800) */
/* CIF TextPosition (975,725) */
(LEFT):
/* CIF Extendedtask (850,800) */
task {
/* CIF TextExtension (1100,800) Right */
/* CIF Line (1100,850),(1050,850) */
CommandTo_
Ship(k)!_
OrderType :=
 _LEFT;
CommandTo_
Ship(k)!is_
Set := true; 
/* CIF End TextExtension */
};
/* CIF Line (950,900),(950,950) */
/* CIF Return (900,950),(100,100) */
return ;
/* CIF Answer */
/* CIF Line (700,750),(700,1100) */
/* CIF TextPosition (725,750) */
else:
/* CIF Decision (600,1100) */
decision 
/* CIF TextExtension (850,1100) Right */
/* CIF Line (850,1150),(800,1150) */
ShCurrSt!Speed = minSpeed
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,1200),(700,1250) */
/* CIF TextPosition (725,1200) */
(false):
/* CIF Extendedtask (600,1250) */
task {
/* CIF TextExtension (850,1250) Right */
/* CIF Line (850,1300),(800,1300) */
MaxAccel := ShipsCharacter(
ShipName)!MaxAcceleration;
accel := minSpeed - ShCurrSt!Speed;
if (float(accel)/float(MaxAccel) <= -1)  factorAccel := -1;
else {
  if (float(accel)/float(MaxAccel) >= 1)  factorAccel := 1;
  else factorAccel := float(accel)/float(MaxAccel);
}
CommandTo_
Ship(index)!OrderType := _ACCEL;
CommandToShip(k)!Accel := factorAccel;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (700,1350),(700,1450) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,1150),(575,1150),(575,1425),(700,1425),(700,1450) */
/* CIF TextPosition (550,1100) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (650,1450),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure EnemyNotFound;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 4 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\EnemyFound.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 4 Scale 120 Grid (50,50) AutoNumbered */
procedure EnemyFound
; fpar
  in/out ShCurrSt tShipCurrentState,
  in k Integer;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (100,300) */
newtype tShootWeaponry
struct
   TypeWeaponry tNameWeaponry;
   isWeaponry Boolean;
endnewtype;
/* CIF End Text */
/* CIF Text (100,550) */
newtype tShootList
struct
   SortParam Real;
   Number Integer;
endnewtype;
/* CIF End Text */
/* CIF Text (100,800) */
newtype tStringShootList
  String(tShootList,empty);
endnewtype;
/* CIF End Text */
/* CIF Text (100,950) */
dcl
   MaxPointsToShoot, NumPointsToShoot,i,j Integer,
   DistBetweenShips Integer,
   NextHeading tTurnDirection,
   CanShootWeaponry tShootWeaponry,
   BestWeaponry tNameWeaponry,
   ShootPoint, Temp tShootList,
   ShootList tStringShootList,
   PointToOrder tCoordinates,
   DestroyFlag Boolean := false;
/* CIF End Text */
/* CIF Procedure (850,300),(400,100) */
/* CIF TextPosition (900,325) */
procedure ActivateREPAIR referenced;
/* CIF Procedure (850,450),(550,100) */
/* CIF TextPosition (922,475) */
procedure CanShootEnemyCenter referenced;
/* CIF Procedure (850,600),(350,100) */
/* CIF TextPosition (900,625) */
procedure SortShootList referenced;
/* CIF CurrentPage 2 */
/* CIF ProcedureStart (850,150) */
start ;
/* CIF Line (950,250),(950,350) */
/* CIF Decision (850,350) */
decision 
/* CIF TextExtension (550,350) Left */
/* CIF Line (550,400),(850,400) */
ShCurrSt!TypeShip
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,400),(700,400),(700,550) */
/* CIF TextPosition (725,475) */
(REPAIR_BOAT):
/* CIF Extendedtask (600,550) */
task {
/* CIF TextExtension (550,550) Left */
/* CIF Line (550,600),(600,600) */
for (i:=1, i<=NumMyShips, i+1) {
     if (ShipsCurrState(i)!Resource < 
         ShipsCharacter
         (ShipsCurrState(i)!_
         TypeShip)!MaxResource) {
         DestroyFlag := true;
         break; 
     }
}
/* CIF End TextExtension */
};
/* CIF Line (700,650),(700,1000) */
/* CIF Decision (600,1000) */
decision 
/* CIF TextExtension (550,1000) Left */
/* CIF Line (550,1050),(600,1050) */
(ShCurrSt!_
Ammunition
(REPAIR) /= 0) AND
(DestroyFlag = true) AND
(NumMyShips > 1)
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,1050),(1000,1050),(1000,1150) */
/* CIF TextPosition (825,1000) */
(true):
/* CIF ProcedureCall (900,1150) */
call 
/* CIF TextExtension (1150,1150) Right */
/* CIF Line (1150,1200),(1100,1200) */
ActivateREPAIR
/* CIF End TextExtension */
;
/* CIF Line (1000,1250),(1000,1300) */
/* CIF Return (950,1300),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,1100),(700,1450) */
/* CIF TextPosition (725,1100) */
(false):
/* CIF Decision (600,1450) */
decision 
/* CIF TextExtension (900,1450) Right */
/* CIF Line (900,1500),(800,1500) */
NumMyShips = 1
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,1500),(550,1500),(550,1600) */
/* CIF TextPosition (650,1550) */
(false):
/* CIF Task (450,1600) */
task 
/* CIF TextExtension (400,1600) Left */
/* CIF Line (400,1650),(450,1650) */
NextHeading := call
NewHeadingChange( 
ShCurrSt,MyCenter)
/* CIF End TextExtension */
;
/* CIF Line (550,1700),(550,1725),(700,1725),(700,1800) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,1500),(850,1500),(850,1600) */
/* CIF TextPosition (775,1550) */
(true):
/* CIF Task (750,1600) */
task 
/* CIF TextExtension (1000,1600) Right */
/* CIF Line (1000,1650),(950,1650) */
NextHeading := call
NewHeadingChange(ShCurrSt,
EnemyCenter)
/* CIF End TextExtension */
;
/* CIF Line (850,1700),(850,1725),(700,1725),(700,1800) */
/* CIF End Decision */
enddecision;
/* CIF Join (650,1800),(100,100) */
join F2;
/* CIF End Decision */
enddecision;
/* CIF Answer Right */
/* CIF Line (1050,400),(1250,400),(1250,500) */
/* CIF TextPosition (1175,450) */
else:
/* CIF Task (1150,500) */
task 
/* CIF TextExtension (1400,500) Right */
/* CIF Line (1400,550),(1350,550) */
CanShootWeaponry := 
call CanShootEnemyCenter
/* CIF End TextExtension */
;
/* CIF Line (1250,600),(1250,650) */
/* CIF Decision (1150,650) */
decision 
/* CIF TextExtension (1400,650) Right */
/* CIF Line (1400,700),(1350,700) */
CanShootWeaponry!isWeaponry
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1150,700),(1000,700),(1000,750) */
/* CIF TextPosition (1150,650) */
(true):
/* CIF Join (950,750),(100,100) */
join F1;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1250,750),(1250,850) */
/* CIF TextPosition (1275,775) */
(false):
/* CIF Task (1150,850) */
task 
/* CIF TextExtension (1400,850) Right */
/* CIF Line (1400,900),(1350,900) */
NextHeading := call
NewHeadingChange(ShCurrSt,
EnemyCenter)
/* CIF End TextExtension */
;
/* CIF Line (1250,950),(1250,1000) */
/* CIF Join (1200,1000),(100,100) */
join F2;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 1 */
/* CIF CurrentPage 3 */
/* CIF Label (850,250),(100,100) */
connection F2:
/* CIF Line (900,350),(900,450) */
/* CIF Decision (800,450) */
decision 
/* CIF TextExtension (1050,450) Right */
/* CIF Line (1050,500),(1000,500) */
NextHeading
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,550),(900,650) */
/* CIF TextPosition (950,575) */
(LEFT):
/* CIF Extendedtask (800,650) */
task {
/* CIF TextExtension (1050,650) Right */
/* CIF Line (1050,700),(1000,700) */
CommandToShip(k)!_
OrderType := _LEFT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (900,750),(900,950) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,500),(700,500),(700,800) */
/* CIF TextPosition (725,575) */
(RIGHT):
/* CIF Extendedtask (600,800) */
task {
/* CIF TextExtension (1050,800) Right */
/* CIF Line (1050,850),(800,850) */
CommandToShip(k)!_
OrderType := _RIGHT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (700,900),(700,925),(900,925),(900,950) */
/* CIF Answer Left */
/* CIF Line (800,500),(550,500),(550,1050) */
/* CIF TextPosition (625,575) */
else:
/* CIF Decision (450,1050) */
decision 
/* CIF TextExtension (1050,1050) Right */
/* CIF Line (1050,1100),(650,1100) */
ShCurrSt!Speed = 
ShipsCharacter_
(ShCurrSt!TypeShip)!_
MaxSpeed 
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (650,1100),(750,1100),(750,1250) */
/* CIF TextPosition (650,1050) */
(false):
/* CIF Extendedtask (650,1250) */
task {
/* CIF TextExtension (1050,1250) Right */
/* CIF Line (1050,1300),(850,1300) */
CommandToShip(k)!_
OrderType := _ACCEL;
CommandToShip(k)!Accel := 1;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (750,1350),(750,1375),(550,1375),(550,1400) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (550,1150),(550,1400) */
/* CIF TextPosition (475,1175) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (500,1400),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF Return (850,950),(100,100) */
return ;
/* CIF End Label */
endconnection F2;
/* CIF CurrentPage 4 */
/* CIF Label (700,50),(100,100) */
connection F1:
/* CIF Line (750,150),(750,200) */
/* CIF Decision (650,200) */
decision 
/* CIF TextExtension (950,200) Right */
/* CIF Line (950,250),(850,250) */
ShCurrSt!Speed = 0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,300),(750,350) */
/* CIF TextPosition (775,300) */
(false):
/* CIF Extendedtask (650,350) */
task {
/* CIF TextExtension (900,350) Right */
/* CIF Line (900,400),(850,400) */
CommandToShip(k)!OrderType := _ACCEL;  
CommandToShip(k)!Accel := -1;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (750,450),(750,500) */
/* CIF Return (700,500),(100,100) */
return ;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,250),(250,250),(250,650) */
/* CIF TextPosition (575,250) */
(true):
/* CIF Extendedtask (150,650) */
task {
/* CIF TextExtension (400,650) Right */
/* CIF Line (400,700),(350,700) */
BestWeaponry := CanShootWeaponry!TypeWeaponry;
if (ShipsCharacter(ShCurrSt!TypeShip)!MaxLaunchUnit(BestWeaponry) < 
    ShCurrSt!Ammunition(BestWeaponry))
    MaxPointsToShoot :=  ShipsCharacter(ShCurrSt!TypeShip)!_
                                            MaxLaunchUnit(BestWeaponry);
else 
    MaxPointsToShoot := ShCurrSt!Ammunition(BestWeaponry);
for (i:=1, i<=NumVisibleShips, i+1) {
     DistBetweenShips := call
     getDistance(ShCurrSt!Coordinates!x,ShCurrSt!Coordinates!y,
     EnemyShips(i)!Coordinates!x,EnemyShips(i)!Coordinates!y);
     if (WeaponryCharacter(BestWeaponry)!Range >= DistBetweenShips) {
         ShootPoint!SortParam := float(DistBetweenShips);
         ShootPoint!Number := i;
         ShootList := ShootList // mkstring(ShootPoint);
     }
}
call SortShootList;
if (length(ShootList) > MaxPointsToShoot) NumPointsToShoot := MaxPointsToShoot;
else NumPointsToShoot := length(ShootList);
CommandToShip(k)!OrderType := _FIRE;
CommandToShip(k)!Fire!Weapon := BestWeaponry;
for (i:=1, i<=NumPointsToShoot, i+1) {
  PointToOrder := call NextPosition(EnemyShips(ShootList(i)!Number)!Coordinates, 
                                                               EnemyShips(ShootList(i)!Number)!Heading, 
                                                               EnemyShips(ShootList(i)!Number)!Speed, 
                                                               EnemyShips(ShootList(i)!Number)!TypeShip);
  CommandToShip(k)!Fire!List := CommandToShip(k)!Fire!List // mkstring(PointToOrder);
}
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (250,750),(250,850) */
/* CIF Return (200,850),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection F1;
/* CIF End ProcedureDiagram */
endprocedure EnemyFound;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\ActivateREPAIR.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure ActivateREPAIR;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (1350,100) */
dcl
   NextShipSt tShipCurrentState;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (250,100) */
start ;
/* CIF Line (350,200),(350,250) */
/* CIF Extendedtask (250,250) */
task {
/* CIF TextExtension (500,250) Right */
/* CIF Line (500,300),(450,300) */
for (i:=1, i<=NumMyShips, i+1) {
     DistBetweenShips :=  call
     getDistance(ShCurrSt!Coordinates!x,ShCurrSt!Coordinates!y,
     ShipsCurrState(i)!Coordinates!x,ShipsCurrState(i)!Coordinates!y);
     if ((WeaponryCharacter(REPAIR)!Range >= DistBetweenShips) AND
         (ShipsCurrState(i)!Resource < 
          ShipsCharacter(ShipsCurrState(i)!TypeShip)!MaxResource)) {
          ShootPoint!SortParam := 
          float(ShipsCurrState(i)!Resource)/float(ShipsCharacter(ShipsCurrState(i)!TypeShip)!_
          MaxResource);
          ShootPoint!Number := i;
          ShootList := ShootList // mkstring(ShootPoint);
     }
}
/* CIF End TextExtension */
};
/* CIF Line (350,350),(350,800) */
/* CIF Decision (250,800) */
decision 
/* CIF TextExtension (650,800) Right */
/* CIF Line (650,850),(450,850) */
length(ShootList) = 0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (350,900),(350,950) */
/* CIF TextPosition (375,900) */
(false):
/* CIF Decision (250,950) */
decision 
/* CIF TextExtension (650,950) Right */
/* CIF Line (650,1000),(450,1000) */
ShCurrSt!Speed = 0
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (450,1000),(500,1000),(500,1100) */
/* CIF TextPosition (525,1050) */
(false):
/* CIF Extendedtask (400,1100) */
task {
/* CIF TextExtension (650,1100) Right */
/* CIF Line (650,1150),(600,1150) */
CommandToShip(k)!OrderType := _ACCEL;  
CommandToShip(k)!Accel := -1;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (500,1200),(500,1250) */
/* CIF Return (450,1250),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (350,1050),(350,1400) */
/* CIF TextPosition (275,1050) */
(true):
/* CIF ProcedureCall (250,1400) */
call 
/* CIF TextExtension (550,1400) Right */
/* CIF Line (550,1450),(450,1450) */
SortShootList
/* CIF End TextExtension */
;
/* CIF Line (350,1500),(350,1550) */
/* CIF Extendedtask (250,1550) */
task {
/* CIF TextExtension (550,1550) Right */
/* CIF Line (550,1600),(450,1600) */
if (ShipsCharacter(REPAIR_BOAT)!MaxLaunchUnit(REPAIR) < 
    ShCurrSt!Ammunition(REPAIR))
    MaxPointsToShoot :=  ShipsCharacter(REPAIR_BOAT)!_
                                            MaxLaunchUnit(REPAIR);
else 
    MaxPointsToShoot := ShCurrSt!Ammunition(REPAIR);
if (length(ShootList) > MaxPointsToShoot) NumPointsToShoot := MaxPointsToShoot;
else NumPointsToShoot := length(ShootList);
CommandToShip(k)!OrderType := _FIRE;
CommandToShip(k)!Fire!Weapon := REPAIR;
for (i:=1, i<=NumPointsToShoot, i+1) {
  NextShipSt := call NextShipState(ShootList(i)!Number);
  PointToOrder := NextShipSt!Coordinates;
  CommandToShip(k)!Fire!List := CommandToShip(k)!Fire!List // mkstring(PointToOrder);
}
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (350,1650),(350,2000) */
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (250,850),(150,850),(150,1100) */
/* CIF TextPosition (225,800) */
(true):
/* CIF Join (100,1100),(100,100) */
join R1;
/* CIF End Decision */
enddecision;
/* CIF Label (100,1850),(100,100) */
R2:
/* CIF Line (150,1950),(150,1975),(350,1975),(350,2000) */
/* CIF Return (300,2000),(100,100) */
return ;
/* CIF CurrentPage 2 */
/* CIF Label (550,100),(100,100) */
connection R1:
/* CIF Line (600,200),(600,300) */
/* CIF Extendedtask (500,300) */
task {
/* CIF TextExtension (750,300) Right */
/* CIF Line (750,350),(700,350) */
ShootList := empty;
for (i:=1, i<=NumMyShips, i+1) {
     DistBetweenShips := call
     getDistance(ShCurrSt!Coordinates!x,ShCurrSt!Coordinates!y,
     ShipsCurrState(i)!Coordinates!x,ShipsCurrState(i)!Coordinates!y);
     if (ShipsCurrState(i)!Resource < 
         ShipsCharacter(ShipsCurrState(i)!TypeShip)!MaxResource) {
         ShootPoint!SortParam := 
         float(ShipsCurrState(i)!Resource)/float(ShipsCharacter(
                  ShipsCurrState(i)!TypeShip)!MaxResource);
         ShootPoint!Number := i;
         ShootList := ShootList // mkstring(ShootPoint);
     }
}
/* CIF End TextExtension */
};
/* CIF Line (600,400),(600,850) */
/* CIF ProcedureCall (500,850) */
call 
/* CIF TextExtension (750,850) Right */
/* CIF Line (750,900),(700,900) */
SortShootList
/* CIF End TextExtension */
;
/* CIF Line (600,950),(600,1000) */
/* CIF Extendedtask (500,1000) */
task {
/* CIF TextExtension (750,1000) Right */
/* CIF Line (750,1050),(700,1050) */
NextHeading := call
NewHeadingChange(ShCurrSt,
ShipsCurrState(ShootList(1)!Number)!Coordinates);
/* CIF End TextExtension */
};
/* CIF Line (600,1100),(600,1150) */
/* CIF Decision (500,1150) */
decision 
/* CIF TextExtension (750,1150) Right */
/* CIF Line (750,1200),(700,1200) */
NextHeading
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (600,1250),(600,1350) */
/* CIF TextPosition (650,1275) */
(LEFT):
/* CIF Extendedtask (500,1350) */
task {
/* CIF TextExtension (750,1350) Right */
/* CIF Line (750,1400),(700,1400) */
CommandToShip(k)!OrderType := _LEFT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (600,1450),(600,1650) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (500,1200),(400,1200),(400,1500) */
/* CIF TextPosition (425,1275) */
(RIGHT):
/* CIF Extendedtask (300,1500) */
task {
/* CIF TextExtension (750,1500) Right */
/* CIF Line (750,1550),(500,1550) */
CommandToShip(k)!OrderType := _RIGHT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (400,1600),(400,1625),(600,1625),(600,1650) */
/* CIF Answer Left */
/* CIF Line (500,1200),(250,1200),(250,1750) */
/* CIF TextPosition (325,1275) */
else:
/* CIF Decision (150,1750) */
decision 
/* CIF TextExtension (750,1750) Right */
/* CIF Line (750,1800),(350,1800) */
ShCurrSt!Speed = 
ShipsCharacter(REPAIR_BOAT)!MaxSpeed 
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (350,1800),(550,1800),(550,1900) */
/* CIF TextPosition (400,1750) */
(false):
/* CIF Extendedtask (450,1900) */
task {
/* CIF TextExtension (750,1900) Right */
/* CIF Line (750,1950),(650,1950) */
CommandToShip(k)!OrderType := _ACCEL;
CommandToShip(k)!Accel := 1;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (550,2000),(550,2025),(250,2025),(250,2050) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,1850),(250,2050) */
/* CIF TextPosition (275,1875) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Join (200,2050),(100,100) */
join R2;
/* CIF End Decision */
enddecision;
/* CIF Return (550,1650),(100,100) */
return ;
/* CIF End Label */
endconnection R1;
/* CIF End ProcedureDiagram */
endprocedure ActivateREPAIR;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\CanShootEnemyCenter.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure CanShootEnemyCenter
; 
returns Weapon  tShootWeaponry;
/* CIF DefaultSize (200,100) */
/* CIF Text (1500,50) */
dcl
   Dist Integer; 
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (750,100) */
start ;
/* CIF Line (850,200),(850,250) */
/* CIF Task (750,250) */
task 
/* CIF TextExtension (1000,250) Right */
/* CIF Line (1000,300),(950,300) */
Dist := call getDistance(ShCurrSt!Coordinates!x,
ShCurrSt!Coordinates!y, EnemyCenter!x,EnemyCenter!y)
/* CIF End TextExtension */
;
/* CIF Line (850,350),(850,400) */
/* CIF Decision (750,400) */
decision 
/* CIF TextExtension (1000,400) Right */
/* CIF Line (1000,450),(950,450) */
(ShCurrSt!Ammunition(MISSILE) /= 0) AND
(WeaponryCharacter(MISSILE)!Range >= Dist)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,450),(600,450),(600,500) */
/* CIF TextPosition (725,400) */
(true):
/* CIF Extendedtask (500,500) */
task {
/* CIF TextExtension (450,500) Left */
/* CIF Line (450,550),(500,550) */
Weapon!TypeWeaponry := 
   MISSILE;
Weapon!isWeaponry := 
   true;
/* CIF End TextExtension */
};
/* CIF Line (600,600),(600,650) */
/* CIF Return (550,650),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,500),(850,750) */
/* CIF TextPosition (875,525) */
(false):
/* CIF Decision (750,750) */
decision 
/* CIF TextExtension (1000,750) Right */
/* CIF Line (1000,800),(950,800) */
ShCurrSt!Ammunition(TORPEDO) /= 0 AND
(WeaponryCharacter(TORPEDO)!Range >= Dist)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,800),(600,800),(600,850) */
/* CIF TextPosition (725,750) */
(true):
/* CIF Extendedtask (500,850) */
task {
/* CIF TextExtension (450,850) Left */
/* CIF Line (450,900),(500,900) */
Weapon!TypeWeaponry := 
  TORPEDO;
Weapon!isWeaponry := 
  true;
/* CIF End TextExtension */
};
/* CIF Line (600,950),(600,1000) */
/* CIF Return (550,1000),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,850),(850,1100) */
/* CIF TextPosition (875,875) */
(false):
/* CIF Decision (750,1100) */
decision 
/* CIF TextExtension (1000,1100) Right */
/* CIF Line (1000,1150),(950,1150) */
(ShCurrSt!Ammunition(SHELL) /= 0) AND
(WeaponryCharacter(SHELL)!Range >= Dist)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1150),(600,1150),(600,1200) */
/* CIF TextPosition (725,1100) */
(true):
/* CIF Extendedtask (500,1200) */
task {
/* CIF TextExtension (450,1200) Left */
/* CIF Line (450,1250),(500,1250) */
Weapon!TypeWeaponry := 
  SHELL;
Weapon!isWeaponry := 
  true;
/* CIF End TextExtension */
};
/* CIF Line (600,1300),(600,1350) */
/* CIF Return (550,1350),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1200),(850,1300) */
/* CIF TextPosition (875,1225) */
(false):
/* CIF Extendedtask (750,1300) */
task {
/* CIF TextExtension (1000,1300) Right */
/* CIF Line (1000,1350),(950,1350) */
Weapon!isWeaponry :=  false;
/* CIF End TextExtension */
};
/* CIF Line (850,1400),(850,1500) */
/* CIF Return (800,1500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure CanShootEnemyCenter;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\SortShootList.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SortShootList;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (550,200) */
start ;
/* CIF Line (650,300),(650,350) */
/* CIF Extendedtask (550,350) */
task {
/* CIF TextExtension (800,350) Right */
/* CIF Line (800,400),(750,400) */
for (i:=1, i<=length(ShootList)-1, i+1) {
  for (j := length(ShootList), j>=i+1, j-1) {
     if (ShootList(j)!SortParam <  ShootList(j-1)!SortParam) {
             Temp := ShootList(j-1);
             ShootList(j-1) := ShootList(j);
             ShootList(j) := Temp;
     }
  }
  for (j := i+1, j<=length(ShootList)-1, j+1) {
     if (ShootList(j)!SortParam >  ShootList(j+1)!SortParam) {
             Temp := ShootList(j+1);
             ShootList(j+1) := ShootList(j);
             ShootList(j) := Temp;
     }          
  }
}
/* CIF End TextExtension */
};
/* CIF Line (650,450),(650,650) */
/* CIF Return (600,650),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure SortShootList;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\OutputOrder.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure OutputOrder;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (600,200) */
start ;
/* CIF Line (700,300),(700,400) */
/* CIF Decision (600,400) */
decision 
/* CIF TextExtension (900,400) Right */
/* CIF Line (900,450),(800,450) */
CommandToShip(index)!isSet
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,450),(300,450),(300,500) */
/* CIF TextPosition (575,400) */
(false):
/* CIF Return (250,500),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,500),(700,650) */
/* CIF TextPosition (725,525) */
(true):
/* CIF Decision (600,650) */
decision 
/* CIF TextExtension (1050,650) Right */
/* CIF Line (1050,700),(800,700) */
CommandToShip(index)!OrderType
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,700),(900,700),(900,850) */
/* CIF TextPosition (925,775) */
(_LEFT):
/* CIF Output (800,850) Right */
output 
/* CIF TextExtension (1050,850) Right */
/* CIF Line (1050,900),(1000,900) */
OrderTurnRequest(
ShipsCurrState(index)!ShipId, StrategyID, LEFT)
/* CIF End TextExtension */
;
/* CIF Line (900,950),(900,1000) */
/* CIF Return (850,1000),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,750),(700,1150) */
/* CIF TextPosition (725,1075) */
(_RIGHT):
/* CIF Output (600,1150) Right */
output 
/* CIF TextExtension (850,1150) Right */
/* CIF Line (850,1200),(800,1200) */
OrderTurnRequest(
ShipsCurrState(index)!ShipId, StrategyID, RIGHT)
/* CIF End TextExtension */
;
/* CIF Line (700,1250),(700,1300) */
/* CIF Return (650,1300),(100,100) */
return ;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,700),(500,700),(500,1450) */
/* CIF TextPosition (525,1375) */
(_ACCEL):
/* CIF Output (400,1450) Right */
output 
/* CIF TextExtension (650,1450) Right */
/* CIF Line (650,1500),(600,1500) */
OrderSpeedRequest(ShipsCurrState(index)!ShipId, StrategyID,
CommandToShip(index)!Accel)
/* CIF End TextExtension */
;
/* CIF Line (500,1550),(500,1600) */
/* CIF Return (450,1600),(100,100) */
return ;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,700),(300,700),(300,1750) */
/* CIF TextPosition (350,1675) */
(_FIRE):
/* CIF Output (200,1750) Right */
output 
/* CIF TextExtension (450,1750) Right */
/* CIF Line (450,1800),(400,1800) */
OrderFireRequest(ShipsCurrState(index)!ShipId, StrategyID,
CommandToShip(index)!Fire!Weapon,CommandToShip(index)!Fire!List)
/* CIF End TextExtension */
;
/* CIF Line (300,1850),(300,1900) */
/* CIF Return (250,1900),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure OutputOrder;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\FindStartPoint.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure FindStartPoint;
 
/* CIF DefaultSize (200,100) */
/* CIF Text (1350,50) */
newtype Dist 
   Array(Integer,Integer)
endnewtype;
/* CIF End Text */
/* CIF Text (1350,200) */
dcl 
   d Dist,
   count, i, min Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (300,250) */
start ;
/* CIF Line (400,350),(400,400) */
/* CIF Extendedtask (300,400) */
task {
/* CIF TextExtension (550,400) Right */
/* CIF Line (550,450),(500,450) */
d(1) := call getDistance(MyCenter!x,MyCenter!y,FirstQuaterX, FirstQuaterY);
d(2) := call getDistance(MyCenter!x,MyCenter!y,SecondQuaterX, SecondQuaterY);
d(3) := call getDistance(MyCenter!x,MyCenter!y,ThirdQuaterX, ThirdQuaterY);
d(4) := call getDistance(MyCenter!x,MyCenter!y,FourthQuaterX, FourthQuaterY);
min := d(1); count:=1;
/* CIF End TextExtension */
};
/* CIF Line (400,500),(400,600) */
/* CIF Extendedtask (300,600) */
task {
/* CIF TextExtension (550,600) Right */
/* CIF Line (550,650),(500,650) */
for (i:=2,i<=4,i+1){
 if (d(i)<=min) {
   min := d(i);
   count := i; } 
}
/* CIF End TextExtension */
};
/* CIF Line (400,700),(400,800) */
/* CIF Decision (300,800) */
decision count;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (500,850),(700,850),(700,900) */
/* CIF TextPosition (725,850) */
(4):
/* CIF Extendedtask (600,900) */
task {
/* CIF TextExtension (850,900) Right */
/* CIF Line (850,950),(800,950) */
HeadingTarget !x:= FourthQuaterX;
HeadingTarget !y:= FourthQuaterY;
/* CIF End TextExtension */
};
/* CIF Line (700,1000),(700,1475),(400,1475),(400,1500) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (500,850),(550,850),(550,1050) */
/* CIF TextPosition (575,900) */
(3):
/* CIF Extendedtask (450,1050) */
task {
/* CIF TextExtension (850,1050) Right */
/* CIF Line (850,1100),(650,1100) */
HeadingTarget !x:= ThirdQuaterX;
HeadingTarget !y:= ThirdQuaterY;
/* CIF End TextExtension */
};
/* CIF Line (550,1150),(550,1475),(400,1475),(400,1500) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (400,900),(400,1200) */
/* CIF TextPosition (425,900) */
(2):
/* CIF Extendedtask (300,1200) */
task {
/* CIF TextExtension (850,1200) Right */
/* CIF Line (850,1250),(500,1250) */
HeadingTarget !x:= SecondQuaterX;
HeadingTarget !y:= SecondQuaterY;
/* CIF End TextExtension */
};
/* CIF Line (400,1300),(400,1500) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (300,850),(250,850),(250,1350) */
/* CIF TextPosition (275,900) */
(1):
/* CIF Extendedtask (150,1350) */
task {
/* CIF TextExtension (850,1350) Right */
/* CIF Line (850,1400),(350,1400) */
HeadingTarget !x:= FirstQuaterX;
HeadingTarget !y:= FirstQuaterY;
/* CIF End TextExtension */
};
/* CIF Line (250,1450),(250,1475),(400,1475),(400,1500) */
/* CIF End Decision */
enddecision;
/* CIF Return (350,1500),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure FindStartPoint;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\SearchHeadingTarget.spd' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
procedure FindHeadingTarget;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (550,250) */
start ;
/* CIF Line (650,350),(650,500) */
/* CIF Extendedtask (550,500) */
task {
/* CIF TextExtension (800,500) Right */
/* CIF Line (800,550),(750,550) */
if ((HeadingTarget!x = FirstQuaterX) AND 
    (HeadingTarget!y = FirstQuaterY)) {
      HeadingTarget!x :=  SecondQuaterX;
      HeadingTarget!y :=  SecondQuaterY;
} 
else {
  if ((HeadingTarget!x = SecondQuaterX) AND 
    (HeadingTarget!y = SecondQuaterY)) {
      HeadingTarget!x :=  ThirdQuaterX;
      HeadingTarget!y :=  ThirdQuaterY;
  } 
  else { 
    if ((HeadingTarget!x = ThirdQuaterX) AND 
        (HeadingTarget!y = ThirdQuaterY)) {
         HeadingTarget!x :=  FourthQuaterX;
         HeadingTarget!y :=  FourthQuaterY;
    }  
    else 
     if ((HeadingTarget!x = FourthQuaterX) AND 
         (HeadingTarget!y = FourthQuaterY)) {
          HeadingTarget!x :=  FirstQuaterX;
          HeadingTarget!y :=  FirstQuaterY;
     }
  }
}
/* CIF End TextExtension */
};
/* CIF Line (650,600),(650,1300) */
/* CIF Return (600,1300),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure FindHeadingTarget;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy1\OnLand.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure OnLand
;fpar
  in MyLandShip tShipCurrentState,
  in k Integer;
/* CIF DefaultSize (200,100) */
/* CIF Text (1350,100) */
dcl
   i,j Integer,
   PathCoord tCoordinates,
   Direct tTurnDirection,
   flagPath Boolean,
   factorAccel Real;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (400,250) */
start ;
/* CIF Line (500,350),(500,400) */
/* CIF Extendedtask (400,400) */
task {
/* CIF TextExtension (650,400) Right */
/* CIF Line (650,450),(600,450) */
flagPath := false;
for (i:=MyLandShip!Coordinates!x-1, i <=MyLandShip!Coordinates!x+1, i+1) {
  for (j:=MyLandShip!Coordinates!y-1, j <=MyLandShip!Coordinates!y+1, j+1) {
     if ( (i < 0) OR (i > MaxXCoordinate) OR (j < 0) OR (j > MaxYCoordinate) ) continue;
     if ( (call getDeepXY(i, j)) >= d2i(ShipsCharacter(MyLandShip!TypeShip)!MaxDeep)) {
       PathCoord!x := i;
       PathCoord!y := j;
       flagPath := true;
       break;
    }
  }
  if (flagPath = true) break;
}
/* CIF End TextExtension */
};
/* CIF Line (500,500),(500,800) */
/* CIF Decision (400,800) */
decision flagPath;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (400,850),(250,850),(250,900) */
/* CIF TextPosition (375,800) */
(false):
/* CIF Return (200,900),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,900),(500,1000) */
/* CIF TextPosition (525,925) */
(true):
/* CIF Extendedtask (400,1000) */
task {
/* CIF TextExtension (650,1000) Right */
/* CIF Line (650,1050),(600,1050) */
Direct := call NewHeadingChange(MyLandShip, PathCoord);
/* CIF End TextExtension */
};
/* CIF Line (500,1100),(500,1150) */
/* CIF Decision (400,1150) */
decision Direct;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (600,1200),(650,1200),(650,1300) */
/* CIF TextPosition (575,1250) */
(LEFT):
/* CIF Extendedtask (550,1300) */
task {
/* CIF TextExtension (800,1300) Right */
/* CIF Line (800,1350),(750,1350) */
CommandToShip(k)!OrderType := _LEFT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (650,1400),(650,1725),(500,1725),(500,1750) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,1250),(500,1450) */
/* CIF TextPosition (400,1250) */
(RIGHT):
/* CIF Extendedtask (400,1450) */
task {
/* CIF TextExtension (800,1450) Right */
/* CIF Line (800,1500),(600,1500) */
CommandToShip(k)!OrderType := _RIGHT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (500,1550),(500,1750) */
/* CIF Answer Left */
/* CIF Line (400,1200),(350,1200),(350,1600) */
/* CIF TextPosition (250,1250) */
else:
/* CIF Extendedtask (250,1600) */
task {
/* CIF TextExtension (800,1600) Right */
/* CIF Line (800,1650),(450,1650) */
CommandToShip(k)!OrderType := _ACCEL;
factorAccel := 2.5/
float(ShipsCharacter(MyLandShip!TypeShip)!MaxAcceleration);
if (factorAccel >= 1)  factorAccel := 1;
CommandToShip(k)!Accel := factorAccel;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (350,1700),(350,1725),(500,1725),(500,1750) */
/* CIF End Decision */
enddecision;
/* CIF Return (450,1750),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure OnLand;
/* CIF BlockDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (150,150),(1600,2000) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2.sbk' */
/* CIF Specific SDT Page 1 Scale 140 Grid (50,50) AutoNumbered */
block Strategy2;
/* CIF CurrentPage 1 */
/* CIF SignalRoute (150,600),(800,600) */
/* CIF TextPosition (400,550) */
/* CIF TextPosition (550,625) SignalList1 */
/* CIF TextPosition (175,625) SignalList2 */
signalroute chStSim from env to Main2 with (fromSimulator);
from Main2 to env with (toSimulator);
/* CIF SignalRoute (1100,600),(1750,600) */
/* CIF TextPosition (1325,550) */
/* CIF TextPosition (1525,625) SignalList1 */
signalroute chStMsg from Main2 to env with messageLog,
messageError;
/* CIF Process (800,500),(300,200) */
/* CIF TextPosition (825,575) */
process Main2 referenced;
/* CIF Connect */
/* CIF TextPosition (50,525) */
connect SimSt2Int and chStSim;
/* CIF Connect */
/* CIF TextPosition (1675,525) */
connect St2MsgInt and chStMsg;
/* CIF End BlockDiagram */
endblock Strategy2;
/* CIF ProcessDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\Main.spr' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 120 Grid (50,50) AutoNumbered */
process Main2;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (50,250) */
imported
    gWeaponryCharacter tArrayWeaponryCharacter,
    gShipsCharacter tArrayShipsCharacter;
/* CIF End Text */
/* CIF Text (900,250) */
synonym 
   FirstQuaterX Integer = 3*MaxXCoordinate/4,
   FirstQuaterY Integer = 3*MaxYCoordinate/4,
   SecondQuaterX Integer = 3*MaxXCoordinate/4,
   SecondQuaterY Integer = MaxYCoordinate/4,
   ThirdQuaterX Integer = MaxXCoordinate/4,
   ThirdQuaterY Integer = MaxYCoordinate/4,
   FourthQuaterX Integer = MaxXCoordinate/4,
   FourthQuaterY Integer = 3*MaxYCoordinate/4;
/* CIF End Text */
/* CIF Text (50,400) */
newtype tOrderType
 literals
    _RIGHT,
    _LEFT,
    _FIRE,
    _ACCEL;
endnewtype;
/* CIF End Text */
/* CIF Text (50,700) */
newtype tFire
  struct
    List tStringShotsList;
    Weapon tNameWeaponry; 
endnewtype;
/* CIF End Text */
/* CIF Text (50,950) */
newtype tCommand
  struct
    OrderType  tOrderType;
    isSet Boolean;
    Fire tFire;
    Accel tFactorAcceleration;
endnewtype;
/* CIF End Text */
/* CIF Text (50,1250) */
newtype tArrayCommand
  Array(tShipId,tCommand);
endnewtype;
/* CIF End Text */
/* CIF CurrentPage 2 */
/* CIF Text (50,400) */
dcl 
   WeaponryCharacter tArrayWeaponryCharacter,
   ShipsCharacter tArrayShipsCharacter;
/* CIF End Text */
/* CIF Text (50,800) */
dcl 
   MyCenter tCoordinates,
   Tick,NumMyShips, minSpeed Integer,
   flagFight Boolean := true,
   HeadingTarget tCoordinates,
   ShipsCurrentState tStringShipCurrentState,
   CommandToShip tArrayCommand,
   StrategyID tStrategyId;
/* CIF End Text */
/* CIF Text (50,1450) */
dcl
   EnemyCenter tCoordinates,
   NumVisibleShips Integer,
   EnemyShips tStringEnemyShip;
/* CIF End Text */
/* CIF Procedure (850,250),(300,100) */
/* CIF TextPosition (875,275) */
procedure StrategyStep2 referenced;
/* CIF Procedure (850,400),(350,100) */
/* CIF TextPosition (900,425) */
procedure EnemyCenter2 referenced;
/* CIF Procedure (850,550),(450,100) */
/* CIF TextPosition (900,575) */
procedure UpdateShipParams2 referenced;
/* CIF CurrentPage 3 */
/* CIF Start (700,100) */
start ;
/* CIF Line (800,200),(800,250) */
/* CIF NextState (700,250) */
nextstate Idle;
/* CIF State (700,250) */
state Idle;
/* CIF Line (800,350),(800,400) */
/* CIF Input (700,400) Right */
input InitData_
Complete;
/* CIF Line (800,500),(800,550) */
/* CIF Extendedtask (700,550) */
task {
/* CIF TextExtension (950,550) Right */
/* CIF Line (950,600),(900,600) */
WeaponryCharacter := import(gWeaponryCharacter);
ShipsCharacter := import(gShipsCharacter);
/* CIF End TextExtension */
};
/* CIF Line (800,650),(800,750) */
/* CIF NextState (700,750) */
nextstate InitComplete;
/* CIF End State */
endstate;
/* CIF State (700,750) */
state InitComplete;
/* CIF Line (800,850),(800,875),(550,875),(550,900) */
/* CIF Save (450,900) */
save VisibleShip;
/* CIF Line (800,850),(800,900) */
/* CIF Input (700,900) Right */
input 
/* CIF TextExtension (950,900) Right */
/* CIF Line (950,950),(900,950) */
ShipsCurrentState(StrategyID,
ShipsCurrentState)
/* CIF End TextExtension */
;
/* CIF Line (800,1000),(800,1050) */
/* CIF Label Invisible */
grst48:
/* CIF ProcedureCall (700,1050) */
call 
/* CIF TextExtension (950,1050) Right */
/* CIF Line (950,1100),(900,1100) */
UpdateShipParams2
/* CIF End TextExtension */
;
/* CIF Line (800,1150),(800,1200) */
/* CIF NextState (700,1200) */
nextstate IdleVisShips;
/* CIF End State */
endstate;
/* CIF State (700,1200) */
state IdleVisShips;
/* CIF Line (800,1300),(800,1325),(650,1325),(650,1350) */
/* CIF Input (550,1350) Right */
input 
/* CIF TextExtension (500,1350) Left */
/* CIF Line (500,1400),(550,1400) */
StartSimulation(Tick)  
/* CIF End TextExtension */
;
/* CIF Line (650,1450),(650,1500) */
/* CIF ProcedureCall (550,1500) */
call 
/* CIF TextExtension (450,1500) Left */
/* CIF Line (450,1550),(550,1550) */
StrategyStep2(
ShipsCurrentState)
/* CIF End TextExtension */
;
/* CIF Line (650,1600),(650,1650) */
/* CIF Output (550,1650) Right */
output 
/* CIF TextExtension (500,1650) Left */
/* CIF Line (500,1700),(550,1700) */
FinishSimulation(Tick, 
StrategyID)  
/* CIF End TextExtension */
;
/* CIF Line (650,1750),(650,1800) */
/* CIF NextState (550,1800) */
nextstate IdleRes;
/* CIF Line (800,1300),(800,1325),(950,1325),(950,1350) */
/* CIF Input (850,1350) Right */
input 
/* CIF TextExtension (1100,1350) Right */
/* CIF Line (1100,1400),(1050,1400) */
VisibleShip(StrategyID,EnemyShips)
/* CIF End TextExtension */
;
/* CIF Line (950,1450),(950,1500) */
/* CIF ProcedureCall (850,1500) */
call Enemy_
Center2;
/* CIF Line (950,1600),(950,1650) */
/* CIF NextState (850,1650) */
nextstate -;
/* CIF End State */
endstate;
/* CIF State (550,1800) */
state IdleRes;
/* CIF Line (650,1900),(650,1925),(500,1925),(500,1950) */
/* CIF Input (400,1950) Right */
input 
/* CIF TextExtension (350,1950) Left */
/* CIF Line (350,2000),(400,2000) */
ShipsCurrentState(
StrategyID,
ShipsCurrentState)
/* CIF End TextExtension */
;
/* CIF Line (500,2050),(500,2200),(25,2200),(25,1025),(800,1025),(800,1050) */
/* CIF Join Invisible */
join grst48;
/* CIF Line (650,1900),(650,1925),(800,1925),(800,1950) */
/* CIF Input (700,1950) Right */
input 
/* CIF TextExtension (950,1950) Right */
/* CIF Line (950,2000),(900,2000) */
  OrderSpeedResponse, OrderSpeedReject, 
  OrderTurnResponse, OrderTurnReject, 
  OrderFireResponse, OrderFireReject, DestroyShip
/* CIF End TextExtension */
;
/* CIF Line (800,2050),(800,2100) */
/* CIF NextState (700,2100) */
nextstate -;
/* CIF End State */
endstate;
/* CIF State (1200,100) */
state *;
/* CIF Line (1300,200),(1300,250) */
/* CIF Input (1200,250) Right */
input 
/* CIF TextExtension (1450,250) Right */
/* CIF Line (1450,300),(1400,300) */
StrategyVictory(StrategyID),
StrategyLose(StrategyID)
/* CIF End TextExtension */
;
/* CIF Line (1300,350),(1300,400) */
/* CIF Stop (1250,400),(100,100) */
stop ;
/* CIF End State */
endstate;
/* CIF CurrentPage 1 */
/* CIF CurrentPage 2 */
/* CIF End ProcessDiagram */
endprocess Main2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\UpdateShipParams.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure UpdateShipParams2;
/* CIF DefaultSize (200,100) */
/* CIF Text (1300,100) */
dcl
  TempCenterX, TempCenterY Real,
   i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (250,200) */
start ;
/* CIF Line (350,300),(350,400) */
/* CIF Extendedtask (250,400) */
task {
/* CIF TextExtension (500,400) Right */
/* CIF Line (500,450),(450,450) */
NumVisibleShips := 0;
NumMyShips := length(ShipsCurrentState);
TempCenterX := 0;
TempCenterY := 0;
minSpeed := ShipsCharacter(ShipsCurrentState(1)!TypeShip)!MaxSpeed;
for (i:=1, i<=NumMyShips, i+1){
  CommandToShip(i)!isSet := false;
  CommandToShip(i)!Fire!List := empty;
  TempCenterX := TempCenterX + float(ShipsCurrentState(i)!Coordinates!x)/float(NumMyShips);
  TempCenterY := TempCenterY + float(ShipsCurrentState(i)!Coordinates!y)/float(NumMyShips);
  if (ShipsCharacter(ShipsCurrentState(i)!TypeShip)!MaxSpeed <= minSpeed) {
    minSpeed := ShipsCharacter(ShipsCurrentState(i)!TypeShip)!MaxSpeed;
  }
}
MyCenter!x := fix(TempCenterX);
MyCenter!y := fix(TempCenterY);
/* CIF End TextExtension */
};
/* CIF Line (350,500),(350,900) */
/* CIF Return (300,900),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure UpdateShipParams2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\EnemyCenter.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure EnemyCenter2;
/* CIF DefaultSize (200,100) */
/* CIF Text (1250,150) */
dcl
  TempCenterX, TempCenterY Real,
   i Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (100,250) */
start ;
/* CIF Line (200,350),(200,450) */
/* CIF Extendedtask (100,450) */
task {
/* CIF TextExtension (350,450) Right */
/* CIF Line (350,500),(300,500) */
TempCenterX := 0;
TempCenterY := 0;
NumVisibleShips := length(EnemyShips);
for (i:=1, i<=NumVisibleShips, i+1) {
  TempCenterX := TempCenterX + float(EnemyShips(i)!Coordinates!x)/float(NumVisibleShips);
  TempCenterY := TempCenterY + float(EnemyShips(i)!Coordinates!y)/float(NumVisibleShips);
}
 EnemyCenter!x := fix(TempCenterX);
 EnemyCenter!y := fix(TempCenterY);
/* CIF End TextExtension */
};
/* CIF Line (200,550),(200,600) */
/* CIF Return (150,600),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure EnemyCenter2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 4 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\StrategyStep.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 4 Scale 120 Grid (50,50) AutoNumbered */
procedure StrategyStep2
; fpar
  in/out ShipsCurrState tStringShipCurrentState;

/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (50,300) */
newtype tTurnDirection inherits tHeadingChange
  adding literals
     STRAIGHT;
endnewtype;
/* CIF End Text */
/* CIF Text (50,500) */
newtype tCollision
   literals
     NO_COLLISION,
     LAND_COLLISION,
     ENEMY_SHIP_COLLISION,
     MY_SHIP_COLLISION;
endnewtype;
/* CIF End Text */
/* CIF Text (50,800) */
dcl
   index Integer := 1,
   CollisionType tCollision;
/* CIF End Text */
/* CIF Procedure (850,200),(350,100) */
/* CIF TextPosition (900,225) */
procedure EnemyFound2 referenced;
/* CIF Procedure (850,350),(400,100) */
/* CIF TextPosition (900,375) */
procedure EnemyNotFound2 referenced;
/* CIF Procedure (850,550),(300,100) */
/* CIF TextPosition (875,575) */
procedure NextPosition2 referenced;
/* CIF Procedure (850,750),(300,100) */
/* CIF TextPosition (875,775) */
procedure NextDirection2 referenced;
/* CIF Procedure (850,950),(450,100) */
/* CIF TextPosition (884,975) */
procedure NewHeadingChange2 referenced;
/* CIF Procedure (850,1150),(250,100) */
/* CIF TextPosition (875,1175) */
procedure isCollision2 referenced;
/* CIF Procedure (850,1300),(350,100) */
/* CIF TextPosition (900,1325) */
procedure SolveCollision2 referenced;
/* CIF Procedure (850,1450),(350,100) */
/* CIF TextPosition (900,1475) */
procedure NextShipState2 referenced;
/* CIF Procedure (850,1600),(300,100) */
/* CIF TextPosition (900,1625) */
procedure OutputOrder2 referenced;
/* CIF Procedure (850,1750),(450,100) */
/* CIF TextPosition (875,1775) */
procedure FindHeadingTarget2 referenced;
/* CIF Procedure (850,1950),(350,100) */
/* CIF TextPosition (900,1975) */
procedure FindStartPoint2 referenced;
/* CIF Procedure (850,2100) */
/* CIF TextPosition (875,2125) */
procedure OnLand2 referenced;
/* CIF CurrentPage 2 */
/* CIF ProcedureStart (750,300) */
start ;
/* CIF Line (850,400),(850,500) */
/* CIF Decision (750,500) */
decision 
/* CIF TextExtension (1200,500) Right */
/* CIF Line (1200,550),(950,550) */
NumVisibleShips = 0
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,550),(700,550),(700,700) */
/* CIF TextPosition (700,500) */
(false):
/* CIF Extendedtask (600,700) */
task {
/* CIF TextExtension (550,700) Left */
/* CIF Line (550,750),(600,750) */
if (flagFight =false)
flagFight := true;
/* CIF End TextExtension */
};
/* CIF Line (700,800),(700,850) */
/* CIF Join (650,850),(100,100) */
join Step1;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,550),(1050,550),(1050,700) */
/* CIF TextPosition (975,500) */
(true):
/* CIF Extendedtask (950,700) */
task {
/* CIF TextExtension (1200,700) Right */
/* CIF Line (1200,750),(1150,750) */
if (flagFight=true) {
  flagFight := false;
  call FindStartPoint2;
}
/* CIF End TextExtension */
};
/* CIF Line (1050,800),(1050,1000) */
/* CIF Decision (950,1000) */
decision 
/* CIF TextExtension (1200,1000) Right */
/* CIF Line (1200,1050),(1150,1050) */
 ((MyCenter!x <=
   HeadingTarget!x + 5) AND
    (MyCenter!x >=
   HeadingTarget!x  - 5) AND 
    (MyCenter!y <=
   HeadingTarget!y + 5) AND 
    (MyCenter!y>=
   HeadingTarget!y  - 5)) 
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (950,1050),(900,1050),(900,1150) */
/* CIF TextPosition (900,1000) */
(true):
/* CIF ProcedureCall (800,1150) */
call 
/* CIF TextExtension (750,1150) Left */
/* CIF Line (750,1200),(800,1200) */
FindHeadingTarget2
/* CIF End TextExtension */
;
/* CIF Line (900,1250),(900,1300),(1050,1300),(1050,1350) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (1050,1100),(1050,1350) */
/* CIF TextPosition (1075,1100) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Join (1000,1350),(100,100) */
join Step2;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 1 */
/* CIF CurrentPage 3 */
/* CIF Label (750,250),(100,100) */
connection Step1:
/* CIF Line (800,350),(800,450) */
/* CIF Decision (700,450) */
decision 
/* CIF TextExtension (1000,450) Right */
/* CIF Line (1000,500),(900,500) */
(call getDeepXY(ShipsCurrState(index)!Coordinates!x,
ShipsCurrState(index)!Coordinates!y)) <
d2i(ShipsCharacter(ShipsCurrState(index)!_
TypeShip)!MaxDeep)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,500),(650,500),(650,650) */
/* CIF TextPosition (625,575) */
(true):
/* CIF ProcedureCall (550,650) */
call 
/* CIF TextExtension (500,650) Left */
/* CIF Line (500,700),(550,700) */
OnLand2(
ShipsCurrState(index),
index)
/* CIF End TextExtension */
;
/* CIF Line (650,750),(650,775),(800,775),(800,850) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,500),(950,500),(950,650) */
/* CIF TextPosition (925,575) */
(false):
/* CIF ProcedureCall (850,650) */
call 
/* CIF TextExtension (1100,650) Right */
/* CIF Line (1100,700),(1050,700) */
EnemyFound2(
ShipsCurrState(index),
index)
/* CIF End TextExtension */
;
/* CIF Line (950,750),(950,775),(800,775),(800,850) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,850) */
task {
/* CIF TextExtension (1000,850) Right */
/* CIF Line (1000,900),(900,900) */
CollisionType := 
call isCollision2;
/* CIF End TextExtension */
};
/* CIF Line (800,950),(800,1000) */
/* CIF Decision (700,1000) */
decision 
/* CIF TextExtension (1000,1000) Right */
/* CIF Line (1000,1050),(900,1050) */
CollisionType
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1100),(800,1125),(650,1125),(650,1150) */
/* CIF TextPosition (525,1075) */
(NO_COLLISION):
/* CIF ProcedureCall (550,1150) */
call OutputOrder2;
/* CIF Line (650,1250),(650,1275),(800,1275),(800,1300) */
/* CIF Answer */
/* CIF Line (800,1100),(800,1125),(950,1125),(950,1150) */
/* CIF TextPosition (875,1075) */
else:
/* CIF ProcedureCall (850,1150) */
call 
/* CIF TextExtension (1100,1150) Right */
/* CIF Line (1100,1200),(1050,1200) */
SolveCollision2
/* CIF End TextExtension */
;
/* CIF Line (950,1250),(950,1275),(800,1275),(800,1300) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,1300) */
task {index := 
index + 1;};
/* CIF Line (800,1400),(800,1450) */
/* CIF Decision (700,1450) */
decision 
/* CIF TextExtension (950,1450) Right */
/* CIF Line (950,1500),(900,1500) */
index <=
NumMyShips
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1500),(125,1500),(125,425),(800,425),(800,450) */
/* CIF TextPosition (625,1450) */
(true):
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1550),(800,1600) */
/* CIF TextPosition (825,1550) */
(false):
/* CIF Return (750,1600),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join Step1;
/* CIF End Label */
endconnection Step1;
/* CIF CurrentPage 4 */
/* CIF Label (750,250),(100,100) */
connection Step2:
/* CIF Line (800,350),(800,450) */
/* CIF Decision (700,450) */
decision 
/* CIF TextExtension (1000,450) Right */
/* CIF Line (1000,500),(900,500) */
(call getDeepXY(ShipsCurrState(index)!Coordinates!x,
ShipsCurrState(index)!Coordinates!y)) <
d2i(ShipsCharacter(ShipsCurrState(index)!_
TypeShip)!MaxDeep)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,500),(650,500),(650,650) */
/* CIF TextPosition (575,575) */
(true):
/* CIF ProcedureCall (550,650) */
call 
/* CIF TextExtension (500,650) Left */
/* CIF Line (500,700),(550,700) */
OnLand2(
ShipsCurrState(index),
index)
/* CIF End TextExtension */
;
/* CIF Line (650,750),(650,775),(800,775),(800,850) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,500),(950,500),(950,650) */
/* CIF TextPosition (925,575) */
(false):
/* CIF ProcedureCall (850,650) */
call 
/* CIF TextExtension (1100,650) Right */
/* CIF Line (1100,700),(1050,700) */
EnemyNotFound2(
ShipsCurrState(index),
index)
/* CIF End TextExtension */
;
/* CIF Line (950,750),(950,775),(800,775),(800,850) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,850) */
task {
/* CIF TextExtension (1000,850) Right */
/* CIF Line (1000,900),(900,900) */
CollisionType := 
call isCollision2;
/* CIF End TextExtension */
};
/* CIF Line (800,950),(800,1000) */
/* CIF Decision (700,1000) */
decision 
/* CIF TextExtension (1000,1000) Right */
/* CIF Line (1000,1050),(900,1050) */
CollisionType
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1100),(800,1125),(650,1125),(650,1150) */
/* CIF TextPosition (525,1075) */
(NO_COLLISION):
/* CIF ProcedureCall (550,1150) */
call OutputOrder2;
/* CIF Line (650,1250),(650,1275),(800,1275),(800,1300) */
/* CIF Answer */
/* CIF Line (800,1100),(800,1125),(950,1125),(950,1150) */
/* CIF TextPosition (875,1075) */
else:
/* CIF ProcedureCall (850,1150) */
call 
/* CIF TextExtension (1100,1150) Right */
/* CIF Line (1100,1200),(1050,1200) */
SolveCollision2
/* CIF End TextExtension */
;
/* CIF Line (950,1250),(950,1275),(800,1275),(800,1300) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,1300) */
task {index := 
index + 1;};
/* CIF Line (800,1400),(800,1450) */
/* CIF Decision (700,1450) */
decision 
/* CIF TextExtension (950,1450) Right */
/* CIF Line (950,1500),(900,1500) */
index <=
NumMyShips
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1500),(125,1500),(125,400),(800,400),(800,450) */
/* CIF TextPosition (625,1450) */
(true):
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1550),(800,1600) */
/* CIF TextPosition (825,1550) */
(false):
/* CIF Return (750,1600),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join Step2;
/* CIF End Label */
endconnection Step2;
/* CIF End ProcedureDiagram */
endprocedure StrategyStep2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\SolveCollision.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure SolveCollision2;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (750,150) */
start ;
/* CIF Line (850,250),(850,350) */
/* CIF Decision (750,350) */
decision 
/* CIF TextExtension (1000,350) Right */
/* CIF Line (1000,400),(950,400) */
CollisionType
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,400),(700,400),(700,500) */
/* CIF TextPosition (350,350) */
(ENEMY_SHIP_COLLISION):
/* CIF Decision (600,500) */
decision 
/* CIF TextExtension (1000,500) Right */
/* CIF Line (1000,550),(800,550) */
((ShipsCurrState(index)!Ammunition(   
MISSILE) = 0) AND
(ShipsCurrState(index)!Ammunition(
TORPEDO) = 0) AND
(ShipsCurrState(index)!Ammunition(
SHELL) = 0) AND
(ShipsCurrState(index)!Ammunition(
REPAIR) = 0))
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,550),(500,550),(500,650) */
/* CIF TextPosition (500,500) */
(true):
/* CIF Return (450,650),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,600),(700,725),(850,725),(850,850) */
/* CIF TextPosition (725,625) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Answer */
/* CIF Line (850,450),(850,850) */
/* CIF TextPosition (875,450) */
else:
/* CIF End Decision */
enddecision;
/* CIF Decision (750,850) */
decision 
/* CIF TextExtension (1000,850) Right */
/* CIF Line (1000,900),(950,900) */
((CommandToShip(index)!isSet = true)AND
(CommandToShip(index)!OrderType = _ACCEL)AND
(CommandToShip(index)!Accel > 0))
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,950),(850,1050) */
/* CIF TextPosition (875,950) */
(true):
/* CIF Extendedtask (750,1050) */
task {
/* CIF TextExtension (1000,1050) Right */
/* CIF Line (1000,1100),(950,1100) */
CommandToShip(index)!isSet := false;
CollisionType := call isCollision2;
/* CIF End TextExtension */
};
/* CIF Line (850,1150),(850,1200) */
/* CIF Decision (750,1200) */
decision 
/* CIF TextExtension (1000,1200) Right */
/* CIF Line (1000,1250),(950,1250) */
CollisionType = NO_COLLISION
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1250),(700,1250),(700,1350) */
/* CIF TextPosition (725,1200) */
(true):
/* CIF Return (650,1350),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1300),(850,1550) */
/* CIF TextPosition (875,1325) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,900),(600,900),(600,1500),(850,1500),(850,1550) */
/* CIF TextPosition (725,850) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Join (800,1550),(100,100) */
join Solv1;
/* CIF CurrentPage 2 */
/* CIF Label (900,150),(100,100) */
connection Solv1:
/* CIF Line (950,250),(950,300) */
/* CIF Extendedtask (850,300) */
task {
/* CIF TextExtension (1100,300) Right */
/* CIF Line (1100,350),(1050,350) */
CommandTo_
Ship(index)!OrderType := _RIGHT;
CommandToShip(index)!isSet := true;
CollisionType := call isCollision2;
/* CIF End TextExtension */
};
/* CIF Line (950,400),(950,500) */
/* CIF Decision (850,500) */
decision 
/* CIF TextExtension (1100,500) Right */
/* CIF Line (1100,550),(1050,550) */
CollisionType = NO_COLLISION
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,550),(700,550),(700,600) */
/* CIF TextPosition (825,500) */
(true):
/* CIF Output (600,600) Right */
output 
/* CIF TextExtension (550,600) Left */
/* CIF Line (550,650),(600,650) */
OrderTurnRequest(
ShipsCurrState(index)!ShipId, 
StrategyID, RIGHT)  
/* CIF End TextExtension */
;
/* CIF Line (700,700),(700,750) */
/* CIF Return (650,750),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,600),(950,700) */
/* CIF TextPosition (975,625) */
(false):
/* CIF Extendedtask (850,700) */
task {
/* CIF TextExtension (1100,700) Right */
/* CIF Line (1100,750),(1050,750) */
CommandTo_
Ship(index)!OrderType := _LEFT;
CommandToShip(index)!isSet := true;
CollisionType := call isCollision2;
/* CIF End TextExtension */
};
/* CIF Line (950,800),(950,950) */
/* CIF Decision (850,950) */
decision 
/* CIF TextExtension (1100,950) Right */
/* CIF Line (1100,1000),(1050,1000) */
CollisionType = NO_COLLISION
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,1000),(700,1000),(700,1050) */
/* CIF TextPosition (675,950) */
(true):
/* CIF Output (600,1050) Right */
output 
/* CIF TextExtension (550,1050) Left */
/* CIF Line (550,1100),(600,1100) */
OrderTurnRequest(
ShipsCurrState(index)!ShipId, 
StrategyID, LEFT)  
/* CIF End TextExtension */
;
/* CIF Line (700,1150),(700,1200) */
/* CIF Return (650,1200),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (950,1050),(950,1200) */
/* CIF TextPosition (975,1075) */
(false):
/* CIF Extendedtask (850,1200) */
task {
/* CIF TextExtension (1100,1200) Right */
/* CIF Line (1100,1250),(1050,1250) */
CommandTo_
Ship(index)!OrderType := _ACCEL;
CommandTo_
Ship(index)!Accel := -1;
CommandToShip(index)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (950,1300),(950,1400) */
/* CIF Output (850,1400) Right */
output 
/* CIF TextExtension (800,1400) Left */
/* CIF Line (800,1450),(850,1450) */
OrderSpeedRequest(
ShipsCurrState(index)!ShipId, 
StrategyID,-1)
/* CIF End TextExtension */
;
/* CIF Line (950,1500),(950,1550) */
/* CIF Return (900,1550),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection Solv1;
/* CIF End ProcedureDiagram */
endprocedure SolveCollision2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\isCollision.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure isCollision2
; 
returns  tCollision;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (1050,100) */
dcl
  MyShipNextState, OtherShipNextState tShipCurrentState,
  NextPoint tCoordinates, 
  NextHead tHeading,
  IncX, IncY, i, Deep, maxDeep Integer, 
  flag  Real := 1,
  MyShipType tNameShip;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (750,100) */
start ;
/* CIF Line (850,200),(850,250) */
/* CIF Extendedtask (750,250) */
task {
/* CIF TextExtension (700,250) Left */
/* CIF Line (700,300),(750,300) */
MyShipNextState := 
call NextShipState2(index);   
NextHead := 
MyShipNextState!Heading;
MyShipType :=
ShipsCurrState(index)!TypeShip;  
/* CIF End TextExtension */
};
/* CIF Line (850,350),(850,500) */
/* CIF Decision (750,500) */
decision NextHead;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,550),(250,550),(250,600) */
/* CIF TextPosition (275,550) */
(NORTH):
/* CIF Extendedtask (150,600) */
task {IncX:=0;
IncY:=1;};
/* CIF Line (250,700),(250,725),(850,725),(850,1250) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,550),(1450,550),(1450,600) */
/* CIF TextPosition (1475,550) */
(NORTH_WEST):
/* CIF Extendedtask (1350,600) */
task {
/* CIF TextExtension (1650,600) Right */
/* CIF Line (1650,650),(1550,650) */
IncX:=-1;
IncY:=1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1450,700),(1450,725),(850,725),(850,1250) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,550),(400,550),(400,750) */
/* CIF TextPosition (450,675) */
(EAST):
/* CIF Extendedtask (300,750) */
task {IncX:=1;
IncY:=0;};
/* CIF Line (400,850),(400,875),(850,875),(850,1250) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,550),(1300,550),(1300,750) */
/* CIF TextPosition (1425,750) */
(SOUTH_WEST):
/* CIF Extendedtask (1200,750) */
task {
/* CIF TextExtension (1650,750) Right */
/* CIF Line (1650,800),(1400,800) */
IncX:=-1;
IncY:=-1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1300,850),(1300,875),(850,875),(850,1250) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,550),(550,550),(550,900) */
/* CIF TextPosition (600,825) */
(WEST):
/* CIF Extendedtask (450,900) */
task {IncX:=-1;
IncY:=0;};
/* CIF Line (550,1000),(550,1025),(850,1025),(850,1250) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,550),(1150,550),(1150,900) */
/* CIF TextPosition (1300,900) */
(NORTH_EAST):
/* CIF Extendedtask (1050,900) */
task {
/* CIF TextExtension (1650,900) Right */
/* CIF Line (1650,950),(1250,950) */
IncX:=1;
IncY:=1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1150,1000),(1150,1025),(850,1025),(850,1250) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,550),(700,550),(700,1050) */
/* CIF TextPosition (725,975) */
(SOUTH):
/* CIF Extendedtask (600,1050) */
task {IncX:=0;
IncY:=-1;};
/* CIF Line (700,1150),(700,1175),(850,1175),(850,1250) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (950,550),(1000,550),(1000,1050) */
/* CIF TextPosition (1125,1050) */
(SOUTH_EAST):
/* CIF Extendedtask (900,1050) */
task {
/* CIF TextExtension (1650,1050) Right */
/* CIF Line (1650,1100),(1100,1100) */
IncX:=1;
IncY:=-1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1000,1150),(1000,1175),(850,1175),(850,1250) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (750,1250) */
task {
/* CIF TextExtension (1000,1250) Right */
/* CIF Line (1000,1300),(950,1300) */
NextPoint := ShipsCurrState(index)!Coordinates;
i := 1;
maxDeep := d2i(ShipsCharacter(MyShipType)!MaxDeep);
/* CIF End TextExtension */
};
/* CIF Line (850,1350),(850,1400) */
/* CIF Label Invisible */
grst49:
/* CIF Decision (750,1400) */
decision 
/* CIF TextExtension (1000,1400) Right */
/* CIF Line (1000,1450),(950,1450) */

 i<=fix(2*float(MyShipNextState!Speed)/flag)
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1500),(850,1550) */
/* CIF TextPosition (875,1500) */
(true):
/* CIF Decision (750,1550) */
decision 
/* CIF TextExtension (1000,1550) Right */
/* CIF Line (1000,1600),(950,1600) */
(NextPoint!x + IncX < 0) OR 
(NextPoint!y + IncY < 0) OR
(NextPoint!x + IncX > MaxXCoordinate) OR 
(NextPoint!y + IncY > MaxYCoordinate)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1600),(500,1600),(500,1650) */
/* CIF TextPosition (700,1550) */
(true):
/* CIF Label Invisible */
grst50:
/* CIF Join (450,1650),(100,100) */
join P1;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1650),(850,1750) */
/* CIF TextPosition (875,1675) */
(false):
/* CIF Extendedtask (750,1750) */
task {
/* CIF TextExtension (1000,1750) Right */
/* CIF Line (1000,1800),(950,1800) */
NextPoint!x := NextPoint!x + IncX;
NextPoint!y := NextPoint!y + IncY;
Deep := call getDeepXY(NextPoint!x,NextPoint!y);
/* CIF End TextExtension */
};
/* CIF Line (850,1850),(850,1900) */
/* CIF Decision (750,1900) */
decision 
/* CIF TextExtension (1000,1900) Right */
/* CIF Line (1000,1950),(950,1950) */
Deep < maxDeep
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1950),(500,1950),(500,2000) */
/* CIF TextPosition (700,1900) */
(true):
/* CIF Return (450,2000),(100,100) */
return LAND_COLLISION;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,2000),(850,2100) */
/* CIF TextPosition (875,2000) */
(false):
/* CIF Extendedtask (750,2100) */
task {i := i+1;};
/* CIF Line (850,2200),(850,2225),(400,2225),(400,1375),(850,1375),(850,1400) */
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst49;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1450),(500,1450),(500,1650) */
/* CIF TextPosition (700,1400) */
(false):
/* CIF Join Invisible */
join grst50;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 2 */
/* CIF Label (750,50),(100,100) */
connection P1:
/* CIF Line (800,150),(800,200) */
/* CIF Decision (700,200) */
decision 
/* CIF TextExtension (950,200) Right */
/* CIF Line (950,250),(900,250) */
NumVisibleShips = 0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,300),(800,350) */
/* CIF TextPosition (825,300) */
(false):
/* CIF Extendedtask (700,350) */
task {i := 1;};
/* CIF Line (800,450),(800,500) */
/* CIF Label Invisible */
grst51:
/* CIF Extendedtask (700,500) */
task {
/* CIF TextExtension (950,500) Right */
/* CIF Line (950,550),(900,550) */
NextPoint := call NextPosition2(EnemyShips(i)!Coordinates,
EnemyShips(i)!Heading, EnemyShips(i)!Speed, 
EnemyShips(i)!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (800,600),(800,650) */
/* CIF Decision (700,650) */
decision 
/* CIF TextExtension (950,650) Right */
/* CIF Line (950,700),(900,700) */
NextPoint = MyShipNextState!Coordinates
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,700),(350,700),(350,750) */
/* CIF TextPosition (675,650) */
(true):
/* CIF Return (300,750),(100,100) */
return ENEMY_SHIP_COLLISION;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,750),(800,850) */
/* CIF TextPosition (825,775) */
(false):
/* CIF Extendedtask (700,850) */
task {i := i+1;};
/* CIF Line (800,950),(800,1000) */
/* CIF Decision (700,1000) */
decision 
/* CIF TextExtension (950,1000) Right */
/* CIF Line (950,1050),(900,1050) */
 i <= NumVisibleShips
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1050),(250,1050),(250,475),(800,475),(800,500) */
/* CIF TextPosition (650,1000) */
(true):
/* CIF Join Invisible */
join grst51;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1100),(800,1150) */
/* CIF TextPosition (825,1100) */
(false):
/* CIF Label Invisible */
grst52:
/* CIF Extendedtask (700,1150) */
task {i := 1;};
/* CIF Line (800,1250),(800,1300) */
/* CIF Label Invisible */
grst53:
/* CIF Decision (700,1300) */
decision index = i;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1400),(800,1450) */
/* CIF TextPosition (825,1400) */
(false):
/* CIF Extendedtask (700,1450) */
task {
/* CIF TextExtension (950,1450) Right */
/* CIF Line (950,1500),(900,1500) */
OtherShipNextState := 
call NextShipState2(i);
/* CIF End TextExtension */
};
/* CIF Line (800,1550),(800,1600) */
/* CIF Decision (700,1600) */
decision 
/* CIF TextExtension (950,1600) Right */
/* CIF Line (950,1650),(900,1650) */
OtherShipNextState!Coordinates = 
MyShipNextState!Coordinates
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1650),(400,1650),(400,1700) */
/* CIF TextPosition (650,1600) */
(true):
/* CIF Return (350,1700),(100,100) */
return MY_SHIP_COLLISION;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1700),(800,1850) */
/* CIF TextPosition (825,1725) */
(false):
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1350),(325,1350),(325,1825),(800,1825),(800,1850) */
/* CIF TextPosition (650,1350) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,1850) */
task {i := i+1;};
/* CIF Line (800,1950),(800,2000) */
/* CIF Decision (700,2000) */
decision 
/* CIF TextExtension (950,2000) Right */
/* CIF Line (950,2050),(900,2050) */
 i <= NumMyShips
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,2050),(250,2050),(250,1275),(800,1275),(800,1300) */
/* CIF TextPosition (675,2000) */
(true):
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,2100),(800,2150) */
/* CIF TextPosition (825,2100) */
(false):
/* CIF Return (750,2150),(100,100) */
return NO_COLLISION;
/* CIF End Decision */
enddecision;
/* CIF Join Invisible */
join grst53;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,250),(175,250),(175,1125),(800,1125),(800,1150) */
/* CIF TextPosition (625,200) */
(true):
/* CIF Join Invisible */
join grst52;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection P1;
/* CIF End ProcedureDiagram */
endprocedure isCollision2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\NewHeading.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure NewHeadingChange2
; fpar
    in OurShCurrState tShipCurrentState,
    TargetPoint tCoordinates;
 returns ReturnDirect tTurnDirection;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (100,350) */
newtype tCos
   Array(Integer, Real);
endnewtype;
/* CIF End Text */
/* CIF Text (100,550) */
 dcl
   NextHding tHeading,
   RightPoint, LeftPoint,  StraightPoint tCoordinates,
   i, indx  Integer,
   min Real,
   Cos tCos,
   CurrSpeed tSCMaxSpeed;
/* CIF End Text */
/* CIF Procedure (1000,350),(450,100) */
/* CIF TextPosition (1050,375) */
procedure CosBetweenVectors2 referenced;
/* CIF CurrentPage 2 */
/* CIF ProcedureStart (250,350) */
start ;
/* CIF Line (350,450),(350,550) */
/* CIF Extendedtask (250,550) */
task {
/* CIF TextExtension (500,550) Right */
/* CIF Line (500,600),(450,600) */
CurrSpeed := OurShCurrState!Speed;
if (CurrSpeed = 0) CurrSpeed :=  CurrSpeed+2;
NextHding := call NextDirection2(
OurShCurrState!Heading,RIGHT);
RightPoint := call NextPosition2(
OurShCurrState!Coordinates, NextHding, CurrSpeed, OurShCurrState!TypeShip);
 NextHding := call NextDirection2(OurShCurrState!Heading,LEFT);
LeftPoint := call NextPosition2(
OurShCurrState!Coordinates, NextHding, CurrSpeed, OurShCurrState!TypeShip);
StraightPoint :=call NextPosition2
(OurShCurrState!Coordinates, OurShCurrState!Heading, CurrSpeed, OurShCurrState!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (350,650),(350,1000) */
/* CIF Extendedtask (250,1000) */
task {
/* CIF TextExtension (500,1000) Right */
/* CIF Line (500,1050),(450,1050) */
Cos(1) := call CosBetweenVectors2(OurShCurrState!Coordinates, RightPoint, TargetPoint);
Cos(2) := call CosBetweenVectors2(OurShCurrState!Coordinates, LeftPoint, TargetPoint);
Cos(3) := call CosBetweenVectors2(OurShCurrState!Coordinates, StraightPoint, TargetPoint);
/* CIF End TextExtension */
};
/* CIF Line (350,1100),(350,1150) */
/* CIF Extendedtask (250,1150) */
task {
/* CIF TextExtension (500,1150) Right */
/* CIF Line (500,1200),(450,1200) */
min := Cos(1);
indx := 1;
for( i :=2, i<=3, i+1){
  if (Cos(i) > min) {
     min := Cos(i);
     indx := i;
  }
} 
/* CIF End TextExtension */
};
/* CIF Line (350,1250),(350,1450) */
/* CIF Extendedtask (250,1450) */
task {
/* CIF TextExtension (500,1450) Right */
/* CIF Line (500,1500),(450,1500) */
if (indx = 1) ReturnDirect:=RIGHT;
else {
if (indx = 2) ReturnDirect:=LEFT;
 else ReturnDirect:=STRAIGHT;
}
/* CIF End TextExtension */
};
/* CIF Line (350,1550),(350,1650) */
/* CIF Return (300,1650),(100,100) */
return ReturnDirect;
/* CIF CurrentPage 1 */
/* CIF End ProcedureDiagram */
endprocedure NewHeadingChange2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\CosBetweenVectors.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure CosBetweenVectors2
; fpar
  in StartPoint, EndPoint1, EndPoint2 tCoordinates; 
returns Cos Real;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (400,300) */
start ;
/* CIF Line (500,400),(500,450) */
/* CIF Decision (400,450) */
decision 
/* CIF TextExtension (800,450) Right */
/* CIF Line (800,500),(600,500) */
(StartPoint = EndPoint1) OR (StartPoint = EndPoint2)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (400,500),(150,500),(150,550) */
/* CIF TextPosition (375,450) */
(true):
/* CIF Extendedtask (50,550) */
task {Cos := -2;};
/* CIF Line (150,650),(150,700) */
/* CIF Return (100,700),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,550),(500,600) */
/* CIF TextPosition (525,550) */
(false):
/* CIF Decision (400,600) */
decision 
/* CIF TextExtension (800,600) Right */
/* CIF Line (800,650),(600,650) */
( (EndPoint1!x - StartPoint!x = 0) AND (EndPoint2!x - StartPoint!x =0) AND 
   ((EndPoint1!y - StartPoint!y)*(EndPoint2!y - StartPoint!y) > 0) )
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,700),(500,750) */
/* CIF TextPosition (525,700) */
(false):
/* CIF Decision (400,750) */
decision 
/* CIF TextExtension (800,750) Right */
/* CIF Line (800,800),(600,800) */
( (EndPoint1!y - StartPoint!y = 0) AND (EndPoint2!y - StartPoint!y =0) AND 
   ((EndPoint1!x - StartPoint!x)*(EndPoint2!x - StartPoint!x) > 0) )
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,850),(500,900) */
/* CIF TextPosition (525,875) */
(false):
/* CIF Decision (400,900) */
decision 
/* CIF TextExtension (800,900) Right */
/* CIF Line (800,950),(600,950) */
( (EndPoint1!y - StartPoint!y /= 0) AND (EndPoint2!y - StartPoint!y /=0)) AND
( (EndPoint1!x - StartPoint!x /= 0) AND (EndPoint2!x - StartPoint!x /=0)) AND
 ( float(EndPoint1!x - StartPoint!x)/float(EndPoint2!x - StartPoint!x) = 
   float(EndPoint1!y - StartPoint!y)/float(EndPoint2!y - StartPoint!y) )AND
 ( ((EndPoint1!x - StartPoint!x)*(EndPoint2!x - StartPoint!x) > 0) AND
    ((EndPoint1!y - StartPoint!y)*(EndPoint2!y - StartPoint!y) > 0) )
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (400,950),(350,950),(350,1150) */
/* CIF TextPosition (325,975) */
(true):
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (600,950),(650,950),(650,1150) */
/* CIF TextPosition (675,975) */
(false):
/* CIF Extendedtask (550,1150) */
task {
/* CIF TextExtension (800,1150) Right */
/* CIF Line (800,1200),(750,1200) */
Cos := float((EndPoint1!x - StartPoint!x)*(EndPoint2!x - StartPoint!x) 
                   + (EndPoint1!y - StartPoint!y)*(EndPoint2!y - StartPoint!y))/
float((call getDistance(StartPoint!x, StartPoint!y, EndPoint1!x, EndPoint1!y))*
         (call getDistance(StartPoint!x, StartPoint!y, EndPoint2!x, EndPoint2!y)));
/* CIF End TextExtension */
};
/* CIF Line (650,1250),(650,1300) */
/* CIF Return (600,1300),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (400,800),(350,800),(350,1150) */
/* CIF TextPosition (325,825) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (400,650),(350,650),(350,1150) */
/* CIF TextPosition (325,675) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (250,1150) */
task {Cos := 2;};
/* CIF Line (350,1250),(350,1300) */
/* CIF Return (300,1300),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure CosBetweenVectors2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\NextDirection.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure NextDirection2
; fpar
  CurrHding tHeading,
  Dir tHeadingChange;
  returns NewHeading tHeading;
/* CIF DefaultSize (200,100) */
/* CIF Text (1350,150) */
dcl
   Numbr Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,200) */
start ;
/* CIF Line (800,300),(800,400) */
/* CIF Extendedtask (700,400) */
task {
/* CIF TextExtension (950,400) Right */
/* CIF Line (950,450),(900,450) */
Numbr := h2i(CurrHding);
/* CIF End TextExtension */
};
/* CIF Line (800,500),(800,600) */
/* CIF Decision (700,600) */
decision Dir;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,650),(650,650),(650,750) */
/* CIF TextPosition (550,675) */
(RIGHT):
/* CIF Extendedtask (550,750) */
task {
/* CIF TextExtension (500,750) Left */
/* CIF Line (500,800),(550,800) */
Numbr := Numbr +1;
if (Numbr > 7) Numbr := 0;
/* CIF End TextExtension */
};
/* CIF Line (650,850),(650,875),(800,875),(800,950) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,650),(950,650),(950,750) */
/* CIF TextPosition (975,675) */
(LEFT):
/* CIF Extendedtask (850,750) */
task {
/* CIF TextExtension (1100,750) Right */
/* CIF Line (1100,800),(1050,800) */
Numbr := Numbr -1;
if (Numbr < 0) Numbr:= 7;
/* CIF End TextExtension */
};
/* CIF Line (950,850),(950,875),(800,875),(800,950) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,950) */
task {
/* CIF TextExtension (950,950) Right */
/* CIF Line (950,1000),(900,1000) */
NewHeading := i2h(Numbr);
/* CIF End TextExtension */
};
/* CIF Line (800,1050),(800,1150) */
/* CIF Return (750,1150),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure NextDirection2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\NextPosition.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure NextPosition2
; fpar
  CurrPos tCoordinates,
  Direct tHeading,
  Speed tSCMaxSpeed,
  NameShip tNameShip;
  returns NextPos tCoordinates;
/* CIF DefaultSize (200,100) */
/* CIF Text (1300,100) */
dcl
  IncX, IncY, Deep, maxDeep Integer,
  flag Real := 1,
  i Integer := 1,
  onLand Boolean;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (700,150) */
start ;
/* CIF Line (800,250),(800,350) */
/* CIF Decision (700,350) */
decision Direct;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,400),(200,400),(200,450) */
/* CIF TextPosition (225,400) */
(NORTH):
/* CIF Extendedtask (100,450) */
task {IncX:=0;
IncY:=1;};
/* CIF Line (200,550),(200,575),(800,575),(800,1100) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,400),(1450,400),(1450,450) */
/* CIF TextPosition (1475,400) */
(NORTH_WEST):
/* CIF Extendedtask (1350,450) */
task {
/* CIF TextExtension (1600,450) Right */
/* CIF Line (1600,500),(1550,500) */
IncX:=-1;
IncY:=1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1450,550),(1450,575),(800,575),(800,1100) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,400),(350,400),(350,600) */
/* CIF TextPosition (375,525) */
(EAST):
/* CIF Extendedtask (250,600) */
task {IncX:=1;
IncY:=0;};
/* CIF Line (350,700),(350,725),(800,725),(800,1100) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,400),(1250,400),(1250,600) */
/* CIF TextPosition (1375,600) */
(SOUTH_WEST):
/* CIF Extendedtask (1150,600) */
task {
/* CIF TextExtension (1600,600) Right */
/* CIF Line (1600,650),(1350,650) */
IncX:=-1;
IncY:=-1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1250,700),(1250,725),(800,725),(800,1100) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,400),(500,400),(500,750) */
/* CIF TextPosition (525,675) */
(WEST):
/* CIF Extendedtask (400,750) */
task {IncX:=-1;
IncY:=0;};
/* CIF Line (500,850),(500,875),(800,875),(800,1100) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,400),(1100,400),(1100,750) */
/* CIF TextPosition (1225,750) */
(NORTH_EAST):
/* CIF Extendedtask (1000,750) */
task {
/* CIF TextExtension (1600,750) Right */
/* CIF Line (1600,800),(1200,800) */
IncX:=1;
IncY:=1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (1100,850),(1100,875),(800,875),(800,1100) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,400),(650,400),(650,900) */
/* CIF TextPosition (675,825) */
(SOUTH):
/* CIF Extendedtask (550,900) */
task {IncX:=0;
IncY:=-1;};
/* CIF Line (650,1000),(650,1025),(800,1025),(800,1100) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (900,400),(950,400),(950,900) */
/* CIF TextPosition (1075,900) */
(SOUTH_EAST):
/* CIF Extendedtask (850,900) */
task {
/* CIF TextExtension (1600,900) Right */
/* CIF Line (1600,950),(1050,950) */
IncX:=1;
IncY:=-1;
flag:=sqrt2;
/* CIF End TextExtension */
};
/* CIF Line (950,1000),(950,1025),(800,1025),(800,1100) */
/* CIF End Decision */
enddecision;
/* CIF Extendedtask (700,1100) */
task {
/* CIF TextExtension (950,1100) Right */
/* CIF Line (950,1150),(900,1150) */
onLand := false;
NextPos := CurrPos;
maxDeep := d2i(ShipsCharacter(NameShip)!MaxDeep);
Deep := call getDeepXY(NextPos!x,NextPos!y);
if (Deep < maxDeep) onLand := true;
/* CIF End TextExtension */
};
/* CIF Line (800,1200),(800,1350) */
/* CIF Label Invisible */
grst54:
/* CIF Decision (700,1350) */
decision 
/* CIF TextExtension (950,1350) Right */
/* CIF Line (950,1400),(900,1400) */
 i<=fix(float(Speed)/flag)
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1450),(800,1500) */
/* CIF TextPosition (825,1450) */
(true):
/* CIF Decision (700,1500) */
decision 
/* CIF TextExtension (950,1500) Right */
/* CIF Line (950,1550),(900,1550) */
(NextPos!x + IncX < 0) OR 
(NextPos!y + IncY < 0) OR
(NextPos!x + IncX > MaxXCoordinate) OR 
(NextPos!y + IncY > MaxYCoordinate) OR
( (Deep < maxDeep) AND (onLand = false) )
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1550),(500,1550),(500,1600) */
/* CIF TextPosition (650,1500) */
(true):
/* CIF Label Invisible */
grst55:
/* CIF Return (450,1600),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (800,1600),(800,1700) */
/* CIF TextPosition (825,1625) */
(false):
/* CIF Extendedtask (700,1700) */
task {
/* CIF TextExtension (950,1700) Right */
/* CIF Line (950,1750),(900,1750) */
NextPos!x := NextPos!x + IncX;
NextPos!y := NextPos!y + IncY;
Deep := call getDeepXY(NextPos!x,NextPos!y);
/* CIF End TextExtension */
};
/* CIF Line (800,1800),(800,1850) */
/* CIF Extendedtask (700,1850) */
task {i := i+1;};
/* CIF Line (800,1950),(800,1975),(400,1975),(400,1325),(800,1325),(800,1350) */
/* CIF Join Invisible */
join grst54;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (700,1400),(500,1400),(500,1600) */
/* CIF TextPosition (650,1350) */
(false):
/* CIF Join Invisible */
join grst55;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure NextPosition2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\NextShipState.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure NextShipState2
;fpar
   in ShipIndex Integer;
returns ShipNextState tShipCurrentState;
/* CIF DefaultSize (200,100) */
/* CIF Text (1350,100) */
dcl
   OldSpeed tSCMaxSpeed,
   OldHeading tHeading,
   OldCoords tCoordinates,
   TypeShp tNameShip,
   TempSpeed Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (600,250) */
start ;
/* CIF Line (700,350),(700,400) */
/* CIF Extendedtask (600,400) */
task {
/* CIF TextExtension (900,400) Right */
/* CIF Line (900,450),(800,450) */
OldSpeed := ShipsCurrState(ShipIndex)!Speed;
OldHeading := ShipsCurrState(ShipIndex)!Heading;
OldCoords := ShipsCurrState(ShipIndex)!Coordinates;
TypeShp := ShipsCurrState(ShipIndex)!TypeShip;
/* CIF End TextExtension */
};
/* CIF Line (700,500),(700,600) */
/* CIF Decision (600,600) */
decision 
/* CIF TextExtension (900,600) Right */
/* CIF Line (900,650),(800,650) */
CommandToShip(ShipIndex)!isSet
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,700),(700,800) */
/* CIF TextPosition (725,725) */
(true):
/* CIF Decision (600,800) */
decision 
/* CIF TextExtension (1000,800) Right */
/* CIF Line (1000,850),(800,850) */
CommandToShip(ShipIndex)!OrderType
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,850),(850,850),(850,950) */
/* CIF TextPosition (850,900) */
(_ACCEL):
/* CIF Extendedtask (750,950) */
task {
/* CIF TextExtension (1000,950) Right */
/* CIF Line (1000,1000),(950,1000) */
TempSpeed := OldSpeed +
fix(float(ShipsCharacter(TypeShp)!_
MaxAcceleration)*Command_
ToShip(ShipIndex)!Accel);
if (TempSpeed < 0)  ShipNextState!Speed := 0;
if (TempSpeed > (ShipsCharacter(TypeShp)!MaxSpeed)) 
ShipNextState!Speed := ShipsCharacter(TypeShp)!MaxSpeed;
ShipNextState!Heading := OldHeading;
ShipNextState!Coordinates := call NextPosition2
(OldCoords, OldHeading, ShipNextState!Speed, 
ShipNextState!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (850,1050),(850,2050) */
/* CIF Label Invisible */
grst56:
/* CIF Return (800,2050),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,900),(700,1350) */
/* CIF TextPosition (725,1300) */
(_RIGHT):
/* CIF Extendedtask (600,1350) */
task {
/* CIF TextExtension (1000,1350) Right */
/* CIF Line (1000,1400),(800,1400) */
ShipNextState!Speed := OldSpeed;
ShipNextState!Heading := call NextDirection2(
OldHeading, RIGHT);
ShipNextState!Coordinates := call NextPosition2(
OldCoords,ShipNextState!Heading, OldSpeed, 
ShipNextState!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (700,1450),(700,1475),(850,1475),(850,2050) */
/* CIF Join Invisible */
join grst56;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,850),(550,850),(550,1600) */
/* CIF TextPosition (575,1550) */
(_LEFT):
/* CIF Extendedtask (450,1600) */
task {
/* CIF TextExtension (1000,1600) Right */
/* CIF Line (1000,1650),(650,1650) */
ShipNextState!Speed := OldSpeed;
ShipNextState!Heading := call NextDirection2(
OldHeading, LEFT);
ShipNextState!Coordinates := call NextPosition2(
OldCoords,ShipNextState!Heading, OldSpeed, 
ShipNextState!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (550,1700),(550,1725),(850,1725),(850,2050) */
/* CIF Join Invisible */
join grst56;
/* CIF Answer Left */
/* CIF Line (600,850),(400,850),(400,1850) */
/* CIF TextPosition (425,1800) */
else:
/* CIF Label Invisible */
grst57:
/* CIF Extendedtask (300,1850) */
task {
/* CIF TextExtension (1000,1850) Right */
/* CIF Line (1000,1900),(500,1900) */
ShipNextState!Speed := OldSpeed;
ShipNextState!Heading := OldHeading;
ShipNextState!Coordinates := call NextPosition2(
OldCoords,OldHeading, OldSpeed, ShipNextState!TypeShip);
/* CIF End TextExtension */
};
/* CIF Line (400,1950),(400,1975),(850,1975),(850,2050) */
/* CIF Join Invisible */
join grst56;
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,650),(400,650),(400,1850) */
/* CIF TextPosition (550,600) */
(false):
/* CIF Join Invisible */
join grst57;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure NextShipState2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\EnemyNotFound.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure EnemyNotFound2
; fpar
  in/out ShCurrSt tShipCurrentState,
  in k Integer;
/* CIF DefaultSize (200,100) */
/* CIF Text (1250,50) */
dcl
   ChangeDirection tTurnDirection,
   accel Integer,
   ShipName tNameShip,
   MaxAccel tSCMaxAcceleration,
   factorAccel tFactorAcceleration;
   
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (600,200) */
start ;
/* CIF Line (700,300),(700,400) */
/* CIF Extendedtask (600,400) */
task {
/* CIF TextExtension (900,400) Right */
/* CIF Line (900,450),(800,450) */
ChangeDirection := 
 call NewHeadingChange2(ShCurrSt,HeadingTarget);
ShipName := ShCurrSt!TypeShip;
/* CIF End TextExtension */
};
/* CIF Line (700,500),(700,650) */
/* CIF Decision (600,650) */
decision 
/* CIF TextExtension (1100,650) Right */
/* CIF Line (1100,700),(800,700) */
ChangeDirection
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,700),(500,700),(500,800) */
/* CIF TextPosition (400,725) */
(RIGHT):
/* CIF Extendedtask (400,800) */
task {
/* CIF TextExtension (350,800) Left */
/* CIF Line (350,850),(400,850) */
CommandTo_
Ship(k)!_
OrderType := 
_RIGHT;
CommandTo_
Ship(k)!is_
Set := true;
/* CIF End TextExtension */
};
/* CIF Line (500,900),(500,950) */
/* CIF Return (450,950),(100,100) */
return ;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,700),(950,700),(950,800) */
/* CIF TextPosition (975,725) */
(LEFT):
/* CIF Extendedtask (850,800) */
task {
/* CIF TextExtension (1100,800) Right */
/* CIF Line (1100,850),(1050,850) */
CommandTo_
Ship(k)!_
OrderType :=
 _LEFT;
CommandTo_
Ship(k)!is_
Set := true; 
/* CIF End TextExtension */
};
/* CIF Line (950,900),(950,950) */
/* CIF Return (900,950),(100,100) */
return ;
/* CIF Answer */
/* CIF Line (700,750),(700,1100) */
/* CIF TextPosition (725,750) */
else:
/* CIF Decision (600,1100) */
decision 
/* CIF TextExtension (850,1100) Right */
/* CIF Line (850,1150),(800,1150) */
ShCurrSt!Speed = minSpeed
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,1200),(700,1250) */
/* CIF TextPosition (725,1200) */
(false):
/* CIF Extendedtask (600,1250) */
task {
/* CIF TextExtension (850,1250) Right */
/* CIF Line (850,1300),(800,1300) */
MaxAccel := ShipsCharacter(
ShipName)!MaxAcceleration;
accel := minSpeed - ShCurrSt!Speed;
if (float(accel)/float(MaxAccel) <= -1)  factorAccel := -1;
else {
  if (float(accel)/float(MaxAccel) >= 1)  factorAccel := 1;
  else factorAccel := float(accel)/float(MaxAccel);
}
CommandTo_
Ship(index)!OrderType := _ACCEL;
CommandToShip(k)!Accel := factorAccel;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (700,1350),(700,1450) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,1150),(575,1150),(575,1425),(700,1425),(700,1450) */
/* CIF TextPosition (550,1100) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (650,1450),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure EnemyNotFound2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 3 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 4 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\EnemyFound.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 3 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 4 Scale 120 Grid (50,50) AutoNumbered */
procedure EnemyFound2
; fpar
  in/out ShCurrSt tShipCurrentState,
  in k Integer;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (100,300) */
newtype tShootWeaponry
struct
   TypeWeaponry tNameWeaponry;
   isWeaponry Boolean;
endnewtype;
/* CIF End Text */
/* CIF Text (100,550) */
newtype tShootList
struct
   SortParam Real;
   Number Integer;
endnewtype;
/* CIF End Text */
/* CIF Text (100,800) */
newtype tStringShootList
  String(tShootList,empty);
endnewtype;
/* CIF End Text */
/* CIF Text (100,950) */
dcl
   MaxPointsToShoot, NumPointsToShoot,i,j Integer,
   DistBetweenShips Integer,
   NextHeading tTurnDirection,
   CanShootWeaponry tShootWeaponry,
   BestWeaponry tNameWeaponry,
   ShootPoint, Temp tShootList,
   ShootList tStringShootList,
   PointToOrder tCoordinates,
   DestroyFlag Boolean := false;
/* CIF End Text */
/* CIF Procedure (850,300),(400,100) */
/* CIF TextPosition (900,325) */
procedure ActivateREPAIR2 referenced;
/* CIF Procedure (850,450),(550,100) */
/* CIF TextPosition (922,475) */
procedure CanShootEnemyCenter2 referenced;
/* CIF Procedure (850,600),(350,100) */
/* CIF TextPosition (900,625) */
procedure SortShootList2 referenced;
/* CIF CurrentPage 2 */
/* CIF ProcedureStart (850,150) */
start ;
/* CIF Line (950,250),(950,350) */
/* CIF Decision (850,350) */
decision 
/* CIF TextExtension (550,350) Left */
/* CIF Line (550,400),(850,400) */
ShCurrSt!TypeShip
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (850,400),(700,400),(700,550) */
/* CIF TextPosition (725,475) */
(REPAIR_BOAT):
/* CIF Extendedtask (600,550) */
task {
/* CIF TextExtension (550,550) Left */
/* CIF Line (550,600),(600,600) */
for (i:=1, i<=NumMyShips, i+1) {
     if (ShipsCurrState(i)!Resource < 
         ShipsCharacter
         (ShipsCurrState(i)!_
         TypeShip)!MaxResource) {
         DestroyFlag := true;
         break; 
     }
}
/* CIF End TextExtension */
};
/* CIF Line (700,650),(700,1000) */
/* CIF Decision (600,1000) */
decision 
/* CIF TextExtension (550,1000) Left */
/* CIF Line (550,1050),(600,1050) */
(ShCurrSt!_
Ammunition
(REPAIR) /= 0) AND
(DestroyFlag = true) AND
(NumMyShips > 1)
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,1050),(1000,1050),(1000,1150) */
/* CIF TextPosition (825,1000) */
(true):
/* CIF ProcedureCall (900,1150) */
call 
/* CIF TextExtension (1150,1150) Right */
/* CIF Line (1150,1200),(1100,1200) */
ActivateREPAIR2
/* CIF End TextExtension */
;
/* CIF Line (1000,1250),(1000,1300) */
/* CIF Return (950,1300),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,1100),(700,1450) */
/* CIF TextPosition (725,1100) */
(false):
/* CIF Decision (600,1450) */
decision 
/* CIF TextExtension (900,1450) Right */
/* CIF Line (900,1500),(800,1500) */
NumMyShips = 1
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,1500),(550,1500),(550,1600) */
/* CIF TextPosition (650,1550) */
(false):
/* CIF Task (450,1600) */
task 
/* CIF TextExtension (400,1600) Left */
/* CIF Line (400,1650),(450,1650) */
NextHeading := call
NewHeadingChange2( 
ShCurrSt,MyCenter)
/* CIF End TextExtension */
;
/* CIF Line (550,1700),(550,1725),(700,1725),(700,1800) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,1500),(850,1500),(850,1600) */
/* CIF TextPosition (775,1550) */
(true):
/* CIF Task (750,1600) */
task 
/* CIF TextExtension (1000,1600) Right */
/* CIF Line (1000,1650),(950,1650) */
NextHeading := call
NewHeadingChange2(ShCurrSt,
EnemyCenter)
/* CIF End TextExtension */
;
/* CIF Line (850,1700),(850,1725),(700,1725),(700,1800) */
/* CIF End Decision */
enddecision;
/* CIF Join (650,1800),(100,100) */
join F2;
/* CIF End Decision */
enddecision;
/* CIF Answer Right */
/* CIF Line (1050,400),(1250,400),(1250,500) */
/* CIF TextPosition (1175,450) */
else:
/* CIF Task (1150,500) */
task 
/* CIF TextExtension (1400,500) Right */
/* CIF Line (1400,550),(1350,550) */
CanShootWeaponry := 
call CanShootEnemyCenter2
/* CIF End TextExtension */
;
/* CIF Line (1250,600),(1250,650) */
/* CIF Decision (1150,650) */
decision 
/* CIF TextExtension (1400,650) Right */
/* CIF Line (1400,700),(1350,700) */
CanShootWeaponry!isWeaponry
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (1150,700),(1000,700),(1000,750) */
/* CIF TextPosition (1150,650) */
(true):
/* CIF Join (950,750),(100,100) */
join F1;
/* CIF Answer InvisibleBrackets */
/* CIF Line (1250,750),(1250,850) */
/* CIF TextPosition (1275,775) */
(false):
/* CIF Task (1150,850) */
task 
/* CIF TextExtension (1400,850) Right */
/* CIF Line (1400,900),(1350,900) */
NextHeading := call
NewHeadingChange2(ShCurrSt,
EnemyCenter)
/* CIF End TextExtension */
;
/* CIF Line (1250,950),(1250,1000) */
/* CIF Join (1200,1000),(100,100) */
join F2;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF CurrentPage 1 */
/* CIF CurrentPage 3 */
/* CIF Label (850,250),(100,100) */
connection F2:
/* CIF Line (900,350),(900,450) */
/* CIF Decision (800,450) */
decision 
/* CIF TextExtension (1050,450) Right */
/* CIF Line (1050,500),(1000,500) */
NextHeading
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (900,550),(900,650) */
/* CIF TextPosition (950,575) */
(LEFT):
/* CIF Extendedtask (800,650) */
task {
/* CIF TextExtension (1050,650) Right */
/* CIF Line (1050,700),(1000,700) */
CommandToShip(k)!_
OrderType := _LEFT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (900,750),(900,950) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (800,500),(700,500),(700,800) */
/* CIF TextPosition (725,575) */
(RIGHT):
/* CIF Extendedtask (600,800) */
task {
/* CIF TextExtension (1050,800) Right */
/* CIF Line (1050,850),(800,850) */
CommandToShip(k)!_
OrderType := _RIGHT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (700,900),(700,925),(900,925),(900,950) */
/* CIF Answer Left */
/* CIF Line (800,500),(550,500),(550,1050) */
/* CIF TextPosition (625,575) */
else:
/* CIF Decision (450,1050) */
decision 
/* CIF TextExtension (1050,1050) Right */
/* CIF Line (1050,1100),(650,1100) */
ShCurrSt!Speed = 
ShipsCharacter_
(ShCurrSt!TypeShip)!_
MaxSpeed 
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (650,1100),(750,1100),(750,1250) */
/* CIF TextPosition (650,1050) */
(false):
/* CIF Extendedtask (650,1250) */
task {
/* CIF TextExtension (1050,1250) Right */
/* CIF Line (1050,1300),(850,1300) */
CommandToShip(k)!_
OrderType := _ACCEL;
CommandToShip(k)!Accel := 1;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (750,1350),(750,1375),(550,1375),(550,1400) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (550,1150),(550,1400) */
/* CIF TextPosition (475,1175) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Return (500,1400),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF Return (850,950),(100,100) */
return ;
/* CIF End Label */
endconnection F2;
/* CIF CurrentPage 4 */
/* CIF Label (700,50),(100,100) */
connection F1:
/* CIF Line (750,150),(750,200) */
/* CIF Decision (650,200) */
decision 
/* CIF TextExtension (950,200) Right */
/* CIF Line (950,250),(850,250) */
ShCurrSt!Speed = 0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (750,300),(750,350) */
/* CIF TextPosition (775,300) */
(false):
/* CIF Extendedtask (650,350) */
task {
/* CIF TextExtension (900,350) Right */
/* CIF Line (900,400),(850,400) */
CommandToShip(k)!OrderType := _ACCEL;  
CommandToShip(k)!Accel := -1;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (750,450),(750,500) */
/* CIF Return (700,500),(100,100) */
return ;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (650,250),(250,250),(250,650) */
/* CIF TextPosition (575,250) */
(true):
/* CIF Extendedtask (150,650) */
task {
/* CIF TextExtension (400,650) Right */
/* CIF Line (400,700),(350,700) */
BestWeaponry := CanShootWeaponry!TypeWeaponry;
if (ShipsCharacter(ShCurrSt!TypeShip)!MaxLaunchUnit(BestWeaponry) < 
    ShCurrSt!Ammunition(BestWeaponry))
    MaxPointsToShoot :=  ShipsCharacter(ShCurrSt!TypeShip)!_
                                            MaxLaunchUnit(BestWeaponry);
else 
    MaxPointsToShoot := ShCurrSt!Ammunition(BestWeaponry);
for (i:=1, i<=NumVisibleShips, i+1) {
     DistBetweenShips := call
     getDistance(ShCurrSt!Coordinates!x,ShCurrSt!Coordinates!y,
     EnemyShips(i)!Coordinates!x,EnemyShips(i)!Coordinates!y);
     if (WeaponryCharacter(BestWeaponry)!Range >= DistBetweenShips) {
         ShootPoint!SortParam := float(DistBetweenShips);
         ShootPoint!Number := i;
         ShootList := ShootList // mkstring(ShootPoint);
     }
}
call SortShootList2;
if (length(ShootList) > MaxPointsToShoot) NumPointsToShoot := MaxPointsToShoot;
else NumPointsToShoot := length(ShootList);
CommandToShip(k)!OrderType := _FIRE;
CommandToShip(k)!Fire!Weapon := BestWeaponry;
for (i:=1, i<=NumPointsToShoot, i+1) {
  PointToOrder := call NextPosition2(EnemyShips(ShootList(i)!Number)!Coordinates, 
                                                               EnemyShips(ShootList(i)!Number)!Heading, 
                                                               EnemyShips(ShootList(i)!Number)!Speed, 
                                                               EnemyShips(ShootList(i)!Number)!TypeShip);
  CommandToShip(k)!Fire!List := CommandToShip(k)!Fire!List // mkstring(PointToOrder);
}
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (250,750),(250,850) */
/* CIF Return (200,850),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End Label */
endconnection F1;
/* CIF End ProcedureDiagram */
endprocedure EnemyFound2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Page 2 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\ActivateREPAIR.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
/* CIF Specific SDT Page 2 Scale 120 Grid (50,50) AutoNumbered */
procedure ActivateREPAIR2;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF Text (1350,100) */
dcl
   NextShipSt tShipCurrentState;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (250,100) */
start ;
/* CIF Line (350,200),(350,250) */
/* CIF Extendedtask (250,250) */
task {
/* CIF TextExtension (500,250) Right */
/* CIF Line (500,300),(450,300) */
for (i:=1, i<=NumMyShips, i+1) {
     DistBetweenShips :=  call
     getDistance(ShCurrSt!Coordinates!x,ShCurrSt!Coordinates!y,
     ShipsCurrState(i)!Coordinates!x,ShipsCurrState(i)!Coordinates!y);
     if ((WeaponryCharacter(REPAIR)!Range >= DistBetweenShips) AND
         (ShipsCurrState(i)!Resource < 
          ShipsCharacter(ShipsCurrState(i)!TypeShip)!MaxResource)) {
          ShootPoint!SortParam := 
          float(ShipsCurrState(i)!Resource)/float(ShipsCharacter(ShipsCurrState(i)!TypeShip)!_
          MaxResource);
          ShootPoint!Number := i;
          ShootList := ShootList // mkstring(ShootPoint);
     }
}
/* CIF End TextExtension */
};
/* CIF Line (350,350),(350,800) */
/* CIF Decision (250,800) */
decision 
/* CIF TextExtension (650,800) Right */
/* CIF Line (650,850),(450,850) */
length(ShootList) = 0
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (350,900),(350,950) */
/* CIF TextPosition (375,900) */
(false):
/* CIF Decision (250,950) */
decision 
/* CIF TextExtension (650,950) Right */
/* CIF Line (650,1000),(450,1000) */
ShCurrSt!Speed = 0
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (450,1000),(500,1000),(500,1100) */
/* CIF TextPosition (525,1050) */
(false):
/* CIF Extendedtask (400,1100) */
task {
/* CIF TextExtension (650,1100) Right */
/* CIF Line (650,1150),(600,1150) */
CommandToShip(k)!OrderType := _ACCEL;  
CommandToShip(k)!Accel := -1;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (500,1200),(500,1250) */
/* CIF Return (450,1250),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (350,1050),(350,1400) */
/* CIF TextPosition (275,1050) */
(true):
/* CIF ProcedureCall (250,1400) */
call 
/* CIF TextExtension (550,1400) Right */
/* CIF Line (550,1450),(450,1450) */
SortShootList2
/* CIF End TextExtension */
;
/* CIF Line (350,1500),(350,1550) */
/* CIF Extendedtask (250,1550) */
task {
/* CIF TextExtension (550,1550) Right */
/* CIF Line (550,1600),(450,1600) */
if (ShipsCharacter(REPAIR_BOAT)!MaxLaunchUnit(REPAIR) < 
    ShCurrSt!Ammunition(REPAIR))
    MaxPointsToShoot :=  ShipsCharacter(REPAIR_BOAT)!_
                                            MaxLaunchUnit(REPAIR);
else 
    MaxPointsToShoot := ShCurrSt!Ammunition(REPAIR);
if (length(ShootList) > MaxPointsToShoot) NumPointsToShoot := MaxPointsToShoot;
else NumPointsToShoot := length(ShootList);
CommandToShip(k)!OrderType := _FIRE;
CommandToShip(k)!Fire!Weapon := REPAIR;
for (i:=1, i<=NumPointsToShoot, i+1) {
  NextShipSt := call NextShipState2(ShootList(i)!Number);
  PointToOrder := NextShipSt!Coordinates;
  CommandToShip(k)!Fire!List := CommandToShip(k)!Fire!List // mkstring(PointToOrder);
}
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (350,1650),(350,2000) */
/* CIF End Decision */
enddecision;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (250,850),(150,850),(150,1100) */
/* CIF TextPosition (225,800) */
(true):
/* CIF Join (100,1100),(100,100) */
join R1;
/* CIF End Decision */
enddecision;
/* CIF Label (100,1850),(100,100) */
R2:
/* CIF Line (150,1950),(150,1975),(350,1975),(350,2000) */
/* CIF Return (300,2000),(100,100) */
return ;
/* CIF CurrentPage 2 */
/* CIF Label (550,100),(100,100) */
connection R1:
/* CIF Line (600,200),(600,300) */
/* CIF Extendedtask (500,300) */
task {
/* CIF TextExtension (750,300) Right */
/* CIF Line (750,350),(700,350) */
ShootList := empty;
for (i:=1, i<=NumMyShips, i+1) {
     DistBetweenShips := call
     getDistance(ShCurrSt!Coordinates!x,ShCurrSt!Coordinates!y,
     ShipsCurrState(i)!Coordinates!x,ShipsCurrState(i)!Coordinates!y);
     if (ShipsCurrState(i)!Resource < 
         ShipsCharacter(ShipsCurrState(i)!TypeShip)!MaxResource) {
         ShootPoint!SortParam := 
         float(ShipsCurrState(i)!Resource)/float(ShipsCharacter(
                  ShipsCurrState(i)!TypeShip)!MaxResource);
         ShootPoint!Number := i;
         ShootList := ShootList // mkstring(ShootPoint);
     }
}
/* CIF End TextExtension */
};
/* CIF Line (600,400),(600,850) */
/* CIF ProcedureCall (500,850) */
call 
/* CIF TextExtension (750,850) Right */
/* CIF Line (750,900),(700,900) */
SortShootList2
/* CIF End TextExtension */
;
/* CIF Line (600,950),(600,1000) */
/* CIF Extendedtask (500,1000) */
task {
/* CIF TextExtension (750,1000) Right */
/* CIF Line (750,1050),(700,1050) */
NextHeading := call
NewHeadingChange2(ShCurrSt,
ShipsCurrState(ShootList(1)!Number)!Coordinates);
/* CIF End TextExtension */
};
/* CIF Line (600,1100),(600,1150) */
/* CIF Decision (500,1150) */
decision 
/* CIF TextExtension (750,1150) Right */
/* CIF Line (750,1200),(700,1200) */
NextHeading
/* CIF End TextExtension */
;
/* CIF Answer InvisibleBrackets */
/* CIF Line (600,1250),(600,1350) */
/* CIF TextPosition (650,1275) */
(LEFT):
/* CIF Extendedtask (500,1350) */
task {
/* CIF TextExtension (750,1350) Right */
/* CIF Line (750,1400),(700,1400) */
CommandToShip(k)!OrderType := _LEFT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (600,1450),(600,1650) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (500,1200),(400,1200),(400,1500) */
/* CIF TextPosition (425,1275) */
(RIGHT):
/* CIF Extendedtask (300,1500) */
task {
/* CIF TextExtension (750,1500) Right */
/* CIF Line (750,1550),(500,1550) */
CommandToShip(k)!OrderType := _RIGHT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (400,1600),(400,1625),(600,1625),(600,1650) */
/* CIF Answer Left */
/* CIF Line (500,1200),(250,1200),(250,1750) */
/* CIF TextPosition (325,1275) */
else:
/* CIF Decision (150,1750) */
decision 
/* CIF TextExtension (750,1750) Right */
/* CIF Line (750,1800),(350,1800) */
ShCurrSt!Speed = 
ShipsCharacter(REPAIR_BOAT)!MaxSpeed 
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (350,1800),(550,1800),(550,1900) */
/* CIF TextPosition (400,1750) */
(false):
/* CIF Extendedtask (450,1900) */
task {
/* CIF TextExtension (750,1900) Right */
/* CIF Line (750,1950),(650,1950) */
CommandToShip(k)!OrderType := _ACCEL;
CommandToShip(k)!Accel := 1;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (550,2000),(550,2025),(250,2025),(250,2050) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (250,1850),(250,2050) */
/* CIF TextPosition (275,1875) */
(true):
/* CIF End Decision */
enddecision;
/* CIF Join (200,2050),(100,100) */
join R2;
/* CIF End Decision */
enddecision;
/* CIF Return (550,1650),(100,100) */
return ;
/* CIF End Label */
endconnection R1;
/* CIF End ProcedureDiagram */
endprocedure ActivateREPAIR2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\CanShootEnemyCenter.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure CanShootEnemyCenter2
; 
returns Weapon  tShootWeaponry;
/* CIF DefaultSize (200,100) */
/* CIF Text (1500,50) */
dcl
   Dist Integer; 
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (750,100) */
start ;
/* CIF Line (850,200),(850,250) */
/* CIF Task (750,250) */
task 
/* CIF TextExtension (1000,250) Right */
/* CIF Line (1000,300),(950,300) */
Dist := call getDistance(ShCurrSt!Coordinates!x,
ShCurrSt!Coordinates!y, EnemyCenter!x,EnemyCenter!y)
/* CIF End TextExtension */
;
/* CIF Line (850,350),(850,400) */
/* CIF Decision (750,400) */
decision 
/* CIF TextExtension (1000,400) Right */
/* CIF Line (1000,450),(950,450) */
(ShCurrSt!Ammunition(MISSILE) /= 0) AND
(WeaponryCharacter(MISSILE)!Range >= Dist)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,450),(600,450),(600,500) */
/* CIF TextPosition (725,400) */
(true):
/* CIF Extendedtask (500,500) */
task {
/* CIF TextExtension (450,500) Left */
/* CIF Line (450,550),(500,550) */
Weapon!TypeWeaponry := 
   MISSILE;
Weapon!isWeaponry := 
   true;
/* CIF End TextExtension */
};
/* CIF Line (600,600),(600,650) */
/* CIF Return (550,650),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,500),(850,750) */
/* CIF TextPosition (875,525) */
(false):
/* CIF Decision (750,750) */
decision 
/* CIF TextExtension (1000,750) Right */
/* CIF Line (1000,800),(950,800) */
ShCurrSt!Ammunition(TORPEDO) /= 0 AND
(WeaponryCharacter(TORPEDO)!Range >= Dist)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,800),(600,800),(600,850) */
/* CIF TextPosition (725,750) */
(true):
/* CIF Extendedtask (500,850) */
task {
/* CIF TextExtension (450,850) Left */
/* CIF Line (450,900),(500,900) */
Weapon!TypeWeaponry := 
  TORPEDO;
Weapon!isWeaponry := 
  true;
/* CIF End TextExtension */
};
/* CIF Line (600,950),(600,1000) */
/* CIF Return (550,1000),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,850),(850,1100) */
/* CIF TextPosition (875,875) */
(false):
/* CIF Decision (750,1100) */
decision 
/* CIF TextExtension (1000,1100) Right */
/* CIF Line (1000,1150),(950,1150) */
(ShCurrSt!Ammunition(SHELL) /= 0) AND
(WeaponryCharacter(SHELL)!Range >= Dist)
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (750,1150),(600,1150),(600,1200) */
/* CIF TextPosition (725,1100) */
(true):
/* CIF Extendedtask (500,1200) */
task {
/* CIF TextExtension (450,1200) Left */
/* CIF Line (450,1250),(500,1250) */
Weapon!TypeWeaponry := 
  SHELL;
Weapon!isWeaponry := 
  true;
/* CIF End TextExtension */
};
/* CIF Line (600,1300),(600,1350) */
/* CIF Return (550,1350),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (850,1200),(850,1300) */
/* CIF TextPosition (875,1225) */
(false):
/* CIF Extendedtask (750,1300) */
task {
/* CIF TextExtension (1000,1300) Right */
/* CIF Line (1000,1350),(950,1350) */
Weapon!isWeaponry :=  false;
/* CIF End TextExtension */
};
/* CIF Line (850,1400),(850,1500) */
/* CIF Return (800,1500),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure CanShootEnemyCenter2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\SortShootList.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure SortShootList2;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (550,200) */
start ;
/* CIF Line (650,300),(650,350) */
/* CIF Extendedtask (550,350) */
task {
/* CIF TextExtension (800,350) Right */
/* CIF Line (800,400),(750,400) */
for (i:=1, i<=length(ShootList)-1, i+1) {
  for (j := length(ShootList), j>=i+1, j-1) {
     if (ShootList(j)!SortParam <  ShootList(j-1)!SortParam) {
             Temp := ShootList(j-1);
             ShootList(j-1) := ShootList(j);
             ShootList(j) := Temp;
     }
  }
  for (j := i+1, j<=length(ShootList)-1, j+1) {
     if (ShootList(j)!SortParam >  ShootList(j+1)!SortParam) {
             Temp := ShootList(j+1);
             ShootList(j+1) := ShootList(j);
             ShootList(j) := Temp;
     }          
  }
}
/* CIF End TextExtension */
};
/* CIF Line (650,450),(650,650) */
/* CIF Return (600,650),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure SortShootList2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\OutputOrder.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure OutputOrder2;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (600,200) */
start ;
/* CIF Line (700,300),(700,400) */
/* CIF Decision (600,400) */
decision 
/* CIF TextExtension (900,400) Right */
/* CIF Line (900,450),(800,450) */
CommandToShip(index)!isSet
/* CIF End TextExtension */
;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,450),(300,450),(300,500) */
/* CIF TextPosition (575,400) */
(false):
/* CIF Return (250,500),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,500),(700,650) */
/* CIF TextPosition (725,525) */
(true):
/* CIF Decision (600,650) */
decision 
/* CIF TextExtension (1050,650) Right */
/* CIF Line (1050,700),(800,700) */
CommandToShip(index)!OrderType
/* CIF End TextExtension */
;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (800,700),(900,700),(900,850) */
/* CIF TextPosition (925,775) */
(_LEFT):
/* CIF Output (800,850) Right */
output 
/* CIF TextExtension (1050,850) Right */
/* CIF Line (1050,900),(1000,900) */
OrderTurnRequest(
ShipsCurrState(index)!ShipId, StrategyID, LEFT)
/* CIF End TextExtension */
;
/* CIF Line (900,950),(900,1000) */
/* CIF Return (850,1000),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (700,750),(700,1150) */
/* CIF TextPosition (725,1075) */
(_RIGHT):
/* CIF Output (600,1150) Right */
output 
/* CIF TextExtension (850,1150) Right */
/* CIF Line (850,1200),(800,1200) */
OrderTurnRequest(
ShipsCurrState(index)!ShipId, StrategyID, RIGHT)
/* CIF End TextExtension */
;
/* CIF Line (700,1250),(700,1300) */
/* CIF Return (650,1300),(100,100) */
return ;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,700),(500,700),(500,1450) */
/* CIF TextPosition (525,1375) */
(_ACCEL):
/* CIF Output (400,1450) Right */
output 
/* CIF TextExtension (650,1450) Right */
/* CIF Line (650,1500),(600,1500) */
OrderSpeedRequest(ShipsCurrState(index)!ShipId, StrategyID,
CommandToShip(index)!Accel)
/* CIF End TextExtension */
;
/* CIF Line (500,1550),(500,1600) */
/* CIF Return (450,1600),(100,100) */
return ;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (600,700),(300,700),(300,1750) */
/* CIF TextPosition (350,1675) */
(_FIRE):
/* CIF Output (200,1750) Right */
output 
/* CIF TextExtension (450,1750) Right */
/* CIF Line (450,1800),(400,1800) */
OrderFireRequest(ShipsCurrState(index)!ShipId, StrategyID,
CommandToShip(index)!Fire!Weapon,CommandToShip(index)!Fire!List)
/* CIF End TextExtension */
;
/* CIF Line (300,1850),(300,1900) */
/* CIF Return (250,1900),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure OutputOrder2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\FindStartPoint.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure FindStartPoint2;
 
/* CIF DefaultSize (200,100) */
/* CIF Text (1350,50) */
newtype Dist 
   Array(Integer,Integer)
endnewtype;
/* CIF End Text */
/* CIF Text (1350,200) */
dcl 
   d Dist,
   count, i, min Integer;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (300,250) */
start ;
/* CIF Line (400,350),(400,400) */
/* CIF Extendedtask (300,400) */
task {
/* CIF TextExtension (550,400) Right */
/* CIF Line (550,450),(500,450) */
d(1) := call getDistance(MyCenter!x,MyCenter!y,FirstQuaterX, FirstQuaterY);
d(2) := call getDistance(MyCenter!x,MyCenter!y,SecondQuaterX, SecondQuaterY);
d(3) := call getDistance(MyCenter!x,MyCenter!y,ThirdQuaterX, ThirdQuaterY);
d(4) := call getDistance(MyCenter!x,MyCenter!y,FourthQuaterX, FourthQuaterY);
min := d(1); count:=1;
/* CIF End TextExtension */
};
/* CIF Line (400,500),(400,600) */
/* CIF Extendedtask (300,600) */
task {
/* CIF TextExtension (550,600) Right */
/* CIF Line (550,650),(500,650) */
for (i:=2,i<=4,i+1){
 if (d(i)<=min) {
   min := d(i);
   count := i; } 
}
/* CIF End TextExtension */
};
/* CIF Line (400,700),(400,800) */
/* CIF Decision (300,800) */
decision count;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (500,850),(700,850),(700,900) */
/* CIF TextPosition (725,850) */
(4):
/* CIF Extendedtask (600,900) */
task {
/* CIF TextExtension (850,900) Right */
/* CIF Line (850,950),(800,950) */
HeadingTarget !x:= FourthQuaterX;
HeadingTarget !y:= FourthQuaterY;
/* CIF End TextExtension */
};
/* CIF Line (700,1000),(700,1475),(400,1475),(400,1500) */
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (500,850),(550,850),(550,1050) */
/* CIF TextPosition (575,900) */
(3):
/* CIF Extendedtask (450,1050) */
task {
/* CIF TextExtension (850,1050) Right */
/* CIF Line (850,1100),(650,1100) */
HeadingTarget !x:= ThirdQuaterX;
HeadingTarget !y:= ThirdQuaterY;
/* CIF End TextExtension */
};
/* CIF Line (550,1150),(550,1475),(400,1475),(400,1500) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (400,900),(400,1200) */
/* CIF TextPosition (425,900) */
(2):
/* CIF Extendedtask (300,1200) */
task {
/* CIF TextExtension (850,1200) Right */
/* CIF Line (850,1250),(500,1250) */
HeadingTarget !x:= SecondQuaterX;
HeadingTarget !y:= SecondQuaterY;
/* CIF End TextExtension */
};
/* CIF Line (400,1300),(400,1500) */
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (300,850),(250,850),(250,1350) */
/* CIF TextPosition (275,900) */
(1):
/* CIF Extendedtask (150,1350) */
task {
/* CIF TextExtension (850,1350) Right */
/* CIF Line (850,1400),(350,1400) */
HeadingTarget !x:= FirstQuaterX;
HeadingTarget !y:= FirstQuaterY;
/* CIF End TextExtension */
};
/* CIF Line (250,1450),(250,1475),(400,1475),(400,1500) */
/* CIF End Decision */
enddecision;
/* CIF Return (350,1500),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure FindStartPoint2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\SearchHeadingTarget.spd' */
/* CIF Specific SDT Page 1 Scale 100 Grid (50,50) AutoNumbered */
procedure FindHeadingTarget2;
/* CIF DefaultSize (200,100) */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (550,250) */
start ;
/* CIF Line (650,350),(650,500) */
/* CIF Extendedtask (550,500) */
task {
/* CIF TextExtension (800,500) Right */
/* CIF Line (800,550),(750,550) */
if ((HeadingTarget!x = FirstQuaterX) AND 
    (HeadingTarget!y = FirstQuaterY)) {
      HeadingTarget!x :=  FourthQuaterX;
      HeadingTarget!y :=  FourthQuaterY;
} 
else {
  if ((HeadingTarget!x = SecondQuaterX) AND 
    (HeadingTarget!y = SecondQuaterY)) {
      HeadingTarget!x :=  FirstQuaterX;
      HeadingTarget!y :=  FirstQuaterY;
  } 
  else { 
    if ((HeadingTarget!x = ThirdQuaterX) AND 
        (HeadingTarget!y = ThirdQuaterY)) {
         HeadingTarget!x :=  SecondQuaterX;
         HeadingTarget!y :=  SecondQuaterY;
    }  
    else 
     if ((HeadingTarget!x = FourthQuaterX) AND 
         (HeadingTarget!y = FourthQuaterY)) {
          HeadingTarget!x :=  ThirdQuaterX;
          HeadingTarget!y :=  ThirdQuaterY;
     }
  }
}
/* CIF End TextExtension */
};
/* CIF Line (650,600),(650,1300) */
/* CIF Return (600,1300),(100,100) */
return ;
/* CIF End ProcedureDiagram */
endprocedure FindHeadingTarget2;
/* CIF ProcedureDiagram */
/* CIF Page 1 (1900,2300) */
/* CIF Frame (0,0),(1900,2300) */
/* CIF Specific SDT Version 1.0 */
/* CIF Specific SDT OriginalFileName 'C:\Battleships\BattleShips\Strategy2\OnLand.spd' */
/* CIF Specific SDT Page 1 Scale 120 Grid (50,50) AutoNumbered */
procedure OnLand2
;fpar
  in MyLandShip tShipCurrentState,
  in k Integer;
/* CIF DefaultSize (200,100) */
/* CIF Text (1350,100) */
dcl
   i,j Integer,
   PathCoord tCoordinates,
   Direct tTurnDirection,
   flagPath Boolean,
   factorAccel Real;
/* CIF End Text */
/* CIF CurrentPage 1 */
/* CIF ProcedureStart (400,250) */
start ;
/* CIF Line (500,350),(500,400) */
/* CIF Extendedtask (400,400) */
task {
/* CIF TextExtension (650,400) Right */
/* CIF Line (650,450),(600,450) */
flagPath := false;
for (i:=MyLandShip!Coordinates!x-1, i <=MyLandShip!Coordinates!x+1, i+1) {
  for (j:=MyLandShip!Coordinates!y-1, j <=MyLandShip!Coordinates!y+1, j+1) {
     if ( (i < 0) OR (i > MaxXCoordinate) OR (j < 0) OR (j > MaxYCoordinate) ) continue;
     if ( (call getDeepXY(i, j)) >= d2i(ShipsCharacter(MyLandShip!TypeShip)!MaxDeep)) {
       PathCoord!x := i;
       PathCoord!y := j;
       flagPath := true;
       break;
    }
  }
  if (flagPath = true) break;
}
/* CIF End TextExtension */
};
/* CIF Line (500,500),(500,800) */
/* CIF Decision (400,800) */
decision flagPath;
/* CIF Answer Left InvisibleBrackets */
/* CIF Line (400,850),(250,850),(250,900) */
/* CIF TextPosition (375,800) */
(false):
/* CIF Return (200,900),(100,100) */
return ;
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,900),(500,1000) */
/* CIF TextPosition (525,925) */
(true):
/* CIF Extendedtask (400,1000) */
task {
/* CIF TextExtension (650,1000) Right */
/* CIF Line (650,1050),(600,1050) */
Direct := call NewHeadingChange2(MyLandShip, PathCoord);
/* CIF End TextExtension */
};
/* CIF Line (500,1100),(500,1150) */
/* CIF Decision (400,1150) */
decision Direct;
/* CIF Answer Right InvisibleBrackets */
/* CIF Line (600,1200),(650,1200),(650,1300) */
/* CIF TextPosition (575,1250) */
(LEFT):
/* CIF Extendedtask (550,1300) */
task {
/* CIF TextExtension (800,1300) Right */
/* CIF Line (800,1350),(750,1350) */
CommandToShip(k)!OrderType := _LEFT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (650,1400),(650,1725),(500,1725),(500,1750) */
/* CIF Answer InvisibleBrackets */
/* CIF Line (500,1250),(500,1450) */
/* CIF TextPosition (400,1250) */
(RIGHT):
/* CIF Extendedtask (400,1450) */
task {
/* CIF TextExtension (800,1450) Right */
/* CIF Line (800,1500),(600,1500) */
CommandToShip(k)!OrderType := _RIGHT;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (500,1550),(500,1750) */
/* CIF Answer Left */
/* CIF Line (400,1200),(350,1200),(350,1600) */
/* CIF TextPosition (250,1250) */
else:
/* CIF Extendedtask (250,1600) */
task {
/* CIF TextExtension (800,1600) Right */
/* CIF Line (800,1650),(450,1650) */
CommandToShip(k)!OrderType := _ACCEL;
factorAccel := 2.5/
float(ShipsCharacter(MyLandShip!TypeShip)!MaxAcceleration);
if (factorAccel >= 1)  factorAccel := 1;
CommandToShip(k)!Accel := factorAccel;
CommandToShip(k)!isSet := true;
/* CIF End TextExtension */
};
/* CIF Line (350,1700),(350,1725),(500,1725),(500,1750) */
/* CIF End Decision */
enddecision;
/* CIF Return (450,1750),(100,100) */
return ;
/* CIF End Decision */
enddecision;
/* CIF End ProcedureDiagram */
endprocedure OnLand2;
